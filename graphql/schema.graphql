schema {
  query: Query
  mutation: Mutation
}

type AWBResponse @aws_api_key @aws_cognito_user_pools {
  AWBUrl: String
  message: String
  status: Boolean
}

type AboutUsResponse @aws_api_key @aws_cognito_user_pools {
  aboutUsBanner: String
  aboutUsDescription: String
  message: String
  status: String
}

type AccessModuleList @aws_api_key @aws_cognito_user_pools {
  module: String
  subModule: [AccessSubModuleList]
}

type AccessSubModuleList @aws_api_key @aws_cognito_user_pools {
  children: [String]
  title: String
}

type AccountList @aws_api_key @aws_cognito_user_pools {
  accountId: String
  accountName: String
  country: String
  createdAt: String
  createdBy: String
  merchantId: String
  smartEyeRecipient: String
  state: String
  updatedAt: String
  updatedBy: String
}

type AcquireMappingResponse @aws_api_key @aws_cognito_user_pools {
  type: String
  values: [String]
}

type AddItemToCustomerCartResponse @aws_api_key @aws_cognito_user_pools {
  customerCartId: String
  message: String
  status: Boolean
}

type AdditionalField @aws_api_key @aws_cognito_user_pools {
  dataType: String
  field: String
  type: String
  value: String
}

type AdditionalFields @aws_api_key @aws_cognito_user_pools {
  fields: [AdditionalField]
}

type AdminCheckTopUpShippingPaymentStatusResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  serviceType: String
  status: String
}

type AdminCreateOrUpdateSmartVoucherCampaignResponse @aws_cognito_user_pools {
  message: String
  smartVoucherCampaignId: String
  status: String
}

type AdminDownloadEInvoiceUploadFileResponse @aws_api_key @aws_cognito_user_pools {
  fileUrl: String
  message: String
  status: String
}

type AdminDownloadS3FileResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  s3Url: String
  status: Boolean
}

type AdminEInvoiceCustomColumnMapping @aws_api_key @aws_cognito_user_pools {
  storeCode: String
}

type AdminGenerateSmartVoucherResponse @aws_cognito_user_pools {
  campaignDetail: [CampaignDetail]
  customizedRate: Float
  errorFileKey: String
  estimatedCost: Float
  message: String
  personalizedRate: Float
  status: String
  totalCost: Float
  totalCustomers: Int
  totalExistingCustomers: Int
  totalFilteredCustomers: Int
  totalOptOutCustomers: Int
}

type AdminGenerateUpdatePaymentLinkResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  updateUrl: String
}

type AdminGetAccountListResponse @aws_api_key @aws_cognito_user_pools {
  accountList: [AccountList]
  message: String
  status: String
}

type AdminGetDocumentAuditTrailResponse @aws_api_key @aws_cognito_user_pools {
  extractedDocumentAuditLog: [DocumentAuditLog]
  message: String
  nextToken: String
  status: Boolean
  total: Int
}

type AdminGetDynamicFormAnswerResponse {
  dynamicFormAnswer: DynamicFormAnswerItem
  dynamicFormQuestion: DynamicFormItem
  message: String
  status: String
}

type AdminGetDynamicFormResponse {
  dynamicForm: DynamicFormItem
  message: String
  status: String
}

type AdminGetInStoreOrderResponse @aws_api_key @aws_cognito_user_pools {
  inStoreOrder: InStoreOrder
  message: String
  status: String
}

type AdminGetMerchantAccessListResponse @aws_api_key @aws_cognito_user_pools {
  accountList: [MerchantAccount]
  message: String
  status: String
  storeList: [MerchantStore]
  userGroupList: [MerchantUserGroup]
}

type AdminGetMerchantBusinessInfoResponse @aws_api_key @aws_cognito_user_pools {
  companyAddress: String
  companyEmail: String
  companyName: String
  message: String
  status: Boolean
}

type AdminGetModuleListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  moduleList: [AccessModuleList]
  status: String
}

type AdminGetPushNotificationResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  notification: NotificationCampaign
  selectedItem: SelectedItemSiteNotification
  status: String
}

type AdminGetUpdateExtractedDocumentStatusResponse @aws_api_key @aws_cognito_user_pools {
  status: String
  updateStartedTime: String
  updateStatus: String
}

type AdminGetUserMatrixTemplateResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  userGroupTemplates: [UserGroupTemplates]
}

type AdminGetWSChatHistoryLogResponse @aws_cognito_user_pools {
  chatHistoryLog: [ChatHistoryLog]
  disableAutoReply: Boolean
  message: String
  nextToken: String
  ongoingTicket: OngoingTicket
  status: String
  total: Int
}

type AdminLandingPageBanner @aws_api_key @aws_cognito_user_pools {
  buttonActionValue: String
  detailPageImage: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  homeImage: String
  isDisabled: Boolean
  landingPageBannerId: String
  merchantId: String
  sequence: Int
  title: String
}

type AdminListWSChatHistoryResponse @aws_cognito_user_pools {
  chatHistoryList: [ChatHistoryList]
  message: String
  nextToken: String
  status: String
  total: Int
}

type AdminModifyChatbotFileResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
}

type AdminModifyChatbotItemsResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
}

type AdminStampingCampaign @aws_api_key @aws_cognito_user_pools {
  endDate: String
  extraProductCondition: productConditionMapping
  extraProductStamp: Int
  isEnable: Boolean
  merchantId: String
  message: String
  minSpend: Float
  orderType: [String]
  reminder: [reminder]
  rewardVoucher: [RewardVoucherMapping]
  salesChannelName: [String]
  stampCondition: stampConditionMapping
  stampTypeValue: Int
  stampingCampaignCode: String
  stampingCampaignCycle: Int
  stampingCampaignCycleDurationType: String
  stampingCampaignCycleDurationValue: String
  stampingCampaignDescription: String
  stampingCampaignImage: String
  stampingCampaignListingImage: String
  stampingCampaignTitle: String
  stampingCampaignType: String
  startDate: String
  status: String
  voucherExpiryDateType: String
  voucherExpiryDateValue: String
}

type AdminTopUpShippingCreditsResponse @aws_api_key @aws_cognito_user_pools {
  gatewayPaymentParams: String
  gatewayPaymentUrl: String
  merchantOrderId: String
  message: String
  orderNumber: String
  status: String
}

type AnalyticsResponse @aws_api_key @aws_cognito_user_pools {
  currentPeriod: [DataPoint]
  message: String
  onlineStoreConversion: [OnlineStoreConversion]
  previousPeriod: [DataPoint]
  reportDetails: ResportTypeResponse
  salesPerformanceOnSalesChannel: [SalesPerformanceOnSalesChannel]
  status: String
  topResult: [TopResult]
}

type AutoContents @aws_api_key @aws_cognito_user_pools {
  answer: String
  autoContentId: String
  contentSelected: Boolean
  createdAt: String
  createdBy: String
  issueId: String
  merchantId: String
  question: String
  updatedAt: String
  updatedBy: String
}

type AutoSelectedStore @aws_api_key @aws_cognito_user_pools {
  storeId: String
  storeName: String
}

type BatchExportExtractedDocumentResponse @aws_api_key @aws_cognito_user_pools {
  documentUrl: String
  message: String
  status: String
}

type BoundingBoxCoordinate @aws_api_key @aws_cognito_user_pools {
  height: Float
  left: Float
  top: Float
  width: Float
}

type Branch @aws_api_key @aws_cognito_user_pools {
  address: String
  branchId: String
  branchName: String
  createdAt: String
  createdBy: String
  merchantId: String
  postalCode: String
  truckList: [String]
  updatedAt: String
  updatedBy: String
}

type BuyMerchantAddonResponse @aws_api_key @aws_cognito_user_pools {
  gatewayPaymentParams: String
  message: String
  paymentUrl: String
  status: String
}

type CampaignDetail @aws_cognito_user_pools {
  assumptionConversion: Float
  customerList: [CustomerList]
  estimateRevenueSplitAmt: Float
  estimateRevenueSplitRatio: Float
  previewCustomer: [PreviewCustomer]
  previewMsg: String
  targetCustomerSpending: Float
  totalTargetCustomer: Int
  voucherDiscount: Float
  voucherMinSpend: Float
}

type CartItems @aws_api_key @aws_cognito_user_pools {
  itemDescription: String
  itemId: String
  itemImage: String
  itemProperty: String
  itemTitle: String
  price: Float
  quantity: Int
}

type ChannelAutoReply @aws_api_key @aws_cognito_user_pools {
  channel: String
  isDisabled: Boolean
}

type ChatHistoryList @aws_cognito_user_pools {
  channelAutoReply: [ChannelAutoReply]
  chatDateTime: String
  chatId: String
  customerId: String
  customerName: String
  dayIndex: Int
  hasNewIssue: Boolean
  listUnreadChatHistory: [UnreadChatHistory]
  merchantId: String
  merchantReply: Boolean
  message: String
  messageCount: Int
  messageRating: String
  messageSentiment: String
  messageType: String
  recipient: String
  sender: String
  smartAlert: Boolean
  totalUnreadChatHistory: Int
}

type ChatHistoryLog @aws_api_key @aws_cognito_user_pools {
  additionalFields: AdditionalFields
  channel: String
  chatDateTime: String
  chatHistoryId: String
  isRead: Boolean
  merchantId: String
  merchantReply: Boolean
  message: String
  messageRating: String
  messageSentiment: String
  messageType: String
  platform: String
  recipient: String
  sender: String
  sentStatus: String
  ticketLink: String
  ticketNumber: String
  ticketStatus: String
  ticketTitle: String
}

type ChatbotFiles @aws_api_key @aws_cognito_user_pools {
  chatbotFileId: String
  filename: String
  status: String
}

type ChatbotItem @aws_api_key @aws_cognito_user_pools {
  answer: String
  chatbotItemId: String
  createdAt: String
  question: String
  text: String
  type: String
  updatedAt: String
  url: String
}

type ChatbotSetting @aws_api_key @aws_cognito_user_pools {
  samplePrompts: [String]
  webchatColorCode: String
}

type CheckCartResponse @aws_api_key @aws_cognito_user_pools {
  advancedOrderDateTimeSelection: [advancedOrderDateTimeSelection]
  cartItems: [CustomerCart]
  creditLimit: creditLimitDetails
  creditLimitEnabled: Boolean
  customerIsBlocked: Boolean
  customerOrderDetail: customerOrderDetail
  deliveryDiscount: deliveryDiscount
  discount: Float
  exceedCreditLimit: Boolean
  freeItems: [CustomerCart]
  isFreeDelivery: Boolean
  message: String
  promoCode: String
  promoCodeCategory: String
  promoCodeValidation: String
  status: String
  subtotal: Float
  subtotalWithTax: Float
  truckSelection: [truckSelection]
  voucherCode: String
  voucherValidation: String
}

type CheckMarketPlaceTestStatusResponse @aws_cognito_user_pools {
  message: String
  status: String
  storeCode: String
  storeName: String
}

type CheckMerchantSetupStatusResponse @aws_api_key @aws_cognito_user_pools {
  collectKYCInfo: String
  message: String
  status: Boolean
  storeSetupStatus: String
}

type ChildrenMerchant @aws_api_key @aws_cognito_user_pools {
  merchantId: String
  name: String
}

type CollectionAndItems @aws_api_key @aws_cognito_user_pools {
  collectionImage: String
  homeCollectionTitle: String
  items: [ItemByCollection]
  productCollectionId: String
  productCollectionName: String
  productCollectionSeoUrl: String
  selectedTags: [SelectedTags]
  sequence: Int
}

type ColumnMappingsObject @aws_api_key @aws_cognito_user_pools {
  inputFieldName: String
  outputFieldName: String
}

type ConditionMappingResponse @aws_api_key @aws_cognito_user_pools {
  ids: [String]
  type: String
}

type ContactUs @aws_api_key @aws_cognito_user_pools {
  contactEmail: String
  contactName: String
  contactUsId: String
  createdAt: String
  createdBy: String
  enquiry: String
  merchantId: String
  updatedAt: String
  updatedBy: String
}

type ContactUsInfoResponse @aws_api_key @aws_cognito_user_pools {
  contactUsContent: String
  contactUsFormEnabled: Boolean
  message: String
  status: String
  storeList: [ContactUsStore]
}

type ContactUsStore @aws_api_key @aws_cognito_user_pools {
  address: String
  city: String
  contactUsStoreId: String
  createdAt: String
  createdBy: String
  latitude: String
  longitude: String
  merchantId: String
  postalCode: String
  state: String
  storeCode: String
  storeId: String
  storeName: String
  updatedAt: String
  updatedBy: String
}

type ContactUsStoreListResponse @aws_api_key @aws_cognito_user_pools {
  item: [ContactUsStore]
  message: String
  status: String
}

type ContactUsStoreResponse @aws_api_key @aws_cognito_user_pools {
  item: ContactUsStore
  message: String
  status: String
}

type CreateOrUpdateCustomOrderResponse @aws_api_key @aws_cognito_user_pools {
  checkoutLink: String
  customerCartIds: [String]
  message: String
  status: String
}

type CreateOrUpdateSalesAgentResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  salesAgentId: String
  status: String
}

type CreateProductResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  productId: String
  status: String
}

type CreateStoreResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: Boolean
  storeId: String
}

type CreateSupplierResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  supplierId: String
}

type CreditLimitHistory @aws_api_key @aws_cognito_user_pools {
  actionType: String
  amount: Float
  createdAt: String
  createdBy: String
  creditLimitHistoryId: String
  customerId: String
  merchantId: String
  orderNumber: String
  refundReason: String
  updatedAt: String
  updatedBy: String
}

type CustomOrder @aws_api_key @aws_cognito_user_pools {
  billingAddress: String
  billingCity: String
  billingCountry: String
  billingPostalCode: String
  billingState: String
  checkoutLink: String
  createdAt: String
  createdBy: String
  customOrderId: String
  customerFirstName: String
  customerId: String
  customerLastName: String
  itemList: [CustomOrderItem]
  merchantId: String
  mobileNo: String
  noteToRider: String
  orderId: String
  orderNumber: String
  orderType: String
  salesAgentId: String
  shippingAddress: String
  shippingCity: String
  shippingCountry: String
  shippingPostalCode: String
  shippingState: String
  status: String
  updatedAt: String
  updatedBy: String
}

type CustomOrderItem @aws_api_key @aws_cognito_user_pools {
  itemId: String
  itemProperty: String
  itemTitle: String
  quantity: Int
  subtotal: Float
  type: String
}

type CustomOrderResponse @aws_api_key @aws_cognito_user_pools {
  cartItems: [CartItems]
  customOrder: CustomOrder
  message: String
  status: String
}

type CustomOrderStatusResponse @aws_api_key @aws_cognito_user_pools {
  checkoutLink: String
  message: String
  status: String
}

type Customer @aws_api_key @aws_cognito_user_pools {
  accountNo: String
  activated: Boolean
  address: String
  address2: String
  city: String
  consentPersonalData: Boolean
  country: String
  createdBy: String
  customerId: String
  dateOfBirth: String
  deviceEndpoint: String
  deviceToken: String
  emailSubcriptionStatus: String
  employmentStatus: String
  facebookID: String
  firstName: String
  gender: String
  hasCompletedProfile: Boolean
  hasRewarded: Boolean
  identityCard: String
  isBlocked: Boolean
  isFacebook: Boolean
  lastName: String
  lastPurchasedDateTime: String
  maritalStatus: String
  membershipPoint: Float
  membershipPointExpiryDate: String
  membershipTier: String
  merchantId: String
  mobileNo: String
  nationality: String
  password: String
  personalIncomeLevel: String
  postal: String
  primaryEmail: String
  profilePicture: String
  qrCode: String
  race: String
  salesAgentId: String
  secondaryEmail: String
  signedUpDateTime: String
  smartTaggingNames: [String]
  state: String
  taggingNames: [String]
  totalSalesOrder: Int
  totalSpent: Float
  updatedBy: String
}

type CustomerAddressesResponse @aws_api_key @aws_cognito_user_pools {
  addresses: [CustomerFavouriteAddress]
  message: String
  status: String
}

type CustomerCart @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  customOrderId: String
  customerCartId: String
  customerFirstName: String
  customerId: String
  customerLastName: String
  customerMobileNo: String
  customerPrimaryEmail: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  errorMessage: String
  facebookLiveCampaignDetailId: String
  isFreeItem: Boolean
  itemCode: String
  itemId: String
  itemImage: String
  itemProperty: String
  itemSku: String
  itemTitle: String
  itemUom: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  limitPerOrder: Int
  mandatoryItem: Boolean
  maxQuantity: Int
  merchantId: String
  modifierSubtotal: Float
  pickupCompareAtPrice: Float
  pickupPrice: Float
  pickupPriceWithoutTax: Float
  quantity: Int
  salesChannelName: String
  selectedModifierGroups: [ModifierGroups]
  shippingWeight: Float
  shippingWeightUnit: String
  storeId: String
  storeName: String
  subtotal: Float
  subtotalCompareAtPrice: Float
  subtotalWithTax: Float
  timeslotEndDateTime: String
  timeslotStartDateTime: String
  type: String
  updatedAt: String
}

type CustomerCartProduct @aws_api_key @aws_cognito_user_pools {
  customerCartProductUOMId: String
  discountAmount: Float
  discountedPrice: Float
  ecommerceMaximumQuantity: Int
  image: String
  isFreeItem: Boolean
  isOutOfStock: Boolean
  mandatoryItem: Boolean
  pickupMaximumQuantity: Int
  price: Float
  promoDiscount: Float
  quantity: Int
  status: String
  subtotal: Float
  title: String
  voucherDiscount: Float
}

type CustomerCartProductResponse @aws_api_key @aws_cognito_user_pools {
  basketValue: Float
  deliveryDiscountAmount: Float
  deliveryFee: Float
  deliveryFree: Boolean
  discountCap: Float
  discountDeliveryCap: Float
  discountProductQuantityCap: Float
  discountTypeLevel: String
  indicationMessage: String
  message: String
  products: [CustomerCartProduct]
  promoApplicable: Boolean
  promoCode: [String]
  promoDeliveryDiscount: Float
  promoDiscount: Float
  promoTitle: String
  returnTotalNumber: Int
  status: String
  storeStatus: Boolean
  storeStatusMessage: String
  totalDiscountAmount: Float
  totalPromoDiscount: Float
  totalVoucherDiscount: Float
  voucherApplicable: Boolean
  voucherDeliveryDiscount: Float
  voucherNumber: String
  voucherTitle: String
}

type CustomerCartsResponse @aws_api_key @aws_cognito_user_pools {
  customer: Customer
  items: [CustomerCart]
  message: String
  status: String
}

type CustomerFavouriteAddress @aws_api_key @aws_cognito_user_pools {
  address: String
  addressDetail: String
  city: String
  country: String
  createdAt: String
  customerFavouriteAddressId: String
  customerId: String
  isDefaultBilling: Boolean
  isDefaultShipping: Boolean
  latitude: String
  longitude: String
  merchantId: String
  name: String
  postalCode: String
  state: String
  updatedAt: String
}

type CustomerList @aws_cognito_user_pools {
  customerId: String
  firstName: String
  lastPurchasedDateTime: String
  mobileNo: String
}

type CustomerNotificationList @aws_api_key @aws_cognito_user_pools {
  notificationId: String
  notificationImage: String
  notificationMessage: String
  notificationSentDateTime: String
  notificationTitle: String
}

type CustomerOrderDetailListResponse @aws_api_key @aws_cognito_user_pools {
  isAdvancedOrderScheduleValid: Boolean
  message: String
  order: Order
  orderDetails: [OrderDetail]
  scheduledDateTime: String
  status: String
}

type CustomerOrderListResponse @aws_api_key @aws_cognito_user_pools {
  inStoreOrders: [InStoreOrder]
  message: String
  nextToken: Int
  orders: [Order]
  status: String
  total: Int
}

type CustomerOrderProduct @aws_api_key @aws_cognito_user_pools {
  description: String
  discountedPrice: Float
  ecommerceMaximumQuantity: Int
  image: String
  itemCategoryDesc: String
  mandatoryItem: Boolean
  outOfStock: Int
  pickupMaximumQuantity: Int
  price: Float
  productId: String
  quantity: Int
  sku: String
  title: String
}

type CustomerResponse @aws_api_key @aws_cognito_user_pools {
  accountNo: String
  address: String
  address2: String
  billingAddress: String
  billingCity: String
  billingCountry: String
  billingPostalCode: String
  billingState: String
  city: String
  country: String
  createdAt: String
  creditLimit: Float
  creditLimitEnabled: Boolean
  creditLimitHistory: [CreditLimitHistory]
  customerId: String
  dateOfBirth: String
  firstName: String
  firstPurchasedDateTime: String
  gender: String
  isBlocked: Boolean
  lastName: String
  lastPurchasedDateTime: String
  marketingConsent: Boolean
  membershipPoint: Float
  membershipPointExpiryDate: String
  membershipQrCode: String
  membershipTier: String
  message: String
  mobileNo: String
  nextToken: String
  postal: String
  postalCode: String
  primaryEmail: String
  race: String
  refreshToken: String
  secondaryEmail: String
  shippingAddress: String
  shippingCity: String
  shippingCountry: String
  shippingPostalCode: String
  shippingState: String
  smartTaggingNames: [String]
  state: String
  status: Boolean
  taggingNames: [String]
  totalEarnedMembershipPoint: Float
  totalItem: Int
  totalOrders: Int
  totalSpent: Float
}

type CustomerSearchProductsResponse @aws_api_key @aws_cognito_user_pools {
  items: [ItemByCollection]
  message: String
  nextToken: String
  status: String
  total: Int
}

type CustomerSegmentsList @aws_api_key @aws_cognito_user_pools {
  customerCount: Int
  totalOrderCount: Int
  totalOrderRevenue: Float
}

type CustomerSignInResponse @aws_api_key @aws_cognito_user_pools {
  accessToken: String
  accountNo: String
  customerId: String
  expiredAt: Int
  forceResetPassword: Boolean
  merchantId: String
  message: String
  otpRequired: Boolean
  redirectOtp: Boolean
  refreshToken: String
  sessionID: String
  status: Boolean
}

type CustomerSignOutResponse @aws_api_key @aws_cognito_user_pools {
  accountNo: String
  customerId: String
  merchantId: String
  message: String
  status: Boolean
}

type CustomerSignUpResponse @aws_api_key @aws_cognito_user_pools {
  accountNo: String
  customerId: String
  merchantId: String
  message: String
  signInResponse: CustomerSignInResponse
  status: Boolean
}

type CustomerVoucher @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  customerId: String
  customerVoucherId: String
  merchantId: String
  status: String
  updatedAt: String
  updatedBy: String
  voucherCode: String
  voucherExpiryDate: String
  voucherId: String
}

type CustomerWishList @aws_api_key @aws_cognito_user_pools {
  compareAtPrice: Float
  createdAt: String
  createdBy: String
  customerId: String
  customerWishListId: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  itemId: String
  itemImage: String
  itemProperty: String
  itemSeoUrl: String
  itemSku: String
  itemTitle: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  merchantId: String
  pickupCompareAtPrice: Float
  pickupPrice: Float
  pickupPriceWithoutTax: Float
  price: Float
  priceWithoutTax: Float
  productId: String
  salesChannelName: String
  updatedAt: String
  updatedBy: String
}

type CustomerWishListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  products: [CustomerWishList]
  status: Boolean
}

type DashboardResponse @aws_api_key @aws_cognito_user_pools {
  dashboardEmbedUrl: String
  message: String
  status: String
}

type DataLabelsObject @aws_api_key @aws_cognito_user_pools {
  formData: [TableFormDataObject]
  tableData: [TableFormDataObject]
}

type DataPoint @aws_api_key @aws_cognito_user_pools {
  X: String
  Y: String
}

type DeliveryOption @aws_api_key @aws_cognito_user_pools {
  estimatedDuration: String
  name: String
  rate: Float
}

type DeliveryQuotationResponse @aws_api_key @aws_cognito_user_pools {
  deliveryOptions: [DeliveryOption]
  message: String
  status: String
}

type DeliveryTransitionLog @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  deliveryNumber: String
  deliveryPartner: String
  deliveryTransitionLogId: String
  merchantId: String
  orderNumber: String
  status: String
  updatedAt: String
  updatedBy: String
}

type DisplayProduct @aws_api_key @aws_cognito_user_pools {
  categories: String
  category: String
  createdBy: String
  departments: String
  description: String
  dimension: String
  discount: Float
  discountEndDate: String
  discountPercentage: Float
  discountStartDate: String
  discountedPrice: Float
  ecommerceMaximumQuantity: Int
  image: String
  isAvailable: Boolean
  isDisabled: Boolean
  itemCategoryCode: String
  minDeliveryDuration: Int
  minFoodPreparationDuration: Int
  name: String
  pickupMaximumQuantity: Int
  price: Float
  productId: String
  promoCode: String
  promotionDescription: String
  sku: String
  taggings: String
  temperature: String
  title: String
  uom: String
  updatedBy: String
}

type DocumentAuditLog @aws_api_key @aws_cognito_user_pools {
  documentNo: String
  extractedDocumentId: String
  status: String
  updateHistory: String
  updatedAt: String
  updatedBy: String
}

type DocumentColumnMappings @aws_api_key @aws_cognito_user_pools {
  actualValue: String
  alternativeValueList: [String]
  createdAt: String
  createdBy: String
  extractedDocumentColumnMappingId: String
  fieldNameList: [String]
  merchantId: String
  message: String
  status: String
  updatedAt: String
  updatedBy: String
}

type DocumentData @aws_api_key @aws_cognito_user_pools {
  formData: [DocumentFormData]
  tableData: [DocumentTableData]
}

type DocumentFormData @aws_api_key @aws_cognito_user_pools {
  fieldName: String
  fieldValue: String
}

type DocumentLabelValueDetection @aws_api_key @aws_cognito_user_pools {
  boundingBox: BoundingBoxCoordinate
  confidence: Float
  fieldName: String
  fieldValue: String
}

type DocumentTableData @aws_api_key @aws_cognito_user_pools {
  fieldName: String
  fieldValue: [String]
}

type Documents @aws_api_key @aws_cognito_user_pools {
  approvedStatus: Boolean
  conversionStatus: Boolean
  createdAt: String
  createdBy: String
  data: DocumentData
  documentDate: String
  documentNo: String
  documentType: String
  executionId: String
  extractedDocumentId: String
  extractedDocumentTemplateId: String
  formDetection: [[DocumentLabelValueDetection]]
  inputFileName: String
  inputS3Path: String
  isDuplicate: Boolean
  merchantId: String
  message: String
  outputS3Path: [String]
  outputS3PathBatchCsv: String
  remark: String
  status: String
  tableDetection: [[DocumentLabelValueDetection]]
  updatedAt: String
  updatedBy: String
}

type DownloadJobStatusResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: Boolean
  url: String
}

type DynamicFormAnswerItem @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  dynamicFormAnswerId: String
  dynamicFormId: String
  layout: String
  merchantId: String
  respondentEmail: String
  taggingNames: [String]
  updatedAt: String
  updatedBy: String
}

type DynamicFormItem @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  dynamicFormId: String
  layout: String
  merchantId: String
  numberOfAnswer: Int
  updatedAt: String
  updatedBy: String
}

type EInvoiceConsolidated @aws_api_key @aws_cognito_user_pools {
  consolidationPeriod: String
  createdAt: String
  createdBy: String
  csvPath: String
  currency: String
  currencyExchangeRate: Float
  eInvoiceConsolidatedId: String
  eInvoiceNo: String
  finalTotalPayableAmount: Float
  listEInvoicesId: [String]
  merchantId: String
  month: String
  name: String
  part: String
  pdfPath: String
  source: String
  status: String
  storeCode: String
  totalAmount: Float
  totalEInvoice: Int
  updatedAt: String
  updatedBy: String
  year: String
}

type EInvoiceDetailResponse @aws_api_key @aws_cognito_user_pools {
  adminStoreActivated: Boolean
  customColumnMap: AdminEInvoiceCustomColumnMapping
  invoiceLvlAdj: Boolean
  items: EInvoiceList
  message: String
  status: Boolean
}

type EInvoiceInfoStatusResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  url: String
}

type EInvoiceList @aws_api_key @aws_cognito_user_pools {
  additionalChargeAmount: Float
  adjustmentAmount: Float
  adjustmentStatus: String
  adjustmentType: String
  adminReason: String
  asCompany: Boolean
  companyAddressLine: [String]
  companyCityName: String
  companyName: String
  companyPostalCode: String
  companyStateCode: String
  companyStateName: String
  companyTin: String
  createdAt: String
  createdBy: String
  currency: String
  customerReason: String
  discountAmount: Float
  documentType: String
  eInvoiceId: String
  eInvoiceNo: String
  email: String
  errorMessages: [String]
  fullName: String
  idNumber: String
  idType: String
  isInAdjustment: Boolean
  maxRejectCancelDocsDateTime: String
  merchantId: String
  orderDetails: [EInvoiceOrderDetails]
  parentEInvoiceNo: String
  parentId: String
  pdfPath: String
  phoneNumber: String
  posType: String
  receiptNumber: String
  source: String
  sstRegistrationNumber: String
  status: String
  storeCode: String
  timeline: [Timeline]
  totalAdjustmentAmount: Float
  totalExcludingTax: Float
  totalIncludingTax: Float
  totalNetAmount: Float
  totalPayableAmount: Float
  totalTaxAmount: Float
  updatedAt: String
  updatedBy: String
}

type EInvoiceListResponse @aws_api_key @aws_cognito_user_pools {
  adminCustomColumnMapping: AdminEInvoiceCustomColumnMapping
  adminStoreActivated: Boolean
  items: [EInvoiceList]
  nextToken: String
  status: Boolean
  total: Int
}

type EInvoiceMerchantDetail @aws_api_key @aws_cognito_user_pools {
  companyAddressLine: [String]
  companyCityName: String
  companyName: String
  companyPostalCode: String
  companyStateName: String
  companyTin: String
  companyTourismTaxRegistrationNumber: String
  countryCode: String
  descriptionSellerActivity: String
  email: String
  environment: String
  idNumber: String
  idType: String
  industryClassificationCode: String
  lhdnInformation: LhdnInformation
  logo: String
  notificationEmail: String
  phoneNumber: String
  qbInformation: qbInformation
  sstRegistrationNumber: String
}

type EInvoiceOrderDetails @aws_api_key @aws_cognito_user_pools {
  additionalCharge: Float
  adjustmentAmount: Float
  description: String
  discount: Float
  itemClass: String
  productId: String
  qty: Int
  subtotal: Float
  taxAmount: Float
  totalPrice: Float
  unitPrice: Float
}

type EInvoiceQuickBookCustomer @aws_api_key @aws_cognito_user_pools {
  addressLine1: String
  addressLine2: String
  addressLine3: String
  city: String
  companyName: String
  companyTin: String
  country: String
  countryCode: String
  createdAt: String
  createdBy: String
  customerName: String
  eInvoiceQuickBookCustomersId: String
  email: String
  idNumber: String
  idType: String
  merchantId: String
  phoneNumber: String
  postalCode: String
  quickBookCustomerClassCode: String
  quickBookCustomerClassCodeName: String
  quickBookCustomerId: String
  quickBookCustomerName: String
  sstRegistrationNumber: String
  stateCode: String
  stateName: String
  updatedAt: String
  updatedBy: String
}

type EInvoiceQuickBookItem @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  eInvoiceQuickBookItemsId: String
  merchantId: String
  quickBookItemClassCode: String
  quickBookItemClassCodeName: String
  quickBookItemId: String
  quickBookItemName: String
  updatedAt: String
  updatedBy: String
}

type EInvoiceUpload @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  eInvoiceUploadId: String
  errorPath: String
  fileName: String
  inputPath: String
  merchantId: String
  status: String
  totalInvoice: Int
  updatedAt: String
  updatedBy: String
}

type EmailBody @aws_cognito_user_pools {
  button: String
  divider: Boolean
  emailText: String
  link: String
  media: EmailMedia
}

type EmailButtonDesign @aws_cognito_user_pools {
  buttonColor: String
  buttonFontFamily: String
  buttonFontSize: String
  buttonRadius: String
  buttonTextColor: String
}

type EmailDesign @aws_cognito_user_pools {
  buttonDesign: EmailButtonDesign
  dividersDesign: EmailDividersDesign
  linkDesign: EmailLinkDesign
  template: EmailTemplate
  textStyles: EmailTextStyles
}

type EmailDividersDesign @aws_cognito_user_pools {
  dividerColor: String
  dividerHeight: String
  dividerStyle: String
}

type EmailLinkDesign @aws_cognito_user_pools {
  linkColor: String
  linkFontFamily: String
  linkFontSize: String
  linkTextStyle: String
}

type EmailMedia @aws_cognito_user_pools {
  mediaContent: String
  mediaType: String
}

type EmailTemplate @aws_cognito_user_pools {
  backgroundColor: String
  bodyColor: String
}

type EmailTextStyles @aws_cognito_user_pools {
  heading1Color: String
  heading1FontFamily: String
  heading1FontSize: String
  heading2Color: String
  heading2FontFamily: String
  heading2FontSize: String
  paragraphFontFamily: String
  paragraphFontSize: String
  parapgraphColor: String
}

type EventFlow @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  eventFlowId: String
  eventType: String
  flow: String
  isDisabled: Boolean
  merchantId: String
  title: String
  updatedAt: String
  updatedBy: String
}

type ExportCSVResponse @aws_api_key @aws_cognito_user_pools {
  downloadJobId: String
  message: String
  status: Boolean
}

type ExtractedDocumentLookup @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  csvS3Key: String
  extractedDocumentLookupId: String
  fieldName: String
  fieldType: String
  fieldValue: [String]
  headerValues: [String]
  lookupName: String
  merchantId: String
  skipCsvHeaders: Boolean
  updatedAt: String
  updatedBy: String
}

type ExtractedDocumentTemplate @aws_api_key @aws_cognito_user_pools {
  columnMappings: [ColumnMappingsObject]
  createdAt: String
  createdBy: String
  csvExportFrequency: csvExportFrequencyObject
  dataLabels: DataLabelsObject
  defaultTemplate: Boolean
  documentS3Key: String
  documentTemplateName: String
  documentTemplateType: String
  extractedDocumentTemplateId: String
  isExportCsv: Boolean
  lookupFields: [OutputLookupField]
  merchantId: String
  updatedAt: String
  updatedBy: String
}

type FacebookLiveCampaign @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  facebookLiveCampaignId: String
  merchantId: String
  message: String
  salesChannelName: String
  scheduleEndDateTime: String
  scheduleStartDateTime: String
  status: String
  storeId: String
  storeName: String
  title: String
  updatedAt: String
  updatedBy: String
}

type FacebookLiveCampaignDetail @aws_api_key @aws_cognito_user_pools {
  associatedProducts: [ProductInBundle]
  commentedQuantity: Int
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  facebookLiveCampaignDetailId: String
  facebookLiveCampaignId: String
  hotkey: String
  itemId: String
  itemImage: String
  itemProperty: String
  itemSku: String
  itemTitle: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  merchantId: String
  productId: String
  quantity: Int
  updatedAt: String
  updatedBy: String
}

type FacebookLiveCampaignSalesPerformanceResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  totalOrders: Float
  totalSales: Float
}

type FacebookLiveMessageList @aws_cognito_user_pools {
  facebookLiveComment: String
  facebookMessengerResponseOutOfStock: String
  facebookMessengerResponsePartialSuccess: String
  facebookMessengerResponseSuccess: String
}

type Faq @aws_api_key @aws_cognito_user_pools {
  answer: String
  createdAt: String
  createdBy: String
  faqCategory: String
  faqId: String
  faqType: String
  merchantId: String
  parentId: String
  question: String
  sequence: Int
  updatedAt: String
  updatedBy: String
}

type FaqCategory @aws_api_key @aws_cognito_user_pools {
  childItems: [Faq]
  createdAt: String
  createdBy: String
  faqCategoryId: String
  merchantId: String
  sequence: Int
  title: String
  updatedAt: String
  updatedBy: String
}

type FaqCategoryResponse @aws_api_key @aws_cognito_user_pools {
  item: FaqCategory
  message: String
  status: String
}

type FaqItemResponse @aws_api_key @aws_cognito_user_pools {
  item: Faq
  message: String
  status: String
}

type FaqList @aws_api_key @aws_cognito_user_pools {
  category: String
  faqContent: [Faq]
}

type FaqResponse @aws_api_key @aws_cognito_user_pools {
  categories: [FaqCategory]
  items: [FaqList]
  message: String
  status: Boolean
}

type FeaturedHomeCollectionCacheResponse @aws_api_key @aws_cognito_user_pools {
  homeCollections: [HomeCollection]
  message: String
  status: String
}

type FeedbackHistory @aws_api_key @aws_cognito_user_pools {
  channel: String
  createdAt: String
  createdBy: String
  customerId: String
  dateOfVisit: String
  description: String
  feedbackId: String
  hasNewMessage: Boolean
  issueDetail: [IssueDetail]
  issueNumber: String
  issueStatus: String
  jiraTicketNumber: String
  merchantId: String
  platform: String
  storeId: String
  storeName: String
  timeOfVisit: String
  title: String
  totalMessage: Int
  updatedAt: String
  updatedBy: String
}

type FilterTab @aws_api_key @aws_cognito_user_pools {
  condition: String
  createdAt: String
  createdBy: String
  filterTabId: String
  merchantId: String
  title: String
  type: String
  updatedAt: String
  updatedBy: String
  userId: String
}

type FilterTabResponse @aws_cognito_user_pools {
  filterTabs: [FilterTab]
}

type GalleryDetail @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  filesize: Int
  galleryDetailId: String
  merchantId: String
  name: String
  s3Path: String
  updatedAt: String
  updatedBy: String
}

type GenerateVoucherQrCodeResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  qrCodeString: String
  qrImageLink: String
  status: String
}

type GetChatHistoryLogResponse @aws_api_key @aws_cognito_user_pools {
  chatHistoryLog: [ChatHistoryLog]
  message: String
  nextToken: String
  status: String
  total: Int
}

type GetChatbotSettingResponse @aws_api_key @aws_cognito_user_pools {
  chatbotSetting: ChatbotSetting
  message: String
  status: String
}

type GetCollectionsResponse @aws_api_key @aws_cognito_user_pools {
  collections: [KdsHomeCollectionsList]
  message: String
  selectedCollectionsItems: KdsSelectedCollectionItems
  status: String
}

type GetCustomerVoucherListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  totalItem: Int
  voucherList: [VoucherList]
}

type GetFacebookLiveCampaignResponse @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  embeddedHtmlLink: String
  facebookLiveCampaignDetails: [FacebookLiveCampaignDetail]
  facebookLiveCampaignId: String
  merchantId: String
  salesChannelName: String
  scheduleEndDateTime: String
  scheduleStartDateTime: String
  status: String
  storeId: String
  storeName: String
  title: String
  updatedAt: String
  updatedBy: String
}

type GetFacebookLiveMessageResponse @aws_cognito_user_pools {
  merchantId: String
  messageList: FacebookLiveMessageList
  status: Boolean
}

type GetHelpCenterOrderListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  orders: [OrderOrVoucher]
  status: String
}

type GetItemQuantityForSalesResponse @aws_api_key @aws_cognito_user_pools {
  itemId: String
  message: String
  quantityForSales: String
  status: String
}

type GetManualPaymentOrderStatusResponse @aws_api_key @aws_cognito_user_pools {
  grandTotal: Float
  message: String
  orderId: String
  orderStatus: String
  status: String
}

type GetMemberPointLogResponse @aws_api_key @aws_cognito_user_pools {
  memberPointLog: [MemberPointLog]
  message: String
  nextToken: String
  status: String
  total: Int
}

type GetNotificationBarMessageResponse @aws_cognito_user_pools {
  notificationMessage: String
}

type GetPendingProfessionalServicesMerchantListResponse @aws_api_key @aws_cognito_user_pools {
  merchantList: [Merchant]
  message: String
  status: Boolean
}

type GetProductInventoryResponse @aws_api_key @aws_cognito_user_pools {
  items: [ProductInventoryBasedOnSalesChannel]
  message: String
  status: String
  updatedAt: String
  updatedBy: String
}

type GetProductResponse @aws_cognito_user_pools {
  message: String
  product: Product
  status: String
}

type GetPromoCodeCampaignResponse @aws_api_key @aws_cognito_user_pools {
  items: [PromoCodeCampaign]
  message: String
  status: String
}

type GetSmartTaggingResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  smartTagging: SmartTagging
  status: Boolean
}

type GetStockMovementResponse @aws_cognito_user_pools {
  buyerNotes: String
  createdAt: String
  createdBy: String
  expectedArrivalDate: String
  merchantId: String
  referenceNumber: String
  status: String
  stockMovementDetails: [StockMovementDetail]
  stockMovementId: String
  supplierId: String
  supplierName: String
  taggingNames: [String]
  trackingNumber: String
  updatedAt: String
  updatedBy: String
}

type GetStoreListByProductResponse @aws_api_key @aws_cognito_user_pools {
  items: [StoreListByProduct]
  message: String
  status: String
}

type GetSubscriptionHistoryListResponse @aws_api_key @aws_cognito_user_pools {
  merchantOrderList: [subscriptionHistoryList]
  message: String
  status: Boolean
  subscriptionEndDate: String
  subscriptionStartDate: String
  subscriptionType: String
}

type GetSupportStatementCacheResponse @aws_api_key @aws_cognito_user_pools {
  items: [SupportStatement]
  message: String
  status: Boolean
}

type GetVirtualGoodsRedemptionResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  virtualGoodsRedemption: [VirtualGoods]
}

type GetVoucherDetailResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  voucher: VoucherList
}

type GetVoucherResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  voucher: adminVoucher
}

type GiftCardDetail @aws_api_key @aws_cognito_user_pools {
  customerId: String
  giftCardAmount: Float
  giftCardMessage: String
  giftCardTitle: String
  image: String
  ribbonColor: String
  senderName: String
  voucherCode: String
}

type GiftCardDetailResponse @aws_api_key @aws_cognito_user_pools {
  giftCardDetail: GiftCardDetail
  message: String
  status: Boolean
}

type GiftCardTemplate @aws_api_key @aws_cognito_user_pools {
  description: String
  giftCardTemplateId: String
  image: String
  isDisabled: Boolean
  ribbonColor: String
  sequence: Int
  title: String
}

type GiftCardTemplateList @aws_api_key @aws_cognito_user_pools {
  category: String
  giftCardTemplateList: [GiftCardTemplate]
}

type GiftCardTemplateListResponse @aws_api_key @aws_cognito_user_pools {
  giftCardTemplateList: [GiftCardTemplateList]
  message: String
  status: Boolean
  totalItem: Int
}

type HeaderResponse @aws_api_key @aws_cognito_user_pools {
  image: String
  message: String
  status: Boolean
  title: String
}

type HelpCenterFaq @aws_api_key {
  _typename: String
  answer: String
  createdAt: String
  faqCategory: String
  helpCenterFaqId: String
  question: String
  sequence: Int
  updatedAt: String
}

type HelpCenterGetChatDetailResponse @aws_api_key @aws_cognito_user_pools {
  issue: HelpCenterIssueInfo
  issueDetail: [IssueDetail]
  message: String
  status: Boolean
}

type HelpCenterGetChatListResponse @aws_api_key @aws_cognito_user_pools {
  feedback: [FeedbackHistory]
  hasNewMessage: Boolean
  issue: [IssueHistory]
  message: String
  status: String
}

type HelpCenterIssueInfo @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  issueClosedDate: String
  issueId: String
  issueNumber: String
  issueStatus: String
  lastConversationSummary: String
  orderId: String
  orderNumber: String
  title: String
  updatedAt: String
}

type HelpCenterSubmitResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  ticketInfo: TicketInfo
}

type HomeCollection @aws_api_key @aws_cognito_user_pools {
  collectionIcon: String
  collectionId: String
  collectionImage: String
  collectionName: String
  collectionSeoUrl: String
  createdAt: String
  createdBy: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  homeCollectionId: String
  homeCollectionType: String
  isDisabled: Boolean
  merchantId: String
  sequence: Int
  title: String
  updatedAt: String
  updatedBy: String
}

type HomeCollectionResponse @aws_api_key @aws_cognito_user_pools {
  homeCollection: HomeCollection
  message: String
  status: String
}

type HomeScreenCollectionCacheResponse @aws_api_key @aws_cognito_user_pools {
  collectionsAndItems: [CollectionAndItems]
  hasStock: Boolean
  message: String
  productStatus: Boolean
  status: String
}

type Icon @aws_api_key @aws_cognito_user_pools {
  description: String
  iconId: String
  image: String
  merchantId: String
  title: String
}

type IconBarResponse @aws_api_key @aws_cognito_user_pools {
  icons: [Icon]
  message: String
  status: Boolean
}

type IdsWithQuantities @aws_api_key @aws_cognito_user_pools {
  id: String
  quantity: Int
}

type ImportJobStatusResponse @aws_api_key @aws_cognito_user_pools {
  errorFileKey: String
  errorMessage: String
  errorRecords: [String]
  fileName: String
  importJobId: String
  message: String
  status: Boolean
  successfulUploads: Int
  uploadStatus: String
}

type InStoreOrder @aws_api_key @aws_cognito_user_pools {
  accountNo: String
  area: String
  createdAt: String
  createdBy: String
  duplicateRecords: [InStoreOrder]
  firstName: String
  hasDuplicateRecords: Boolean
  inStoreOrderId: String
  lastName: String
  merchantId: String
  posTerminalNo: String
  receiptNo: String
  status: String
  storeArea: String
  storeName: String
  storeNo: String
  totalAmountSpent: String
  totalDiscountAmount: String
  totalPointsCollected: String
  totalPointsRedeemed: String
  totalVoucherDiscountAmount: String
  transactionDate: String
  transactionTime: String
  updatedAt: String
  updatedBy: String
}

type InputFrequencySegment @aws_api_key @aws_cognito_user_pools {
  endDate: String
  noOfOrders: Int
  startDate: String
}

type IssueDetail @aws_api_key @aws_cognito_user_pools {
  imageList: [String]
  isCustomerMessage: Boolean
  issueDetailDateTime: String
  issueDetailId: String
  message: String
  platform: String
  rating: String
  videoList: [String]
}

type IssueHistory @aws_api_key @aws_cognito_user_pools {
  assignee: String
  channel: String
  contactNumber: String
  createdAt: String
  createdBy: String
  customerId: String
  hasNewMessage: Boolean
  issueClosedDate: String
  issueDateTime: String
  issueDetail: [IssueDetail]
  issueId: String
  issueNumber: String
  issueStatus: String
  jiraTicketNumber: String
  merchantId: String
  orderId: String
  orderNumber: String
  platform: String
  title: String
  totalAmount: Float
  totalMessage: Int
  totalQuantity: Int
  updatedAt: String
  updatedBy: String
}

type ItemByCollection @aws_api_key @aws_cognito_user_pools {
  compareAtPrice: Float
  cover: String
  deliveryCompareAtPrice: Float
  deliveryCompareAtPriceRange: String
  deliveryPrice: Float
  deliveryPriceRange: String
  deliveryPriceWithTax: Float
  deliveryPriceWithTaxRange: String
  description: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  hasStock: Boolean
  hasVariant: Boolean
  homeCollectionId: String
  homeCollectionTitle: String
  image: [String]
  isDisabled: Boolean
  isNewArrival: Boolean
  isPreOrder: Boolean
  itemId: String
  itemProperty: String
  memberDiscount: MemberDiscount
  price: Float
  priceWithTax: Float
  productIsDisabled: Boolean
  promotionEndDateTime: String
  promotionStartDateTime: String
  seoUrl: String
  title: String
  totalRatings: Int
  totalReviews: Int
  updatedAt: String
  video: String
}

type ItemsByCollectionResponse @aws_api_key @aws_cognito_user_pools {
  items: [ItemByCollection]
  message: String
  nextToken: String
  productCollectionBanner: String
  productCollectionId: String
  productCollectionName: String
  status: String
  total: Int
}

type KdsGetMerchantServiceCatalog @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  description: String
  packageId: String
  packageType: String
  price: Float
  title: String
  updatedAt: String
  updatedBy: String
}

type KdsGetMerchantServiceCatalogResponse @aws_api_key @aws_cognito_user_pools {
  addOnPackageList: [KdsGetMerchantServiceCatalog]
  subscriptionPackageList: [KdsGetMerchantServiceCatalog]
}

type KdsGetStoreInformationResponse @aws_api_key @aws_cognito_user_pools {
  aboutUsBanner: String
  address: String
  addressDetail: String
  city: String
  country: String
  domain: String
  email: String
  isOnDemandDeliveryEnabled: Boolean
  latitude: Float
  longitude: Float
  maxAdvancedOrderDay: Int
  message: String
  name: String
  onDemandMaxDistance: Float
  postalCode: String
  smsMobileNo: String
  state: String
  webQrCode: String
}

type KdsHomeCollectionsList @aws_api_key @aws_cognito_user_pools {
  homeCollectionId: String
  isDisabled: Boolean
  title: String
}

type KdsOrder @aws_api_key @aws_cognito_user_pools {
  collectionMethod: String
  customerName: String
  deliveryPartnerName: String
  deliveryTime: String
  orderId: String
  orderNumber: String
  orderQuantity: String
  status: String
}

type KdsOrderDetail @aws_api_key @aws_cognito_user_pools {
  collectionMethod: String
  customerName: String
  deliveryPartnerName: String
  deliveryTime: String
  orderId: String
  orderNumber: String
  orderQuantity: String
  orderStatus: String
  productList: [KdsProductDetail]
  remark: String
  riderContact: String
  riderName: String
  status: String
}

type KdsOrderListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  newAdvancedOrderCount: Int
  newDeliveryOrderCount: Int
  newDineInOrderCount: Int
  newPickUpOrderCount: Int
  nextToken: String
  orderList: [Order]
  status: Boolean
  total: Int
}

type KdsProductDetail @aws_api_key @aws_cognito_user_pools {
  itemTitle: String
  kdsOrderDetailId: String
  productCode: String
  productStatus: String
  quantity: Int
}

type KdsSelectedCollectionItems @aws_api_key @aws_cognito_user_pools {
  homeCollectionId: String
  homeCollectionTitle: String
  nextToken: String
  products: [ItemByCollection]
  total: Int
}

type KnowledgeBase @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  knowledgeBaseId: String
  merchantId: String
  processedS3Path: String
  sourceUrl: String
  status: String
  type: String
  updatedAt: String
  updatedBy: String
}

type LHDNAdjustmentStatusResponse @aws_api_key @aws_cognito_user_pools {
  adjustmentId: String
  message: String
  status: String
}

type LandingPageBanner @aws_api_key @aws_cognito_user_pools {
  buttonActionValue: String
  detailPageImage: String
  homeImage: String
  isDisabled: Boolean
  landingPageBannerId: String
  merchantId: String
  sequence: Int
  title: String
}

type LandingPageBannerCacheResponse @aws_api_key @aws_cognito_user_pools {
  banners: [LandingPageBanner]
  message: String
  status: Boolean
}

type LandingPageBannerDetailResponse @aws_api_key @aws_cognito_user_pools {
  bannerDetail: LandingPageBanner
  message: String
  status: Boolean
}

type LandingPageBannerResponse @aws_api_key @aws_cognito_user_pools {
  landingPageBanner: AdminLandingPageBanner
  message: String
  status: String
}

type LandingPageMenu @aws_api_key @aws_cognito_user_pools {
  actionId: String
  actionType: String
  createdAt: String
  createdBy: String
  effectiveEndDate: String
  effectiveStartDate: String
  image: String
  isDisabled: Boolean
  landingPageMenuId: String
  merchantId: String
  sequenceOrder: Int
  title: String
  updatedAt: String
  updatedBy: String
}

type LandingPageMenuCacheResponse @aws_api_key @aws_cognito_user_pools {
  menus: [LandingPageMenu]
  message: String
  status: Boolean
}

type LandingPageProduct @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  description: String
  effectiveEndDate: String
  effectiveStartDate: String
  image: String
  isDisabled: Boolean
  landingPageProductId: String
  merchantId: String
  productType: String
  productTypeId: String
  sequenceOrder: Int
  title: String
  updatedAt: String
  updatedBy: String
}

type LandingPageProductCacheResponse @aws_api_key @aws_cognito_user_pools {
  departmentId: String
  message: String
  productTaggingId: String
  products: [DisplayProduct]
  status: Boolean
  title: String
  totalCount: Int
}

type LazadaProductSpecResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  products: [MarketPlaceProductSpecList]
  status: Boolean
}

type LegalPolicy @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  isDisabled: Boolean
  merchantId: String
  policyContent: String
  policyType: String
  updatedAt: String
  updatedBy: String
}

type LegalPolicyResponse @aws_api_key @aws_cognito_user_pools {
  legalPolicies: [LegalPolicy]
  message: String
  status: Boolean
}

type LhdnInformation @aws_api_key @aws_cognito_user_pools {
  clientId: String
  clientSecret1: String
  clientSecret2: String
  digicertExist: Boolean
  digicertPin: String
}

type ListChatbotItemsResponse @aws_api_key @aws_cognito_user_pools {
  chatbotItems: [ChatbotItem]
  message: String
  nextToken: String
  status: Boolean
  total: Int
}

type ListItemReviewsResponse @aws_api_key @aws_cognito_user_pools {
  items: [ProductReview]
  message: String
  nextToken: String
  status: String
  total: Int
}

type ListItemsAndPricingResponse @aws_api_key @aws_cognito_user_pools {
  bundles: [ProductBundleAndPricing]
  message: String
  status: String
  uoms: [ProductUOMAndPricing]
}

type ListKdsOrderHistory @aws_api_key @aws_cognito_user_pools {
  message: String
  noOfCancelledOrder: Int
  noOfOrderCompleted: Int
  noOfRefundedOrder: Int
  orderList: [ListKdsOrderHistoryDetails]
  status: Boolean
  totalAmountOfPendingRefundAmount: Float
  totalAmountOfRefundedAmount: Float
  totalAmountOfRevenue: Float
}

type ListKdsOrderHistoryDetails @aws_api_key @aws_cognito_user_pools {
  amount: Float
  orderDateTime: String
  orderId: String
  orderNumber: String
}

type ListMarketPlaceSyncHistoriesResponse @aws_cognito_user_pools {
  items: [MarketPlaceSyncHistory]
  nextToken: String
  total: Int
}

type ListMerchantCreditTransactionsResponse @aws_api_key @aws_cognito_user_pools {
  items: [MerchantCreditTransaction]
  nextToken: String
  total: Int
}

type ListProductsWithProductUOMsResponse @aws_api_key @aws_cognito_user_pools {
  items: [ProductWithProductUOMs]
  nextToken: String
  total: Int
}

type ListShippingZonesAndRatesResponse @aws_api_key @aws_cognito_user_pools {
  items: [ShippingZone]
  message: String
  status: String
}

type ListSimilarItemsResponse @aws_api_key @aws_cognito_user_pools {
  items: [SimilarItem]
  message: String
  status: String
}

type ListStoreOpenClose @aws_api_key @aws_cognito_user_pools {
  address: String
  item: [StoreOpenCloseHour]
  message: String
  orderOption: [String]
  status: Boolean
  warungStoreStatus: String
}

type ListStoreProductsBySalesChannelResponse @aws_api_key @aws_cognito_user_pools {
  bundles: [ProductBundleAndPricing]
  message: String
  status: String
  uoms: [ProductUOMAndPricing]
}

type LiveCustomerCartProductResponse @aws_api_key @aws_cognito_user_pools {
  products: [CustomerCartProduct]
}

type LookupAutoCompleteWordsResponse @aws_api_key @aws_cognito_user_pools {
  lookupWordList: [LookupWordList]
  message: String
  status: Boolean
}

type LookupWordList @aws_api_key @aws_cognito_user_pools {
  fieldName: String
  fieldValues: [String]
}

type ManualPaymentOptionResponse @aws_api_key @aws_cognito_user_pools {
  TNGPaymentLink: String
  accountNumber: String
  bankAccountName: String
  isBankTransfer: Boolean
  isDisabled: Boolean
  manualPaymentMethodName: String
  manualPaymentOptionsId: String
  merchantId: String
  paymentInstructions: String
  qrCode: String
}

type MarketPlaceProductSpecList @aws_api_key @aws_cognito_user_pools {
  actualName: String
  hasChildren: Boolean
  inputType: String
  isRequired: Boolean
  parentId: String
  type: String
  typeId: String
  typeName: String
  typeValues: [MarketPlaceProductSpecValueList]
}

type MarketPlaceProductSpecValueList @aws_api_key @aws_cognito_user_pools {
  valueEnglishName: String
  valueId: String
  valueName: String
  valueUnit: String
}

type MarketPlaceSyncHistory @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantId: String
  merketPlaceSyncHistoryId: String
  noOfRecords: Int
  salesChannelId: String
  salesChannelName: String
  syncStatus: String
  updatedAt: String
  updatedBy: String
}

type MemberDiscount @aws_api_key @aws_cognito_user_pools {
  type: String
  value: Float
}

type MemberPointLog @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  customerId: String
  expiredDateTime: String
  memberId: String
  memberPointLogId: String
  orderId: String
  orderNumber: String
  points: Float
  referenceId: String
  type: String
  updatedAt: String
}

type MembershipTier @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  membershipTierId: String
  merchantId: String
  point: Float
  title: String
  updatedAt: String
  updatedBy: String
}

type MembershipTierSmartVoucher @aws_api_key @aws_cognito_user_pools {
  membershipTierId: String
  title: String
}

type Menu @aws_api_key @aws_cognito_user_pools {
  actionId: String
  actionType: String
  createdAt: String
  createdBy: String
  effectiveEndDate: String
  effectiveStartDate: String
  isDisabled: Boolean
  menuId: String
  merchantId: String
  parentId: String
  sequenceOrder: Int
  submenus: [Menu]
  title: String
  updatedAt: String
  updatedBy: String
}

type MenuResponse @aws_api_key @aws_cognito_user_pools {
  menus: [Menu]
  message: String
  status: String
}

type Merchant @aws_api_key @aws_cognito_user_pools {
  aboutUsBanner: String
  aboutUsDescription: String
  activated: Boolean
  address: String
  code: String
  copyright: String
  createdAt: String
  currency: String
  domain: String
  facebookName: String
  facebookPixelId: String
  facebookUrl: String
  favicon: String
  googleAnalyticsId: String
  googlePlayUrl: String
  instagramName: String
  instagramUrl: String
  isBlocked: Boolean
  linkedInName: String
  linkedInUrl: String
  logo: String
  membershipTierActivated: Boolean
  merchantId: String
  name: String
  notificationEmail: String
  offlineStore: Boolean
  onlineStore: Boolean
  ownerEmail: String
  ownerName: String
  ownerPhone: String
  playStoreUrl: String
  senderEmail: String
  seoDescription: String
  seoTitle: String
  serviceId: String
  servicePassword: String
  storeId: String
  tax: Float
  tiktokName: String
  tiktokUrl: String
  twitterName: String
  twitterUrl: String
  updatedAt: String
  whatsappNo: String
  youtubeName: String
  youtubeUrl: String
}

type MerchantAccount @aws_api_key @aws_cognito_user_pools {
  accountId: String
  accountName: String
  merchantId: String
}

type MerchantCreditTransaction @aws_api_key @aws_cognito_user_pools {
  actionType: String
  amount: Float
  createdAt: String
  createdBy: String
  merchantCreditTransactionId: String
  merchantId: String
  merchantOrderId: String
  orderNumber: String
  transactionId: String
}

type MerchantDetailsResponse @aws_api_key @aws_cognito_user_pools {
  aboutUsBanner: String
  aboutUsDescription: String
  address: String
  copyright: String
  email: String
  facebookName: String
  facebookUrl: String
  googlePlayUrl: String
  instagramName: String
  instagramUrl: String
  linkedInName: String
  linkedInUrl: String
  message: String
  name: String
  phone: String
  playStoreUrl: String
  status: String
  tiktokName: String
  tiktokUrl: String
  twitterName: String
  twitterUrl: String
  whatsappNo: String
  youtubeName: String
  youtubeUrl: String
}

type MerchantGeneralConfigAndSiteAnalyticsResponse @aws_api_key @aws_cognito_user_pools {
  effectiveEndDate: String
  effectiveStartDate: String
  facebookPixelId: String
  favicon: String
  googleAnalyticsId: String
  logo: String
  message: String
  notificationMessage: String
  seoDescription: String
  seoTitle: String
  status: String
}

type MerchantGeneralConfigResponse @aws_api_key @aws_cognito_user_pools {
  address: String
  advancedOrderEnabled: Boolean
  currency: String
  domain: String
  footerDescription: String
  freeConversationLimit: Int
  kycBusinessAddress: String
  kycNRIC: String
  kycNRICName: String
  latitude: String
  longitude: String
  maxAdvancedOrderDay: Int
  merchantRegistrationNumber: String
  message: String
  name: String
  notificationEmail: String
  orderOption: [String]
  ownerEmail: String
  ownerPhone: String
  paidConversationLimit: Int
  preferredLanguage: String
  senderEmail: String
  status: String
  storeAddress: String
  storeOpenCloseHours: [StoreOpenCloseHour]
  tax: Float
  warungDeliveryStoreInfo: String
  warungStoreStatus: String
  webQrCode: String
  whatsappNo: String
}

type MerchantLogoResponse @aws_api_key @aws_cognito_user_pools {
  logo: String
  message: String
  name: String
  status: String
}

type MerchantPaymentConfigResponse @aws_api_key @aws_cognito_user_pools {
  manualPayment: ManualPaymentOptionResponse
  message: String
  onBoardRole: String
  paymentGateway: PaymentGatewayResponse
  status: String
}

type MerchantShippingCreditBalanceResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  shippingCreditBalance: Float
  status: String
}

type MerchantSiteFontAndColorResponse @aws_api_key @aws_cognito_user_pools {
  copyright: String
  facebookName: String
  facebookUrl: String
  googlePlayUrl: String
  instagramName: String
  instagramUrl: String
  linkedInName: String
  linkedInUrl: String
  logo: String
  message: String
  playStoreUrl: String
  siteColor: String
  siteFont: String
  status: String
  tiktokName: String
  tiktokUrl: String
  twitterName: String
  twitterUrl: String
  youtubeName: String
  youtubeUrl: String
}

type MerchantStore @aws_api_key @aws_cognito_user_pools {
  merchantId: String
  name: String
  storeId: String
}

type MerchantStoreDetail @aws_api_key @aws_cognito_user_pools {
  childrenMerchant: [ChildrenMerchant]
  currency: String
  deliveryServiceAvailable: Boolean
  domain: String
  freeConversationLimit: Int
  isFreeTrial: Boolean
  isSelfServiceUpgraded: Boolean
  membershipTierActivated: Boolean
  merchantGPTConfigModules: [String]
  merchantId: String
  merchantSignUpType: String
  name: String
  nextWebChatBotBillingDate: String
  nextWhatsappChatBotBillingDate: String
  paidConversationLimit: Int
  pickupServiceAvailable: Boolean
  preferredLanguage: String
  referralPartner: String
  salesAgentId: String
  storeAddress: String
  storeCity: String
  storeCode: String
  storeCountry: String
  storeId: String
  storeIsDisabled: Boolean
  storeManagerContact: String
  storeManagerName: String
  storeName: String
  storePostalCode: String
  storeState: String
  storeType: String
  subscriptionExpiryDate: String
  subscriptionId: String
  tax: Float
}

type MerchantUserGroup @aws_api_key @aws_cognito_user_pools {
  merchantId: String
  userGroupId: String
  userGroupName: String
}

type ModifierGroups @aws_api_key @aws_cognito_user_pools {
  isItemsControlAvailable: Boolean
  isSelected: Boolean
  modifier: [Modifiers]
  modifierGroupId: String
  modifierGroupName: String
  modifierGroupType: String
  requestRemark: String
  selectionRangeMax: Int
  selectionRangeMin: Int
}

type Modifiers @aws_api_key @aws_cognito_user_pools {
  availableStatus: String
  isSelected: Boolean
  modifierId: String
  modifierName: String
  price: Float
}

type Mutation {
  acceptRejectVoucher(action: String, confirmationDate: String, customerId: String, voucherCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  addHelpCenterIssue(inputList: [HelpCenterIssueInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  addItemToCustomerCart(accessToken: String, cartChannel: String, customOrderId: String, customerId: String, itemId: String, itemProperty: String, mandatoryItem: Boolean, merchantId: String, quantity: Int, salesChannelName: String, selectedModifierGroups: [ModifierGroupsInput], storeId: String, storeName: String, timeslotEndDateTime: String, timeslotStartDateTime: String, type: String): AddItemToCustomerCartResponse @aws_api_key @aws_cognito_user_pools
  addUpdateDeleteVoucherCart(action: String, customerId: String, merchantId: String, voucherCartId: String, voucherId: String, voucherPrice: Float, voucherQuantity: Int): addUpdateDeleteVoucherCartResponse @aws_api_key @aws_cognito_user_pools
  adminAddCollectionsToProduct(collectionList: [String], merchantId: String, productIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminAddOrUpdateAccount(accountName: String, country: String, merchantId: String, smartEyeRecipient: String, state: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminAddTagsToModule(merchantId: String, taggingList: [String], type: String, typeIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminBulkUpdateCreditLimitOrders(newCreditLimitPaymentStatus: String, orderId: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCancelEInvoice(eInvoiceId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCancelManualPaymentOrder(merchantId: String, orderId: String, token: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCancelOrder(merchantId: String, notifyCustomer: Boolean, orderDetailsToBeCancelled: [OrderDetailToBeCancelled], orderId: String, reason: String, restock: Boolean): StatusResponse @aws_cognito_user_pools
  adminCheckMarketPlaceTestStatus(marketPlaceSettingId: String): CheckMarketPlaceTestStatusResponse @aws_cognito_user_pools
  adminCheckTopUpShippingPaymentStatus(merchantId: String, orderNumber: String): AdminCheckTopUpShippingPaymentStatusResponse @aws_cognito_user_pools
  adminCompletePickUpOrder(merchantId: String, orderId: String, token: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateFacebookLiveCampaign(facebookLiveCampaignDetails: [FacebookLiveCampaignDetailInput], facebookLiveCampaignId: String, merchantId: String, salesChannelName: String, scheduleEndDateTime: String, scheduleStartDateTime: String, status: String, storeId: String, storeName: String, title: String): FacebookLiveCampaign @aws_cognito_user_pools
  adminCreateFaq(answer: String, faqCategory: String, merchantId: String, parentId: String, question: String, sequence: Int): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateFaqCategory(merchantId: String, sequence: Int, title: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateFilterTab(condition: String, merchantId: String, title: String, type: String): StatusResponse @aws_cognito_user_pools
  adminCreateHomeCollection(collectionIcon: String, collectionId: String, collectionImage: String, collectionSeoUrl: String, effectiveEndDateTime: String, effectiveStartDateTime: String, homeCollectionType: String, isDisabled: Boolean, merchantId: String, sequence: Int, title: String): StatusResponse @aws_cognito_user_pools
  adminCreateKnowledgeBase(listOfKb: [ListOfKbInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateLandingPageBanner(buttonActionValue: String, detailPageImage: String, effectiveEndDateTime: String, effectiveStartDateTime: String, homeImage: String, isDisabled: Boolean, merchantId: String, sequence: Int, title: String): StatusResponse @aws_cognito_user_pools
  adminCreateManualPaymentOption(TNGPaymentLink: String, isBankTransfer: Boolean, isDisabled: Boolean, manualPaymentMethodName: String, merchantId: String, paymentInstructions: String, qrCode: String): OnSiteStatusResponse @aws_cognito_user_pools
  adminCreateMembershipTier(merchantId: String, point: Float, title: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateAutopilotEvent(eventFlowId: String, flow: String, isDisabled: Boolean, title: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateBranch(address: String, branchId: String, branchName: String, postalCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateCustomOrder(billingAddress: String, billingCity: String, billingCountry: String, billingPostalCode: String, billingState: String, creditLimitOrder: Boolean, customOrderId: String, customerId: String, customerInfo: CustomerInfoInput, itemList: [CustomOrderItemInput], noteToRider: String, orderType: String, scheduledDate: String, scheduledTime: String, shippingAddress: String, shippingCity: String, shippingCountry: String, shippingPostalCode: String, shippingState: String, truckCapacityId: String): CreateOrUpdateCustomOrderResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateCustomer(address: String, creditLimit: Float, customerId: String, firstName: String, isBlocked: Boolean, lastName: String, merchantId: String, mobileNo: String, primaryEmail: String): StatusResponse @aws_cognito_user_pools
  adminCreateOrUpdateDocumentColumnMapping(actualValue: String, alternativeValueList: [String], extractedDocumentColumnMappingId: String, fieldNameList: [String], merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateDocumentLookup(csvS3Key: String, extractedDocumentLookupId: String, lookupName: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateDocumentLookupDetail(extractedDocumentLookupId: String, headersAndValues: [HeadersAndValuesInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateDocumentTemplate(columnMappings: [ExtractedDocumentColumnMappingsInput], csvExportFrequency: ExtractedDocumentCsvExportFrequencyInput, dataLabels: ExtractedDocumentTemplateDataLabelInput, defaultTemplate: Boolean, documentS3Key: String, documentTemplateName: String, documentTemplateType: String, extractedDocumentTemplateId: String, isExportCsv: Boolean, lookupFields: [LookupFieldInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateDynamicForm(dynamicFormId: String, layout: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateDynamicFormAnswer(dynamicFormAnswerId: String, dynamicFormId: String, layout: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateFoodMarketPlaceSmsCampaign(customerSegmentIndex: String, description: String, discountOnProductValue: Float, effectiveEndDateTime: String, effectiveStartDateTime: String, foodMarketPlaceSmsCampaignId: String, marketPlaceChannel: String, orderNumOfDaysRange: Int, promoCode: String, salesConversionRate: Float, smsScheduleDateTime: String, smsText: String, title: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateNotificationSetting(emailBody: String, emailSubject: String, merchantId: String, status: String, type: String): StatusResponse @aws_cognito_user_pools
  adminCreateOrUpdatePromotionalWidget(createdAt: String, createdBy: String, merchantId: String, promotionalWidgetId: String, updatedAt: String, updatedBy: String, widgetName: String, widgetUrl: String): StatusResponse @aws_cognito_user_pools
  adminCreateOrUpdatePushNotifications(actionId: String, actionType: String, body: String, csvS3Key: String, image: String, listOfCustomer: [String], notificationCampaignId: String, scheduledDateTime: String, showToNewUser: Boolean, targetAudience: TargetAudienceInput, title: String): NotificationCampaignResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateSMSConfig(csvS3Key: String, emailBody: [EmailBodyInput], emailDesign: EmailDesignInput, listOfCustomerEmail: [String], listOfCustomerPhoneNumber: [String], listOfSelectedSmartTags: [String], mediaContent: String, mediaType: String, platform: String, reply: Boolean, saveTemplate: Boolean, selectedTemplateId: String, smsCampaignId: String, smsScheduleDateTime: String, smsText: String, smsTopic: String, targetAudience: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateSalesAgent(customOrderEnabled: Boolean, firstName: String, lastName: String, maxCreditLimit: Float, merchantId: String, salesAgentId: String, username: String): CreateOrUpdateSalesAgentResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateSmartTagging(condition: SmartTaggingConditionInput, listOfAssociatedProducts: [SmartTaggingProductInput], promptText: String, smartTaggingId: String, tagName: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateSmartVoucherCampaign(campaignDetail: [CampaignDetailInput], campaignTitle: String, comparisonType: String, customerType: String, errorFileKey: String, estimatedRevenue: Float, msgScheduleDateTime: String, revenueSplit: Int, s3FileKey: String, smartVoucherCampaignId: String): AdminCreateOrUpdateSmartVoucherCampaignResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateSmsTemplate(smartVoucherVariables: [SmartVoucherVariableInput], smsTemplateId: String, smsText: String, templateEmailBody: [EmailBodyInput], templateEmailDesign: EmailDesignInput, templateMediaContent: String, templateMediaType: String, templateName: String, templateType: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateStampingCampaign(endDate: String, extraProductCondition: ProductConditionMappingInput, extraProductStamp: Int, isEnable: Boolean, merchantId: String, minSpend: Float, orderType: [String], reminder: [ReminderInput], rewardVoucher: [RewardVoucherMappingInput], salesChannelName: [String], stampCondition: StampConditionMappingInput, stampTypeValue: Int, stampingCampaignCode: String, stampingCampaignCycle: Int, stampingCampaignCycleDurationType: String, stampingCampaignCycleDurationValue: String, stampingCampaignDescription: String, stampingCampaignId: String, stampingCampaignImage: String, stampingCampaignListingImage: String, stampingCampaignTitle: String, stampingCampaignType: String, startDate: String, voucherExpiryDateType: String, voucherExpiryDateValue: String): StampingCampaignResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateTruck(deliveryFee: Float, limit: Float, scheduleList: [ScheduleInput], truckId: String, truckName: String, truckNumber: String, unit: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateUser(accountId: String, accountName: String, email: String, name: String, storeId: String, storeName: String, userGroupId: String, userGroupName: String, userId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateUserGroup(userGroupId: String, userGroupName: String, userMatrixList: [UserMatrixInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreateOrUpdateWarehouse(address: String, addressDetail: String, advancedOrderEnabled: Boolean, city: String, country: String, isOnDemandDeliveryEnabled: Boolean, isOwnTransportEnabled: Boolean, isPickupAccepted: Boolean, isStandardDeliveryEnabled: Boolean, latitude: Float, longitude: Float, maxAdvancedOrderDay: Int, merchantId: String, onDemandDefaultVehicleType: String, onDemandMaxDistance: Float, ownTransportCutoffTime: String, ownTransportDayInAdvance: Int, postalCode: String, standardPreferredPartnerName1: String, standardPreferredPartnerName2: String, state: String, storeOperatingHours: [StoreOpenCloseHoursInput], warehouseId: String): StatusResponse @aws_cognito_user_pools
  adminCreatePointConversion(merchantId: String, pointConversionDetails: [PointConversionInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreatePriceGroup(delivery: Float, incrementType: String, name: String, pickUp: Float, storeIds: [String]): PriceGroupResponse @aws_cognito_user_pools
  adminCreateProduct(code: String, collectionNames: [String], cover: String, deliveryCompareAtPrice: Float, deliveryCostPerItem: Float, deliveryPrice: Float, deliveryPriceWithTax: Float, description: String, effectiveEndDateTime: String, effectiveStartDateTime: String, hasVariant: Boolean, image: [String], isDisabled: Boolean, isPreOrder: Boolean, isVirtualGoods: Boolean, merchantId: String, modifierProduct: Boolean, noOfPurchases: Int, noOfViews: Int, pickupCompareAtPrice: Float, pickupCostPerItem: Float, pickupPrice: Float, pickupPriceWithTax: Float, platform: String, productUOMs: [ProductUOMInput], promotionEndDateTime: String, promotionStartDateTime: String, sellOnFacebookStore: Boolean, sellOnFoodPanda: Boolean, sellOnGrabFood: Boolean, sellOnGrabMart: Boolean, sellOnInstagram: Boolean, sellOnLazada: Boolean, sellOnOfflineStore: Boolean, sellOnOnlineStore: Boolean, sellOnPandaMart: Boolean, sellOnShopee: Boolean, seoDescription: String, seoTitle: String, seoUrl: String, taggingNames: [String], timeslotType: String, timeslots: [TimeslotInput], title: String, variantName1: String, variantName2: String, variantName3: String, variantValues1: [String], variantValues2: [String], variantValues3: [String], video: String, virtualGoodsExpiredAt: String, virtualGoodsExpiryDays: String): CreateProductResponse @aws_cognito_user_pools
  adminCreateProductBundle(barcode: String, collectionNames: [String], cover: String, deliveryCompareAtPrice: Float, deliveryCostPerItem: Float, deliveryPrice: Float, deliveryPriceWithTax: Float, description: String, effectiveEndDateTime: String, effectiveStartDateTime: String, image: [String], isDisabled: Boolean, isProductBundleTaxable: Boolean, merchantId: String, pickupCompareAtPrice: Float, pickupCostPerItem: Float, pickupPrice: Float, pickupPriceWithTax: Float, productBundleDetail: [ProductBundleDetailInput], productBundlePricing: [ProductBundlePricingInput], promotionEndDateTime: String, promotionStartDateTime: String, quantityForSales: Int, sellOnFacebookStore: Boolean, sellOnFoodPanda: Boolean, sellOnGrabFood: Boolean, sellOnGrabMart: Boolean, sellOnInstagram: Boolean, sellOnLazada: Boolean, sellOnOfflineStore: Boolean, sellOnOnlineStore: Boolean, sellOnPandaMart: Boolean, sellOnShopee: Boolean, seoDescription: String, seoTitle: String, seoUrl: String, shippingDimensionHeight: Float, shippingDimensionLength: Float, shippingDimensionWidth: Float, shippingWeight: Float, shippingWeightUnit: String, sku: String, taggingNames: [String], title: String, totalStockQuantity: Int, video: String): StatusResponse @aws_cognito_user_pools
  adminCreateProductCollection(banner: String, collectionProducts: [ItemToBeUpdated], condition: String, conditionType: String, description: String, icon: String, merchantId: String, name: String, seoDescription: String, seoTitle: String, seoUrl: String, taggingNames: [String], type: String): StatusResponse @aws_cognito_user_pools
  adminCreateProductExclusion(merchantId: String, productExclusionDetails: [ProductExclusionInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminCreatePromoCodeCampaign(activeCount: String, category: String, createdBy: String, customerCondition: String, deliveryDiscountType: String, discountAmountCap: Float, discountOnProductValue: Float, discountQuantityCap: Int, effectiveEndDateTime: String, effectiveStartDateTime: String, isDisabled: Boolean, maxUserUsageLimit: Int, merchantId: String, minimumCondition: String, minimumPurchase: Float, minimumQuantity: Int, orderType: [String], productConditions: ProductsDiscount, productsDiscount: ProductsDiscount, promoCode: String, promoCodeCampaignId: String, remainingUsage: Int, specificCustomerTag: String, specificCustomers: [String], status: String, stores: [String], title: String, totalUsageLimit: Int, type: String, updatedBy: String): StatusResponse @aws_cognito_user_pools
  adminCreateSalesChannelStoreSetting(clientId: String, clientSecret: String, merchantId: String, refreshToken: String, salesChannelId: String, salesChannelName: String, storeName: String, syncFrequency: String): StatusResponse @aws_cognito_user_pools
  adminCreateShippingRate(amount: Float, conditionType: String, estimatedDuration: String, maxValue: Float, merchantId: String, minValue: Float, shippingZoneId: String, title: String): StatusResponse @aws_cognito_user_pools
  adminCreateShippingZone(country: String, merchantId: String, state: [String], title: String, transportType: String, warehouseId: String): StatusResponse @aws_cognito_user_pools
  adminCreateSiteNavigation(effectiveEndDateTime: String, effectiveStartDateTime: String, isDisabled: Boolean, linkValue: String, menuType: String, merchantId: String, navigationType: String, openNewTab: Boolean, parentId: String, sequence: Int, title: String): StatusResponse @aws_cognito_user_pools
  adminCreateSplashScreen(buttonActionValue: String, effectiveEndDateTime: String, effectiveStartDateTime: String, homeImage: String, isDisabled: Boolean, merchantId: String, sequence: Int, title: String): StatusResponse @aws_cognito_user_pools
  adminCreateStockMovement(buyerNotes: String, expectedArrivalDate: String, merchantId: String, referenceNumber: String, status: String, stockMovementDetails: [StockMovementDetailInput], supplierId: String, supplierName: String, taggingNames: [String], trackingNumber: String): StatusResponse @aws_cognito_user_pools
  adminCreateStore(address: String, city: String, code: String, deliveryDuration: Int, deliveryFee: Float, deliveryMaxPurchaseQuantity: Int, deliveryMinPurchaseAmount: Float, deliveryPreparationTime: Int, deliveryServiceAvailable: Boolean, isDisabled: Boolean, items: [CreateStoreItemInput], latitude: String, longitude: String, managerContact: String, managerEmail: String, managerName: String, merchantId: String, name: String, onlineStoreOperate24Hour: Boolean, pickupServiceAvailable: Boolean, postalCode: String, priceGroupName: String, salesChannelName: String, state: String, storeOperatingHours: [StoreOperatingHourInput], taggingNames: [String], visibleToOnlineStore: Boolean): CreateStoreResponse @aws_cognito_user_pools
  adminCreateStoreBlockedOutPeriod(endDateTime: String, merchantId: String, startDateTime: String, storeId: String, storeType: String): StatusResponse @aws_cognito_user_pools
  adminCreateStoreOperatingHour(merchantId: String, storeId: String, storeOperatingHours: [StoreOperatingHourInput]): StatusResponse @aws_cognito_user_pools
  adminCreateSupplier(address: String, contact: String, contactName: String, country: String, email: String, merchantId: String, name: String): CreateSupplierResponse @aws_cognito_user_pools
  adminCreateUserMatrix(email: String, merchantId: String, name: String, userMatrixes: [UserMatrixInput]): StatusResponse @aws_cognito_user_pools
  adminCreateVoucher(category: String, customerCondition: String, customerGetDiscountLimit: Float, customerGetDiscountType: String, customerGetItems: ConditionMapping, customerGetPercentValue: Float, customerGetQuantity: Int, customerGetValue: Float, deliveryDiscountType: String, deliveryDiscountValue: Float, description: String, discountAmountCap: Float, discountOnDelivery: Boolean, discountOnProductValue: Float, image: String, isShareable: Boolean, isUnlimitedDistribution: Boolean, maxUserObtainLimit: Int, merchantId: String, minimumAmount: Float, minimumCondition: String, minimumQuantity: Int, orderType: [String], price: Float, productConditions: VoucherProductConditionMappingInput, productsDiscount: ConditionMapping, requiredPoints: Int, status: String, title: String, totalDistributionLimit: Int, type: String, voucherCodeS3Key: String, voucherExpiryType: String, voucherExpiryValue: String, voucherIcon: String, voucherId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteAccount(accountId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteAutopilotEvent(eventFlowIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteBranch(branchIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteCustomOrder(customOrderId: String, merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteCustomerCart(customerIdList: [String], merchantId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteDocumentColumnMapping(extractedDocumentColumnMappingIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteDocumentLookup(extractedDocumentLookupId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteDocumentLookupDetail(extractedDocumentLookupDetailIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteDocumentTemplate(extractedDocumentTemplateIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteDynamicForm(dynamicFormIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteDynamicFormAnswer(dynamicFormAnswerIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteExtractedDocument(extractedDocumentIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteFacebookLiveCampaign(facebookLiveCampaignIdList: [String], merchantId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteFacebookLivePage(merchantId: String, storeIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteFaq(faqIdList: [String], merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteFaqCategory(faqCategoryIdList: [String], merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteFoodMarketPlaceSmsCampaign(foodMarketPlaceSmsCampaignIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteGalleryDetail(galleryDetailIds: [String], merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteHomeCollection(homeCollectionIdList: [String], merchantId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteKnowledgeBase(knowledgeBaseId: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteLandingPageBanner(landingPageBannerIdList: [String], merchantId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteManualPaymentOption(manualPaymentOptionsIdList: [String], mechantId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteMembershipTier(membershipTierIdList: [String], merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteModifierItems(modifierItemId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteOrder(merchantId: String, orderList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeletePointConversion(merchantId: String, pointConversionIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeletePriceGroup(priceGroupIds: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteProduct(merchantId: String, productIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteProductBundle(merchantId: String, productBundleIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteProductCollection(merchantId: String, productCollectionIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteProductExclusion(merchantId: String, productExclusionId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeletePromoCodeCampaign(merchantId: String, promoCodeCampaignIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeletePromotionalWidget(merchantId: String, promotionalWidgetIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeletePushNotifications(notificationIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteSalesAgent(salesAgentIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteShippingRate(merchantId: String, shippingRateIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteShippingZone(merchantId: String, shippingZoneId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteSiteNavigation(merchantId: String, siteNavigationId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteSmartTagging(smartTaggingId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteSmartVoucherCampaign(smartVoucherCampaignIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteSmsConfig(smsCampaignIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteSmsTemplate(smsTemplateIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteSplashScreen(merchantId: String, splashScreenIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteStampingCampaign(merchantId: String, stampingCampaignIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteStockMovement(merchantId: String, stockMovementIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteStore(merchantId: String, storeIds: [String]): StatusResponse @aws_cognito_user_pools
  adminDeleteSupplier(merchantId: String, supplierId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteTags(merchantId: String, taggingList: [String], type: String): StatusResponse @aws_cognito_user_pools
  adminDeleteTruck(truckIds: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteUser(userIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteUserGroup(userGroupIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDeleteUserMatrix(merchantId: String, userId: String): StatusResponse @aws_cognito_user_pools
  adminDeleteVoucher(merchantId: String, voucherIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminForgotPassword(merchantId: String, mobileNo: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminGenerateSmartVoucher(campaignDetail: [CampaignDetailInput], comparisonType: String, customerType: String, estimatedRevenue: Float, revenueSplit: Int, s3FileKey: String): AdminGenerateSmartVoucherResponse @aws_api_key @aws_cognito_user_pools
  adminGenerateUpdatePaymentLink(subscriptionId: String): AdminGenerateUpdatePaymentLinkResponse @aws_api_key @aws_cognito_user_pools
  adminModifyChatbotFile(contentType: String, filename: String, mode: String): AdminModifyChatbotFileResponse @aws_api_key @aws_cognito_user_pools
  adminModifyChatbotItems(contents: ModifyChatbotItemsInput, merchantId: String, mode: String, type: String): AdminModifyChatbotItemsResponse @aws_api_key @aws_cognito_user_pools
  adminOtpVerification(merchantId: String, merchantOtp: String, mobileNo: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminProcessFacebookLiveSetup(accessToken: String, appScopedUserId: String, merchantId: String): StatusResponse @aws_cognito_user_pools
  adminPurchaseConversation: StatusResponse @aws_api_key @aws_cognito_user_pools
  adminRedeemVirtualGoods(code: String, merchantId: String): StatusResponse @aws_cognito_user_pools
  adminRefundOrder(merchantId: String, orderDetailsToBeRefunded: [OrderDetailToBeRefunded], orderId: String, paymentType: String, reason: String, refundType: String, restock: Boolean, totalRefundAmt: Float): StatusResponse @aws_cognito_user_pools
  adminRemoveFilterTab(filterTabId: String, merchantId: String): StatusResponse @aws_cognito_user_pools
  adminRemoveTagsFromModule(merchantId: String, taggingList: [String], type: String, typeIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminReplyCustomerChat(channel: String, customerId: String, customerPhoneNumber: String, message: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminRequestForDelivery(merchantId: String, orderList: [OrderInput]): StatusResponse @aws_cognito_user_pools
  adminResetPassword(isForgot: Boolean, merchantId: String, password: String, previousPassword: String, token: String, username: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminSelectAutoContent(autoContentIdList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminSendEInvoiceAttachment(eInvoiceId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminSendExtractedDocument(email: [String], extractedDocumentId: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminSendFacebookLiveComment(facebookLiveCampaignId: String, hotkey: String, merchantId: String, productName: String, storeId: String): StatusResponse @aws_cognito_user_pools
  adminSendOrderReminderToSQS(merchantId: String, orderIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminSendPendingCheckoutReminderToSQS(customerIdList: [String], emailBody: String, emailSubject: String, merchantId: String): StatusResponse @aws_cognito_user_pools
  adminSendPendingPaymentReminderToSQS(merchantId: String, orderIdList: [String]): StatusResponse @aws_cognito_user_pools
  adminSendPromoCodeToSQS(customerIdList: [String], emailBody: String, emailSubject: String, merchantId: String, promoCode: String, sendToAllCustomer: Boolean): StatusResponse @aws_cognito_user_pools
  adminShipOrderLazada(merchantId: String, orderNumber: String, storeCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminShipOrderShopee(merchantId: String, orderNumber: String, storeCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminSyncDataFromMarketPlace(merchantId: String, salesChannelId: String, salesChannelName: String): StatusResponse @aws_cognito_user_pools
  adminSyncEInvoiceReceipt(eInvoiceId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminSyncOrderFromMarketPlace(merchantId: String, salesChannelId: String, salesChannelName: String, storeCode: String, storeId: String): StatusResponse @aws_cognito_user_pools
  adminTestLazadaAuth(merchantId: String): TestAuthResponse @aws_cognito_user_pools
  adminTestShopeeAuth(merchantId: String): TestAuthResponse @aws_cognito_user_pools
  adminTopUpShippingCredits(merchantId: String, topUpAmount: Float): AdminTopUpShippingCreditsResponse @aws_cognito_user_pools
  adminTriggerDeleteDocumentLookup(extractedDocumentLookupId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminTriggerExportCSV(filter: TriggerExportCsvFilter, itemIdList: [String], merchantId: String, module: String, sort: ElasticSearchSortDirection): ExportCSVResponse @aws_api_key @aws_cognito_user_pools
  adminTriggerLHDNAdjustment(adjustmentList: [LHDNAdjustmentInput], adjustmentType: String, adminReason: String, currencyCode: String, eInvoiceId: String): LHDNAdjustmentStatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateBulkOrderFulfillment(merchantId: String, orderIdListToBeUpdated: [String]): StatusResponse @aws_cognito_user_pools
  adminUpdateChatbotSetting(samplePrompts: [String], webchatColorCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateContactUsInfo(contactUsContent: String, contactUsFormEnabled: Boolean, merchantId: String, storeList: [ContactUsStoreInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateCustomerAutoReply(channel: String, chatId: String, disableAutoReply: Boolean): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateDisplayRecordSequence(merchantId: String, noOfFooters: Int, noOfHeaders: Int, records: [RecordInput], type: String): StatusResponse @aws_cognito_user_pools
  adminUpdateEInvoiceQuickbookCustomer(eInvoiceQuickBookCustomersId: String, idNumber: String, idType: String, sstRegistrationNumber: String, tinNumber: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateEInvoiceQuickbookItem(classificationCode: String, classificationName: String, eInvoiceQuickBookItemsId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateExtractedDocument(approvedStatus: Boolean, conversionStatus: Boolean, data: ExtractedDocumentDataInput, documentDate: String, documentNo: String, documentType: String, extractedDocumentId: String, isDuplicate: Boolean, merchantId: String, remark: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateFacebookLiveCampaign(facebookLiveCampaignDetails: [FacebookLiveCampaignDetailInput], facebookLiveCampaignId: String, merchantId: String, salesChannelName: String, scheduleEndDateTime: String, scheduleStartDateTime: String, status: String, storeId: String, storeName: String, title: String): StatusResponse @aws_cognito_user_pools
  adminUpdateFacebookLiveMessageTemplate(merchantId: String, message: FacebookLiveMessageInput, messageType: String): StatusResponse @aws_cognito_user_pools
  adminUpdateFaq(answer: String, faqCategory: String, faqId: String, merchantId: String, parentId: String, question: String, sequence: Int): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateFaqCategory(faqCategoryId: String, merchantId: String, sequence: Int, title: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateGalleryDetail(galleryDetailId: String, merchantId: String, name: String): StatusResponse @aws_cognito_user_pools
  adminUpdateHomeCollection(collectionIcon: String, collectionId: String, collectionImage: String, collectionSeoUrl: String, effectiveEndDateTime: String, effectiveStartDateTime: String, homeCollectionId: String, homeCollectionType: String, isDisabled: Boolean, merchantId: String, sequence: Int, title: String): StatusResponse @aws_cognito_user_pools
  adminUpdateInStoreOrder(duplicateInStoreOrderList: [InStoreOrderInput], mainRecord: InStoreOrderMainRecordInput): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateItemDuringFacebookLive(deliveryPrice: Float, facebookLiveCampaignDetailId: String, facebookLiveCampaignId: String, hotkey: String, itemId: String, itemProperty: String, merchantId: String, productId: String, productName: String, quantity: Int): StatusResponse @aws_cognito_user_pools
  adminUpdateLandingPageBanner(buttonActionValue: String, detailPageImage: String, effectiveEndDateTime: String, effectiveStartDateTime: String, homeImage: String, isDisabled: Boolean, landingPageBannerId: String, merchantId: String, sequence: Int, title: String): OnSiteStatusResponse @aws_cognito_user_pools
  adminUpdateLegalPolicy(legalPolicies: [LegalPolicyInput], merchantId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateManualPaymentOption(TNGPaymentLink: String, isBankTransfer: Boolean, isDisabled: Boolean, manualPaymentMethodName: String, manualPaymentOptionsId: String, merchantId: String, paymentInstructions: String, qrCode: String): OnSiteStatusResponse @aws_cognito_user_pools
  adminUpdateManualPaymentOrderStatus(manualPaymentMethodName: String, merchantId: String, newOrderStatus: String, orderId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateMembershipSetting(membershipPointExpiryType: String, membershipPointExpiryValue: Int, multiplier: Int, pointConversionId: String, spent: Int): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateMembershipTier(membershipTierId: String, merchantId: String, point: Float, title: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateMerchantAboutUs(aboutUsBanner: String, aboutUsDescription: String, merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateMerchantBusinessInfo(companyAddress: String, companyEmail: String, companyName: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateMerchantEInvoiceInfo(clientId: String, clientSecret1: String, clientSecret2: String, companyAddressLine: [String], companyCityName: String, companyName: String, companyPostalCode: String, companyStateName: String, companyTin: String, companyTourismTaxRegistrationNumber: String, countryCode: String, descriptionSellerActivity: String, digicertKey: String, digicertPin: String, email: String, environment: String, idNumber: String, idType: String, industryClassificationCode: String, logo: String, notificationEmail: String, phoneNumber: String, qbClientId: String, qbClientSecret: String, sstRegistrationNumber: String): EInvoiceInfoStatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateMerchantGeneralConfig(address: String, currency: String, footerDescription: String, kycBusinessAddress: String, kycNRIC: String, kycNRICName: String, latitude: String, longitude: String, merchantId: String, merchantRegistrationNumber: String, name: String, notificationEmail: String, orderOption: [String], ownerEmail: String, ownerPhone: String, senderEmail: String, storeAddress: String, tax: Float, warungDeliveryStoreInfo: String, warungStoreStatus: String, whatsappNo: String): OnSiteStatusResponse @aws_cognito_user_pools
  adminUpdateMerchantGeneralConfigAndSiteAnalytics(effectiveEndDate: String, effectiveStartDate: String, facebookPixelId: String, favicon: String, googleAnalyticsId: String, logo: String, merchantId: String, notificationMessage: String, seoDescription: String, seoTitle: String): StatusResponse @aws_cognito_user_pools
  adminUpdateMerchantMembershipTierStatus(membershipTierActivated: Boolean, merchantId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateMerchantPaymentConfig(manualPayment: ManualPaymentOption, merchantId: String, paymentGateway: PaymentGateway): StatusResponse @aws_cognito_user_pools
  adminUpdateMerchantSiteFontAndColor(copyright: String, facebookName: String, facebookUrl: String, googlePlayUrl: String, instagramName: String, instagramUrl: String, linkedInName: String, linkedInUrl: String, logo: String, merchantId: String, playStoreUrl: String, siteColor: String, siteFont: String, tiktokName: String, tiktokUrl: String, twitterName: String, twitterUrl: String, youtubeName: String, youtubeUrl: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateNotificationSetting(emailBody: String, emailSubject: String, merchantId: String, notificationSettingId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateNotificationSettingStatus(merchantId: String, status: String, type: String): StatusResponse @aws_cognito_user_pools
  adminUpdateOrder(cancelledBy: String, cancelledReason: String, fulfillmentStatus: String, merchantId: String, orderId: String, paymentStatus: String, sellerNote: String, taggings: [String]): StatusResponse @aws_cognito_user_pools
  adminUpdateOrderFulfillment(merchantId: String, orderDetailsToBeFulfilled: [OrderDetailToBeFulfilled], orderId: String, salesChannelName: String): StatusResponse @aws_cognito_user_pools
  adminUpdateOrderStatus(merchantId: String, ordersToBeUpdated: [OrderToBeUpdated]): StatusResponse @aws_cognito_user_pools
  adminUpdatePointConversion(effectiveEndDateTime: String, effectiveStartDateTime: String, itemId: String, itemProperty: String, merchantId: String, multiplier: Float, pointConversionId: String, productId: String, spent: Float): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdatePriceGroup(delivery: Float, incrementType: String, name: String, pickUp: Float, priceGroupId: String, storeIds: [String]): StatusResponse @aws_cognito_user_pools
  adminUpdateProduct(code: String, collectionNames: [String], cover: String, deliveryCompareAtPrice: Float, deliveryCostPerItem: Float, deliveryPrice: Float, deliveryPriceWithTax: Float, description: String, effectiveEndDateTime: String, effectiveStartDateTime: String, hasVariant: Boolean, image: [String], isDisabled: Boolean, isPreOrder: Boolean, isVirtualGoods: Boolean, merchantId: String, modifierProduct: Boolean, noOfPurchases: Int, noOfViews: Int, pickupCompareAtPrice: Float, pickupCostPerItem: Float, pickupPrice: Float, pickupPriceWithTax: Float, platform: String, productId: String, productUOMs: [ProductUOMInput], promotionEndDateTime: String, promotionStartDateTime: String, sellOnFacebookStore: Boolean, sellOnFoodPanda: Boolean, sellOnGrabFood: Boolean, sellOnGrabMart: Boolean, sellOnInstagram: Boolean, sellOnLazada: Boolean, sellOnOfflineStore: Boolean, sellOnOnlineStore: Boolean, sellOnPandaMart: Boolean, sellOnShopee: Boolean, seoDescription: String, seoTitle: String, seoUrl: String, taggingNames: [String], timeslotType: String, timeslots: [TimeslotInput], title: String, variantName1: String, variantName2: String, variantName3: String, variantValues1: [String], variantValues2: [String], variantValues3: [String], video: String, virtualGoodsExpiredAt: String, virtualGoodsExpiryDays: String): StatusResponse @aws_cognito_user_pools
  adminUpdateProductBundle(barcode: String, collectionNames: [String], cover: String, deliveryCompareAtPrice: Float, deliveryCostPerItem: Float, deliveryPrice: Float, deliveryPriceWithTax: Float, description: String, effectiveEndDateTime: String, effectiveStartDateTime: String, image: [String], isDisabled: Boolean, isProductBundleTaxable: Boolean, merchantId: String, pickupCompareAtPrice: Float, pickupCostPerItem: Float, pickupPrice: Float, pickupPriceWithTax: Float, productBundleDetail: [ProductBundleDetailInput], productBundleId: String, productBundlePricing: [ProductBundlePricingInput], promotionEndDateTime: String, promotionStartDateTime: String, quantityForSales: Int, sellOnFacebookStore: Boolean, sellOnFoodPanda: Boolean, sellOnGrabFood: Boolean, sellOnGrabMart: Boolean, sellOnInstagram: Boolean, sellOnLazada: Boolean, sellOnOfflineStore: Boolean, sellOnOnlineStore: Boolean, sellOnPandaMart: Boolean, sellOnShopee: Boolean, seoDescription: String, seoTitle: String, seoUrl: String, shippingDimensionHeight: Float, shippingDimensionLength: Float, shippingDimensionWidth: Float, shippingWeight: Float, shippingWeightUnit: String, sku: String, taggingNames: [String], title: String, totalStockQuantity: Int, video: String): StatusResponse @aws_cognito_user_pools
  adminUpdateProductCollection(banner: String, collectionProducts: [ItemToBeUpdated], condition: String, conditionType: String, description: String, icon: String, merchantId: String, name: String, productCollectionId: String, seoDescription: String, seoTitle: String, seoUrl: String, taggingNames: [String], type: String): StatusResponse @aws_cognito_user_pools
  adminUpdateProductInventory(merchantId: String, productUOMs: [ProductUOMInput]): StatusResponse @aws_cognito_user_pools
  adminUpdatePromoCodeCampaign(activeCount: String, category: String, createdBy: String, customerCondition: String, deliveryDiscountType: String, discountAmountCap: Float, discountOnProductValue: Float, discountQuantityCap: Int, effectiveEndDateTime: String, effectiveStartDateTime: String, isDisabled: Boolean, maxUserUsageLimit: Int, merchantId: String, minimumCondition: String, minimumPurchase: Float, minimumQuantity: Int, orderType: [String], productConditions: ProductsDiscount, productsDiscount: ProductsDiscount, promoCode: String, promoCodeCampaignId: String, remainingUsage: Int, specificCustomerTag: String, specificCustomers: [String], status: String, stores: [String], title: String, totalUsageLimit: Int, type: String, updatedBy: String): StatusResponse @aws_cognito_user_pools
  adminUpdateSalesChannelStoreSetting(isDisabled: Boolean, marketPlaceSettingId: String, merchantId: String, salesChannelId: String, salesChannelName: String, storeCode: String, storeId: String, storeName: String, syncFrequency: String): StatusResponse @aws_cognito_user_pools
  adminUpdateShippingRate(amount: Float, conditionType: String, estimatedDuration: String, maxValue: Float, merchantId: String, minValue: Float, shippingRateId: String, title: String): StatusResponse @aws_cognito_user_pools
  adminUpdateShippingZone(country: String, merchantId: String, shippingZoneId: String, state: [String], title: String, transportType: String, warehouseId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateSiteNavigation(effectiveEndDateTime: String, effectiveStartDateTime: String, isDisabled: Boolean, linkValue: String, menuType: String, merchantId: String, navigationType: String, openNewTab: Boolean, parentId: String, sequence: Int, siteNavigationId: String, title: String): StatusResponse @aws_cognito_user_pools
  adminUpdateSplashScreen(buttonActionValue: String, effectiveEndDateTime: String, effectiveStartDateTime: String, homeImage: String, isDisabled: Boolean, merchantId: String, sequence: Int, splashScreenId: String, title: String): StatusResponse @aws_cognito_user_pools
  adminUpdateStockMovement(buyerNotes: String, expectedArrivalDate: String, merchantId: String, referenceNumber: String, status: String, stockMovementDetails: [StockMovementDetailInput], stockMovementId: String, supplierId: String, supplierName: String, taggingNames: [String], trackingNumber: String): StatusResponse @aws_cognito_user_pools
  adminUpdateStore(address: String, city: String, code: String, deliveryDuration: Int, deliveryFee: Float, deliveryMaxPurchaseQuantity: Int, deliveryMinPurchaseAmount: Float, deliveryPreparationTime: Int, deliveryServiceAvailable: Boolean, isDisabled: Boolean, items: [UpdateStoreItemInput], latitude: String, longitude: String, managerContact: String, managerEmail: String, managerName: String, merchantId: String, name: String, onlineStoreOperate24Hour: Boolean, pickupServiceAvailable: Boolean, postalCode: String, priceGroupName: String, salesChannelName: String, state: String, storeOperatingHours: [StoreOperatingHourInput], taggingNames: [String], visibleToOnlineStore: Boolean): StatusResponse @aws_cognito_user_pools
  adminUpdateStoreBlockedOutPeriod(endDateTime: String, merchantId: String, startDateTime: String, storeId: String, storeType: String): StatusResponse @aws_cognito_user_pools
  adminUpdateStoreOperatingHour(merchantId: String, storeId: String, storeOperatingHours: [StoreOperatingHourInput]): StatusResponse @aws_cognito_user_pools
  adminUpdateSupplier(address: String, contact: String, contactName: String, country: String, email: String, merchantId: String, name: String, supplierId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateTagsOnModule(merchantId: String, taggingList: [String], type: String, typeIdList: [String]): UpdateTagsOnModuleResponse @aws_cognito_user_pools
  adminUpdateTicket(chatId: String, customerId: String, imageList: [String], issueId: String, issueStatus: String, issueType: String, message: String, videoList: [String]): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminUpdateUserMatrix(merchantId: String, userId: String, userMatrixes: [UserMatrixInput]): StatusResponse @aws_cognito_user_pools
  adminUpdateVoucher(category: String, customerCondition: String, customerGetDiscountLimit: Float, customerGetDiscountType: String, customerGetItems: ConditionMapping, customerGetPercentValue: Float, customerGetQuantity: Int, customerGetValue: Float, deliveryDiscountType: String, deliveryDiscountValue: Float, description: String, discountAmountCap: Float, discountOnDelivery: Boolean, discountOnProductValue: Float, image: String, isShareable: Boolean, isUnlimitedDistribution: Boolean, maxUserObtainLimit: Int, merchantId: String, minimumAmount: Float, minimumCondition: String, minimumQuantity: Int, orderType: [String], price: Float, productConditions: VoucherProductConditionMappingInput, productsDiscount: ConditionMapping, requiredPoints: Int, status: String, title: String, totalDistributionLimit: Int, type: String, voucherCodeS3Key: String, voucherExpiryType: String, voucherExpiryValue: String, voucherIcon: String, voucherId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateWarehouseDeliveryConfig(isOwnTransportEnabled: Boolean, isStandardDeliveryEnabled: Boolean, onDemandDefaultVehicleType: String, onDemandMaxDistance: Float, standardPreferredPartnerName1: String, standardPreferredPartnerName2: String, warehouseId: String): StatusResponse @aws_cognito_user_pools
  adminUpdateWebhookCallbackConfig(callbackEvent: String, callbackUrl: String, webhookCallbackConfigId: String): StatusResponse @aws_cognito_user_pools
  adminVerifyDuplicateInStoreOrder(confirmDuplicate: Boolean, duplicateOrderId: String, inStoreOrderId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  buyMerchantAddon(addOnPackage: [String], merchantId: String): BuyMerchantAddonResponse @aws_api_key @aws_cognito_user_pools
  checkCart(customerCartIds: [String], customerId: String, isOwnTransportOption: Boolean, merchantId: String, orderType: String, postalCode: String, promoCode: String, storeId: String, voucherCode: String, voucherExpiryDate: String): CheckCartResponse @aws_api_key @aws_cognito_user_pools
  checkCartLimit(customerCartIds: [String], scheduledDate: String): checkCartLimitResponse @aws_api_key @aws_cognito_user_pools
  checkPaymentStatus(merchantId: String, orderNumber: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  checkVoucherCart(voucherCartId: [String]): checkVoucherCartResponse @aws_api_key @aws_cognito_user_pools
  createContactUsEnquiry(contactEmail: String, contactName: String, enquiry: String, merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  createOrderReview(attachment: [String], comment: String, customerId: String, merchantId: String, orderId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  createProductReview(comment: String, merchantId: String, orderDetailId: String, rating: Int, reviewAsAnonymous: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  customerSignIn(loginType: String, merchantId: String, mobileNo: String, oldCustomerId: String, password: String, platform: String, primaryEmail: String, username: String, version: String): CustomerSignInResponse @aws_api_key @aws_cognito_user_pools
  customerSignOut(accessToken: String, accountNo: String, merchantId: String, refreshToken: String): CustomerSignOutResponse @aws_api_key @aws_cognito_user_pools
  customerSignUp(autoLogin: Boolean, dateOfBirth: String, firstName: String, gender: String, lastName: String, marketingConsent: Boolean, merchantId: String, mobileNo: String, oldCustomerId: String, password: String, primaryEmail: String, promoCode: String): CustomerSignUpResponse @aws_api_key @aws_cognito_user_pools
  deleteCustomerFavouriteAddress(customerFavouriteAddressId: String, merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  forgotPassword(merchantId: String, primaryEmail: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  generateAdminS3UploadLink(fileName: String, uploadType: String): String @aws_cognito_user_pools
  generateHelpCenterUploadLink(accessToken: String, domain: String, fileName: String, folderName: String, merchantId: String, platform: String): String @aws_api_key @aws_cognito_user_pools
  generateManualPaymentReceiptUploadLink(fileName: String, manualPaymentMethodName: String, orderNumber: String): String @aws_api_key @aws_cognito_user_pools
  generatePackingSlip(orderId: String): generateURLResponse @aws_api_key @aws_cognito_user_pools
  generateVoucherQrCode(customerId: String, expiryDate: String, generateImage: Boolean, voucherCode: String): GenerateVoucherQrCodeResponse @aws_api_key @aws_cognito_user_pools
  helpCenterSubmitFeedback(accessToken: String, assignee: String, channel: String, dateOfVisit: String, domain: String, imageList: [String], isCustomerMessage: Boolean, issueClosedDate: String, issueDetailId: String, issueDetailRating: String, issueId: String, issueStatus: String, issueTitle: String, issueType: String, merchantId: String, message: String, platform: String, replyFor: String, searchLocation: String, storeId: String, storeName: String, timeOfVisit: String, title: String, videoList: [String]): HelpCenterSubmitResponse @aws_api_key @aws_cognito_user_pools
  helpCenterSubmitIssue(accessToken: String, assignee: String, channel: String, contactNumber: String, domain: String, imageList: [String], isCustomerMessage: Boolean, issueClosedDate: String, issueDetailId: String, issueDetailRating: String, issueId: String, issueStatus: String, issueTitle: String, issueType: String, merchantId: String, message: String, orderId: String, platform: String, title: String, videoList: [String]): HelpCenterSubmitResponse @aws_api_key @aws_cognito_user_pools
  kDSDeactivateAccount: StatusResponse @aws_api_key @aws_cognito_user_pools
  kdsChangeOrderStatus(merchantId: String, orderId: String, status: String, token: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  kdsChangeProductStatus(isDisabled: Boolean, productId: String, storeProductId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  kdsUpdateCustomer(accountNo: String, receiptNo: String, totalSpending: Float): StatusResponse @aws_api_key @aws_cognito_user_pools
  kdsUpdateStoreHours(advancedOrderEnabled: Boolean, listOfStoreOpenCloseHours: [StoreOpenCloseHoursInput], maxAdvancedOrderDay: Int, merchantId: String): OnSiteStatusResponse @aws_api_key @aws_cognito_user_pools
  kdsUpdateStoreInformation(aboutUsBanner: String, address: String, addressDetail: String, city: String, country: String, domain: String, isOnDemandDeliveryEnabled: Boolean, latitude: Float, longitude: Float, maxAdvancedOrderDay: Int, name: String, onDemandMaxDistance: Float, postalCode: String, smsMobileNo: String, state: String, webQrCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  kdsUpdateStoreOrderOption(merchantId: String, orderOption: [String]): OnSiteStatusResponse @aws_api_key @aws_cognito_user_pools
  lazadaLoginDataMoat(ati: String, loginMessage: String, loginResult: String, merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  oTPVerification(customerOtp: String, loginType: String, merchantId: String, mobileNo: String, primaryEmail: String): OtpVerificationResp @aws_api_key @aws_cognito_user_pools
  openAIPrompt(frequencyPenalty: Float, maxToken: Int, presencePenalty: Float, prompt: String, temperature: Float, topP: Float): OpenAIPromptResponse @aws_api_key @aws_cognito_user_pools
  placeCustomOrderToSQS(accessToken: String, billingAddress: String, billingCity: String, billingCountry: String, billingPostalCode: String, billingState: String, customerAccountNo: String, customerCartIds: [String], customerFavouriteAddressId: String, customerFavouritePaymentId: String, customerFirstName: String, customerId: String, customerLastName: String, customerMobileNo: String, customerPrimaryEmail: String, deliveryAddress: String, deliveryCity: String, deliveryCountry: String, deliveryLatitude: Float, deliveryLongitude: Float, deliveryOptionSelected: String, deliveryPostalCode: String, deliveryState: String, isAdvancedOrder: Boolean, isCustomerSignedIn: Boolean, merchantId: String, noteToRider: String, orderType: String, paymentMethod: String, paymentType: String, platform: String, promoCode: String, remarks: String, requiredCutlery: Boolean, salesChannelName: String, scheduledDate: String, scheduledDateTime: String, scheduledTime: String, storeId: String, storeName: String, tableNumber: String, truckCapacityId: String, truckId: String, voucherCode: String, voucherExpiryDate: String): PlaceCustomerOrderToSQSResponse @aws_api_key @aws_cognito_user_pools
  placeCustomerOrderToSQS(accessToken: String, billingAddress: String, billingCity: String, billingCountry: String, billingPostalCode: String, billingState: String, customerAccountNo: String, customerCartIds: [String], customerFavouriteAddressId: String, customerFavouritePaymentId: String, customerFirstName: String, customerId: String, customerLastName: String, customerMobileNo: String, customerPrimaryEmail: String, deliveryAddress: String, deliveryCity: String, deliveryCountry: String, deliveryLatitude: Float, deliveryLongitude: Float, deliveryOptionSelected: String, deliveryPostalCode: String, deliveryState: String, isAdvancedOrder: Boolean, isCustomerSignedIn: Boolean, merchantId: String, noteToRider: String, orderType: String, paymentMethod: String, paymentType: String, platform: String, promoCode: String, remarks: String, requiredCutlery: Boolean, salesChannelName: String, scheduledDate: String, scheduledDateTime: String, scheduledTime: String, seatingNo: String, storeId: String, storeName: String, tableNumber: String, truckCapacityId: String, truckId: String, voucherCode: String, voucherExpiryDate: String): PlaceCustomerOrderToSQSResponse @aws_api_key @aws_cognito_user_pools
  placeGiftCardOrderToSQS(accessToken: String, customerFirstName: String, customerLastName: String, customerMobileNo: String, email: String, giftCardAmount: Float, giftCardMessage: String, giftCardQuantity: Int, giftCardTemplateId: String, giftCardTitle: String, merchantId: String, paymentMethod: String, platform: String, senderName: String): PlaceGiftCardOrderToSQSResponse @aws_api_key @aws_cognito_user_pools
  processCustomerVoucher(customerFirstName: String, customerId: String, customerLastName: String, customerMobileNo: String, email: String, merchantId: String, paymentMethod: String, platform: String, voucherCartId: [String]): processCustomerVoucherResponse @aws_api_key @aws_cognito_user_pools
  promptGetAssociatedProduct(promptText: String): PromptGetAssociatedProductResponse @aws_api_key @aws_cognito_user_pools
  rateFaqArticle(helpCenterFaqId: String, rate: Boolean): rateFaqArticleResponse @aws_api_key @aws_cognito_user_pools
  redeemVoucherByPoints(customerId: String, merchantId: String, voucherId: String, whatsAppNotification: Boolean): StatusResponse @aws_api_key @aws_cognito_user_pools
  redeemVoucherByStamp(customerId: String, merchantId: String, stampingCampaignId: String, voucherId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  registerCustomerDeviceToken(customerId: String, deviceToken: String, merchantId: String, platform: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  registerKdsToken(deviceToken: String, platform: String, username: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  registerNewMerchant(address: String, currency: String, domain: String, name: String, ownerEmail: String, ownerName: String, ownerPhone: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  removeItemFromCustomerCart(accessToken: String, customerCartId: String, merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  removeKdsToken(deviceToken: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  renewQBRefreshToken(authorizationCode: String, realmId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  resendOTP(loginType: String, merchantId: String, mobileNo: String, primaryEmail: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  resetPassword(customerId: String, merchantId: String, newPassword: String, oldPassword: String, randomHash: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  saveCustomerFavouriteAddress(address: String, addressDetail: String, city: String, country: String, customerFavouriteAddressId: String, customerId: String, isDefaultBilling: Boolean, isDefaultShipping: Boolean, latitude: String, longitude: String, merchantId: String, name: String, postalCode: String, state: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  shareVoucher(customerId: String, quantity: Int, receiverContactType: String, receiverEmail: String, receiverNumber: String, voucherCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  submitCustomerFeedbackSurvey(accessToken: String, additionalFeedback: String, feedbackId: String, issueClosed: Boolean, merchantId: String, rating: Int): StatusResponse @aws_api_key @aws_cognito_user_pools
  triggerOnOffFacebookLive(facebookLiveCampaignId: String, merchantId: String, storeId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateCustomer(accessToken: String, address: String, address2: String, city: String, customerId: String, dateOfBirth: String, domain: String, firstName: String, gender: String, lastName: String, marketingConsent: Boolean, merchantId: String, mobileNo: String, newPassword: String, postal: String, primaryEmail: String, race: String, state: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateCustomerWishlist(customerId: String, customerWishListId: String, itemId: String, itemProperty: String, merchantId: String, salesChannelName: String, storeId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateItemInCustomerCart(accessToken: String, customerCartId: String, merchantId: String, quantity: Int): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateMerchantDomainOnSite(printedQrCodeId: String, webQrCode: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateMerchantKYC(aboutUsDescription: String, businessAddress: String, email: String, ic: String, merchantId: String, name: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateModifierItemsAvailability(availableStatus: String, modifierId: String, resetAll: Boolean, storeId: String): updateModifierItemsAvailabilityResponse @aws_api_key @aws_cognito_user_pools
  updateOnSiteAdminMerchantId(merchantId: String): OnSiteStatusResponse @aws_api_key @aws_cognito_user_pools
  updatePreferredLanguage(merchantId: String, preferredLanguage: String): OnSiteStatusResponse @aws_api_key @aws_cognito_user_pools
  updateProductModifierSelectionInCustomerCart(accessToken: String, customerCartId: String, merchantId: String, quantity: Int, selectedModifierGroups: [ModifierGroupsInput]): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateProductReview(comment: String, merchantId: String, orderDetailId: String, rating: Int, reviewAsAnonymous: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  updateStoreSetupStatus(acknowledgement: Boolean): StatusResponse @aws_api_key @aws_cognito_user_pools
  uploadManualPaymentReceipt(fileName: String, manualPaymentMethodName: String, merchantId: String, orderNumber: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  verifyCustomerAccount(customerEmail: String, merchantId: String): VerifyAccountStatusResponse @aws_api_key @aws_cognito_user_pools
}

type NewsLetterResponse @aws_api_key @aws_cognito_user_pools {
  buttonLabel: String
  description: String
  message: String
  status: String
  title: String
}

type Notification @aws_api_key @aws_cognito_user_pools {
  actionId: String
  actionType: String
  body: String
  createdAt: String
  image: String
  notificationId: String
  title: String
  updatedAt: String
  voucherType: String
}

type NotificationCampaign @aws_cognito_user_pools {
  actionId: String
  actionType: String
  body: String
  createdAt: String
  createdBy: String
  image: String
  listOfCustomer: [String]
  merchantId: String
  notificationCampaignId: String
  scheduledDateTime: String
  showToNewUser: Boolean
  targetAudience: TargetAudience
  title: String
  updatedAt: String
  updatedBy: String
}

type NotificationCampaignResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  notificationCampaignId: String
  status: String
}

type NotificationSetting @aws_api_key @aws_cognito_user_pools {
  callbackEvent: String
  callbackUrl: String
  createdAt: String
  createdBy: String
  emailBody: String
  emailSubject: String
  merchantId: String
  notificationSettingId: String
  status: String
  type: String
  updatedAt: String
  updatedBy: String
}

type NotificationSettingStatusResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  notificationSettingList: [NotificationSetting]
  status: String
}

type OnSiteStatusResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  onBoardRole: String
  status: String
}

type OngoingTicket @aws_cognito_user_pools {
  currentStatus: String
  issueId: String
  issueType: String
}

type OnlineStoreConversion @aws_api_key @aws_cognito_user_pools {
  increaseRate: Float
  percentange: Float
  type: String
}

type OpenAIPromptResponse @aws_cognito_user_pools {
  gptResponse: String
  message: String
  status: String
}

type Order @aws_api_key @aws_cognito_user_pools {
  ETACustomer: String
  ETAMerchant: String
  accumulatedRefundAmount: Float
  actualDeliveryFee: Float
  billingAddress: String
  billingCity: String
  billingCountry: String
  billingPostalCode: String
  billingState: String
  cancelledBy: String
  cancelledReason: String
  createdAt: String
  createdBy: String
  customerAccountNo: String
  customerFirstName: String
  customerIP: String
  customerId: String
  customerLastName: String
  customerMobileNo: String
  customerPrimaryEmail: String
  deliveryAddress: String
  deliveryCity: String
  deliveryCountry: String
  deliveryDiscount: Float
  deliveryLatitude: String
  deliveryLongitude: String
  deliveryMode: String
  deliveryNumber: String
  deliveryOrderDateTime: String
  deliveryOrderId: String
  deliveryPartnerName: String
  deliveryPostalCode: String
  deliveryState: String
  deliveryStatus: String
  deliveryType: String
  driverLatitude: Float
  driverLongitude: Float
  driverName: String
  driverPhoneNumber: String
  driverPlateNumber: String
  estimatedDeliveryFee: Float
  grandTotal: Float
  hasPreOrder: Boolean
  image: String
  isAdvancedOrder: Boolean
  isPreOrder: Boolean
  isRefunded: Boolean
  isReviewAvailable: Boolean
  mainOrderId: String
  manualPaymentMethodName: String
  manualPaymentReceipt: String
  merchantId: String
  noteToRider: String
  orderCancellationDateTime: String
  orderCollectedDateTime: String
  orderCompletedDateTime: String
  orderDateTime: String
  orderId: String
  orderNumber: String
  orderType: String
  overallRating: Int
  packageNumber: String
  partialFulfilmentAmount: Float
  partialFulfilmentDiscount: Float
  paymentDateTime: String
  paymentMethod: String
  paymentStatus: String
  paymentType: String
  pickupAddress: String
  pickupCity: String
  pickupCountry: String
  pickupPostalCode: String
  pickupState: String
  pointsCollectable: Int
  promoCode: String
  promoCodeDiscount: Float
  promoCodeId: String
  promoCodeTitle: String
  receiptFileName: String
  refundAmount: Float
  refundCompleteDateTime: String
  refundReason: String
  remarks: String
  requiredCutlery: Boolean
  salesAgentId: String
  salesChannelName: String
  scheduledDate: String
  scheduledDateTime: String
  scheduledTime: String
  sellerNote: String
  standardDeliveryAwb: String
  standardDeliveryAwbIdLink: String
  standardDeliveryTrackingUrl: String
  status: String
  storeAddress: String
  storeCode: String
  storeId: String
  storeName: String
  subtotal: Float
  subtotalWithTax: Float
  tableNumber: String
  taggingNames: [String]
  totalDiscount: Float
  totalOrderItems: Int
  totalPromoCodeDiscount: Float
  totalRefundedAmount: Float
  totalVoucherDiscount: Float
  transactionId: String
  truckId: String
  truckName: String
  type: String
  updatedAt: String
  updatedBy: String
  voucherCode: String
  voucherDiscount: Float
  voucherId: String
  voucherNumber: String
  voucherOrderId: String
  voucherRefunded: Boolean
  voucherTitle: String
}

type OrderDetail @aws_api_key @aws_cognito_user_pools {
  associatedProducts: [ProductInBundle]
  comment: String
  compareAtPrice: Float
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  description: String
  fulfilledQuantity: Int
  isCancelledItem: Boolean
  isFreeItem: Boolean
  isPreOrder: Boolean
  itemId: String
  itemImage: String
  itemIsVirtualGoods: Boolean
  itemProperty: String
  itemSku: String
  itemStatus: String
  itemTitle: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  mandatoryItem: Boolean
  manualPaymentReceipt: String
  merchantId: String
  orderDetailId: String
  orderId: String
  orderNumber: String
  orderedQuantity: Int
  pickupCompareAtPrice: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  price: Float
  priceWithTax: Float
  promoCode: String
  promoCodeDiscount: Float
  rating: Int
  redemptionCode: String
  refundQuantity: Int
  selectedModifierGroups: [ModifierGroups]
  subtotal: Float
  subtotalWithTax: Float
  timeslotEndDateTime: String
  timeslotStartDateTime: String
  totalDiscount: Float
  totalPromoCodeDiscount: Float
  totalVoucherDiscount: Float
  updatedAt: String
  updatedBy: String
  voucherDiscount: Float
  voucherNumber: String
}

type OrderDetailOrVoucherDetail @aws_api_key @aws_cognito_user_pools {
  associatedProducts: [ProductInBundle]
  comment: String
  compareAtPrice: Float
  createdAt: String
  createdBy: String
  customerId: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  description: String
  fulfilledQuantity: Int
  grandTotal: Float
  isFreeItem: Boolean
  itemId: String
  itemImage: String
  itemIsVirtualGoods: Boolean
  itemProperty: String
  itemSku: String
  itemStatus: String
  itemTitle: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  mandatoryItem: Boolean
  manualPaymentReceipt: String
  merchantId: String
  orderDetailId: String
  orderId: String
  orderNumber: String
  orderedQuantity: Int
  pickupCompareAtPrice: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  price: Float
  priceWithTax: Float
  promoCode: String
  promoCodeDiscount: Float
  rating: Int
  redemptionCode: String
  refundQuantity: Int
  selectedModifierGroups: [ModifierGroups]
  singleVoucherQuantity: Int
  subtotal: Float
  subtotalWithTax: Float
  totalDiscount: Float
  totalPromoCodeDiscount: Float
  totalVoucherDiscount: Float
  updatedAt: String
  updatedBy: String
  voucherDesc: String
  voucherDiscount: Float
  voucherId: String
  voucherImage: String
  voucherNumber: String
  voucherTitle: String
  voucherType: String
}

type OrderInvoiceResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  order: OrderPrintDetails
  status: String
}

type OrderOrVoucher @aws_api_key @aws_cognito_user_pools {
  ETACustomer: String
  ETAMerchant: String
  accumulatedRefundAmount: Float
  actualDeliveryFee: Float
  billingAddress: String
  billingCity: String
  billingCountry: String
  billingPostalCode: String
  billingState: String
  cancelledBy: String
  cancelledReason: String
  createdAt: String
  createdBy: String
  customerAccountNo: String
  customerFirstName: String
  customerIP: String
  customerId: String
  customerLastName: String
  customerMobileNo: String
  customerPrimaryEmail: String
  deliveryAddress: String
  deliveryCity: String
  deliveryCountry: String
  deliveryDiscount: Float
  deliveryLatitude: String
  deliveryLongitude: String
  deliveryMode: String
  deliveryNumber: String
  deliveryOrderDateTime: String
  deliveryOrderId: String
  deliveryPartnerName: String
  deliveryPostalCode: String
  deliveryState: String
  deliveryStatus: String
  deliveryType: String
  driverLatitude: Float
  driverLongitude: Float
  driverName: String
  driverPhoneNumber: String
  driverPlateNumber: String
  estimatedDeliveryFee: Float
  grandTotal: Float
  image: String
  isAdvancedOrder: Boolean
  isRefunded: Boolean
  isReviewAvailable: Boolean
  manualPaymentMethodName: String
  manualPaymentReceipt: String
  merchantId: String
  noteToRider: String
  ongoingTicket: String
  orderCancellationDateTime: String
  orderCollectedDateTime: String
  orderCompletedDateTime: String
  orderDateTime: String
  orderId: String
  orderNumber: String
  orderType: String
  overallRating: Int
  packageNumber: String
  partialFulfilmentAmount: Float
  partialFulfilmentDiscount: Float
  paymentDateTime: String
  paymentMethod: String
  paymentStatus: String
  paymentType: String
  pickupAddress: String
  pickupCity: String
  pickupCountry: String
  pickupPostalCode: String
  pickupState: String
  pointsCollectable: Int
  promoCode: String
  promoCodeDiscount: Float
  promoCodeId: String
  promoCodeTitle: String
  quantity: Int
  refundAmount: Float
  refundCompleteDateTime: String
  refundReason: String
  remarks: String
  requiredCutlery: Boolean
  salesChannelName: String
  scheduledDate: String
  scheduledDateTime: String
  scheduledTime: String
  sellerNote: String
  senderName: String
  standardDeliveryAwb: String
  standardDeliveryAwbIdLink: String
  standardDeliveryTrackingUrl: String
  status: String
  storeCode: String
  storeId: String
  storeName: String
  subtotal: Float
  subtotalWithTax: Float
  tableNumber: String
  taggingNames: [String]
  totalDiscount: Float
  totalOrderItems: Int
  totalPromoCodeDiscount: Float
  totalRefundedAmount: Float
  totalVoucherDiscount: Float
  transactionId: String
  truckId: String
  truckName: String
  type: String
  updatedAt: String
  updatedBy: String
  voucherDiscount: Float
  voucherId: String
  voucherNumber: String
  voucherOrderId: String
  voucherProcessed: Boolean
  voucherType: String
}

type OrderPayment @aws_api_key @aws_cognito_user_pools {
  amount: Float
  createdAt: String
  createdBy: String
  eGHLAmount: String
  eGHLAuthCode: String
  eGHLBankRefNo: String
  eGHLCurrencyCode: String
  eGHLHashValue: String
  eGHLHashValue2: String
  eGHLIssuingBank: String
  eGHLOrderNumber: String
  eGHLPaymentID: String
  eGHLPymtMethod: String
  eGHLRespTime: String
  eGHLServiceID: String
  eGHLTransactionType: String
  eGHLTxnID: String
  eGHLTxnMessage: String
  eGHLTxnStatus: String
  merchantId: String
  orderId: String
  orderPaymentId: String
  paymentMethod: String
  paymentNumber: String
  paymentOrderNumber: String
  paymentResponseBase64: String
  status: String
  transactionType: String
  updatedAt: String
  updatedBy: String
}

type OrderPaymentMessage @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  errorMessage: String
  gatewayPaymentId: String
  gatewayPaymentParams: String
  gatewayPaymentUrl: String
  gatewayType: String
  merchantId: String
  messageId: String
  orderId: String
  orderNumber: String
  orderPaymentMessageId: String
  updatedAt: String
}

type OrderPrintDetails @aws_api_key @aws_cognito_user_pools {
  AWBRef: String
  barcode: String
  billingAddress: String
  currency: String
  deliveryAddressType: String
  deliveryCode: String
  deliveryDiscount: Float
  deliveryNumber: String
  deliveryOrderDateTime: String
  deliveryType: String
  estimatedDeliveryFee: Float
  grandTotal: Float
  invoiceNo: String
  issueDateTime: String
  merchantEmail: String
  merchantName: String
  officeRemarks: String
  orderDateTime: String
  orderId: String
  orderItems: [OrderDetail]
  parcelInfo: String
  paymentAmount: Float
  paymentType: String
  portCode: String
  printDateTime: String
  promoCode: String
  promoCodeDiscount: Float
  promoCodeTitle: String
  recipientInfo: OrderPrintRecipientInfo
  remarks: String
  salesChannelName: String
  sellerRemarks: String
  senderInfo: OrderPrintSenderInfo
  shippingAddress: String
  status: String
  storeAddress: String
  storeName: String
  subtotal: Float
  subtotalWithTax: Float
  totalOrderItems: Int
  type: String
  weight: Float
}

type OrderPrintDetailsResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  orders: [OrderPrintDetails]
  status: String
}

type OrderPrintRecipientInfo @aws_api_key @aws_cognito_user_pools {
  address: String
  name: String
  phone: String
}

type OrderPrintSenderInfo @aws_api_key @aws_cognito_user_pools {
  merchantAddress: String
  merchantName: String
  merchantPhone: String
}

type OrderReview @aws_api_key @aws_cognito_user_pools {
  attachment: [String]
  comment: String
  createdAt: String
  customerId: String
  merchantId: String
  orderId: String
  orderReviewId: String
  updatedAt: String
}

type OtpVerificationResp @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  tokenData: TokenData
}

type OutputLookupField @aws_api_key @aws_cognito_user_pools {
  dataLabelType: String
  fieldIndex: Int
  inputFieldIndex: Int
  keyColumns: [String]
  lookupId: String
  lookupType: String
  relationship: String
  requireKey: String
  secondaryFieldIndex: [Int]
  shareKey: String
}

type PageLayout {
  collectionProductDisplayCount: Int
  createdAt: String
  createdBy: String
  merchantId: String
  newsletterBanner: String
  newsletterText: String
  pageLayoutId: String
  type: String
  updatedAt: String
  updatedBy: String
}

type PageLayoutResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  pageLayout: [PageLayout]
  status: Boolean
}

type PaymentGatewayResponse @aws_api_key @aws_cognito_user_pools {
  companyName: String
  isDisabled: Boolean
  serviceId: String
  servicePassword: String
}

type PaymentOptionsResponse @aws_api_key @aws_cognito_user_pools {
  manualPaymentOptionList: [ManualPaymentOptionResponse]
  message: String
  onBoardRole: String
  status: Boolean
}

type PelangiCustomers @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  customerGroup: String
  customerIdentifier: String
  customerName: String
  pelangiCustomerId: String
  updatedAt: String
  updatedBy: String
}

type PelangiIsbn @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  customerGroup: String
  inventoryId: String
  pelangiIsbnId: String
  updatedAt: String
  updatedBy: String
}

type PendingCheckoutCart @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  customerFirstName: String
  customerId: String
  customerLastName: String
  merchantId: String
  salesChannelName: String
  totalPrice: Float
  totalProducts: Int
  totalQuantity: Int
  updatedAt: String
}

type PendingCheckoutCartsResponse @aws_cognito_user_pools {
  items: [PendingCheckoutCart]
  nextToken: String
  total: Int
}

type PlaceCustomerOrderToSQSResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  messageId: String
  status: String
}

type PlaceGiftCardOrderToSQSResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  messageId: String
  status: String
}

type PointConversion @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  itemId: String
  itemImage: String
  itemProperty: String
  itemTitle: String
  merchantId: String
  multiplier: Float
  pointConversionId: String
  productId: String
  spent: Float
  updatedAt: String
  updatedBy: String
}

type PreviewCustomer @aws_cognito_user_pools {
  firstName: String
  frequentPurchasedProduct: String
  lastName: String
  lastTransactionDate: String
  lastTransactionProduct: String
  lastTransactionStore: String
}

type PriceGroup @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  delivery: Float
  increment: Float
  incrementType: String
  merchantId: String
  name: String
  pickUp: Float
  priceGroupId: String
  stores: [StoreInfo]
  updatedAt: String
  updatedBy: String
}

type PriceGroupResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  priceGroupId: String
  status: String
}

type Product @aws_api_key @aws_cognito_user_pools {
  code: String
  collectionNames: [String]
  cover: String
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  description: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  hasVariant: Boolean
  image: [String]
  isDisabled: Boolean
  isPreOrder: Boolean
  isVirtualGoods: Boolean
  merchantId: String
  modifierProduct: Boolean
  noOfPurchases: Int
  noOfViews: Int
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  platform: String
  productId: String
  promotionEndDateTime: String
  promotionStartDateTime: String
  sellOnFacebookStore: Boolean
  sellOnFoodPanda: Boolean
  sellOnGrabFood: Boolean
  sellOnGrabMart: Boolean
  sellOnInstagram: Boolean
  sellOnLazada: Boolean
  sellOnOfflineStore: Boolean
  sellOnOnlineStore: Boolean
  sellOnPandaMart: Boolean
  sellOnShopee: Boolean
  seoDescription: String
  seoTitle: String
  seoUrl: String
  taggingNames: [String]
  thumbnailCover: String
  timeslotType: String
  timeslots: [Timeslot]
  title: String
  updatedAt: String
  updatedBy: String
  variantName1: String
  variantName2: String
  variantName3: String
  variantValues1: [String]
  variantValues2: [String]
  variantValues3: [String]
  video: String
  virtualGoodsExpiredAt: String
  virtualGoodsExpiryDays: String
}

type ProductBundle @aws_api_key @aws_cognito_user_pools {
  barcode: String
  collectionNames: [String]
  cover: String
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  description: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  hasVariant: Boolean
  image: [String]
  isDisabled: Boolean
  isProductBundleTaxable: Boolean
  merchantId: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  productBundleId: String
  promotionEndDateTime: String
  promotionStartDateTime: String
  sellOnFacebookStore: Boolean
  sellOnFoodPanda: Boolean
  sellOnGrabFood: Boolean
  sellOnGrabMart: Boolean
  sellOnInstagram: Boolean
  sellOnLazada: Boolean
  sellOnOfflineStore: Boolean
  sellOnOnlineStore: Boolean
  sellOnPandaMart: Boolean
  sellOnShopee: Boolean
  seoDescription: String
  seoTitle: String
  seoUrl: String
  shippingDimensionHeight: Float
  shippingDimensionLength: Float
  shippingDimensionWidth: Float
  shippingWeight: Float
  shippingWeightUnit: String
  sku: String
  taggingNames: [String]
  title: String
  updatedAt: String
  updatedBy: String
  video: String
}

type ProductBundleAndPricing @aws_api_key @aws_cognito_user_pools {
  productBundles: [ProductBundleWithPrice]
  salesChannelName: String
}

type ProductBundleDetail @aws_api_key @aws_cognito_user_pools {
  merchantId: String
  productBundleDetailId: String
  productBundleId: String
  productId: String
  productImage: String
  productSku: String
  productTitle: String
  productUOMId: String
  quantity: Int
  updatedAt: String
  updatedBy: String
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
}

type ProductBundleNamesResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  productBundleNames: [String]
  status: Boolean
}

type ProductBundleResponse @aws_api_key @aws_cognito_user_pools {
  barcode: String
  collectionNames: [String]
  cover: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  description: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  image: [String]
  isDisabled: Boolean
  isProductBundleTaxable: Boolean
  merchantId: String
  message: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  productBundleDetails: [ProductBundleDetail]
  productBundleId: String
  productBundlePricing: [ProductBundleStoreProduct]
  promotionEndDateTime: String
  promotionStartDateTime: String
  quantityForSales: Int
  sellOnFacebookStore: Boolean
  sellOnFoodPanda: Boolean
  sellOnGrabFood: Boolean
  sellOnGrabMart: Boolean
  sellOnInstagram: Boolean
  sellOnLazada: Boolean
  sellOnOfflineStore: Boolean
  sellOnOnlineStore: Boolean
  sellOnPandaMart: Boolean
  sellOnShopee: Boolean
  seoDescription: String
  seoTitle: String
  seoUrl: String
  shippingDimensionHeight: Float
  shippingDimensionLength: Float
  shippingDimensionWidth: Float
  shippingWeight: Float
  shippingWeightUnit: String
  sku: String
  status: String
  taggingNames: [String]
  title: String
  totalStockQuantity: Int
}

type ProductBundleStoreProduct @aws_api_key @aws_cognito_user_pools {
  salesChannelName: String
  storeProducts: [StoreProductBySalesChannel]
}

type ProductBundleWithPrice @aws_api_key @aws_cognito_user_pools {
  barcode: String
  collectionNames: [String]
  cover: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryEffectiveEndDateTime: String
  deliveryEffectiveStartDateTime: String
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  description: String
  image: [String]
  marketPlaceAttributes: [MarketPlaceProductSpecList]
  marketPlaceBrand: MarketPlaceProductSpecList
  marketPlaceCategories: [MarketPlaceProductSpecList]
  marketPlaceProductCode: String
  marketPlaceProductUOMCode: String
  marketPlaceShippingPartner: String
  merchantId: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupEffectiveEndDateTime: String
  pickupEffectiveStartDateTime: String
  pickupPrice: Float
  pickupPriceWithTax: Float
  productBundleId: String
  productBundlePricingId: String
  quantityForSales: Int
  salesChannelName: String
  seoDescription: String
  seoTitle: String
  seoUrl: String
  sku: String
  storeId: String
  storeName: String
  storeProductId: String
  taggingNames: [String]
  title: String
}

type ProductCollection @aws_api_key @aws_cognito_user_pools {
  banner: String
  condition: String
  conditionType: String
  createdAt: String
  createdBy: String
  description: String
  icon: String
  merchantId: String
  name: String
  productCollectionId: String
  seoDescription: String
  seoTitle: String
  seoUrl: String
  taggingNames: [String]
  type: String
  updatedAt: String
  updatedBy: String
}

type ProductDetailResponse @aws_api_key @aws_cognito_user_pools {
  cover: String
  description: String
  discountPercentage: String
  image: [String]
  isPreOrder: Boolean
  message: String
  modifierGroups: [ModifierGroups]
  priceComparedAtPriceRange: String
  priceRange: String
  productIsDisabled: Boolean
  productUOMs: [ProductUOMDetailWithPriceAndQuantity]
  status: String
  timeslotType: String
  timeslots: [TimeslotsProductDetail]
  title: String
  totalRatings: Int
  totalReviews: Int
  variantName1: String
  variantName2: String
  variantName3: String
  variantValues1: [String]
  variantValues2: [String]
  variantValues3: [String]
  video: String
}

type ProductExclusion @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  itemId: String
  itemImage: String
  itemProperty: String
  itemTitle: String
  merchantId: String
  productExclusionId: String
  productId: String
  type: String
  updatedAt: String
  updatedBy: String
}

type ProductInBundle @aws_api_key @aws_cognito_user_pools {
  productId: String
  productImage: String
  productSku: String
  productTitle: String
  productUOMId: String
  quantity: Int
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
}

type ProductInventoryBasedOnSalesChannel @aws_api_key @aws_cognito_user_pools {
  productUOMs: [ProductUOMWithPriceAndQuantity]
  salesChannelName: String
}

type ProductReview @aws_api_key @aws_cognito_user_pools {
  comment: String
  createdAt: String
  createdBy: String
  customerFirstName: String
  customerLastName: String
  itemId: String
  itemProperty: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  merchantId: String
  orderDetailId: String
  orderId: String
  orderNumber: String
  productReviewId: String
  rating: Int
  reviewAsAnonymous: String
  updatedAt: String
  updatedBy: String
}

type ProductUOM @aws_api_key @aws_cognito_user_pools {
  barcode: String
  collectionNames: [String]
  createdAt: String
  createdBy: String
  image: String
  incomingQuantity: Int
  isDisabled: Boolean
  isProductTaxable: Boolean
  isVirtualGoods: Boolean
  merchantId: String
  modifierGroups: [ModifierGroups]
  noOfPurchases: Int
  productCover: String
  productId: String
  productTitle: String
  productUOMId: String
  quantityForSales: Int
  shippingDimensionHeight: Float
  shippingDimensionLength: Float
  shippingDimensionWidth: Float
  shippingWeight: Float
  shippingWeightUnit: String
  sku: String
  taggingNames: [String]
  totalStockQuantity: Int
  trackQuantity: Boolean
  updatedAt: String
  updatedBy: String
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
  virtualGoodsExpiredAt: String
  virtualGoodsExpiryDays: String
}

type ProductUOMAndPricing @aws_api_key @aws_cognito_user_pools {
  productUOMs: [ProductUOMWithPriceAndQuantity]
  salesChannelName: String
}

type ProductUOMDetailWithPriceAndQuantity @aws_api_key @aws_cognito_user_pools {
  barcode: String
  collectionNames: [String]
  compareAtPrice: Float
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryEffectiveEndDateTime: String
  deliveryEffectiveStartDateTime: String
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  estimatedRestockDate: String
  image: [String]
  incomingQuantity: Int
  isDisabled: Boolean
  isNewArrival: Boolean
  isProductTaxable: Boolean
  marketPlaceAttributes: [MarketPlaceProductSpecList]
  marketPlaceBrand: MarketPlaceProductSpecList
  marketPlaceCategories: [MarketPlaceProductSpecList]
  marketPlaceProductUOMCode: String
  marketPlaceShippingPartner: String
  memberDiscount: MemberDiscount
  merchantId: String
  newArrivalDate: String
  noOfPurchases: Int
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupEffectiveEndDateTime: String
  pickupEffectiveStartDateTime: String
  pickupPrice: Float
  pickupPriceWithTax: Float
  price: Float
  priceWithTax: Float
  productId: String
  productTitle: String
  productUOMId: String
  productUOMPricingId: String
  quantityForSales: Int
  quantityType: String
  salesChannelName: String
  shippingDimensionHeight: Float
  shippingDimensionLength: Float
  shippingDimensionWidth: Float
  shippingWeight: Float
  shippingWeightUnit: String
  sku: String
  storeId: String
  storeName: String
  storeProductId: String
  taggingNames: [String]
  totalStockQuantity: Int
  trackQuantity: Boolean
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
}

type ProductUOMPricing @aws_api_key @aws_cognito_user_pools {
  ProductUOMPricingId: String
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryEffectiveEndDateTime: String
  deliveryEffectiveStartDateTime: String
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  merchantId: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupEffectiveEndDateTime: String
  pickupEffectiveStartDateTime: String
  pickupPrice: Float
  pickupPriceWithTax: Float
  priceGroupName: String
  productId: String
  productUOMId: String
  salesChannelName: String
  updatedAt: String
  updatedBy: String
}

type ProductUOMVariant @aws_api_key @aws_cognito_user_pools {
  name: String
  value: String
}

type ProductUOMWithPriceAndQuantity @aws_api_key @aws_cognito_user_pools {
  barcode: String
  collectionNames: [String]
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryEffectiveEndDateTime: String
  deliveryEffectiveStartDateTime: String
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  estimatedRestock: Int
  image: String
  incomingQuantity: Int
  isDisabled: Boolean
  isNewArrival: Boolean
  isPreOrder: Boolean
  isProductTaxable: Boolean
  isVirtualGoods: Boolean
  marketPlaceAttributes: [MarketPlaceProductSpecList]
  marketPlaceBrand: MarketPlaceProductSpecList
  marketPlaceCategories: [MarketPlaceProductSpecList]
  marketPlaceProductCode: String
  marketPlaceProductUOMCode: String
  marketPlaceShippingPartner: String
  merchantId: String
  modifierGroups: [ModifierGroups]
  newArrivalDate: String
  noOfPurchases: Int
  packageSize: Int
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupEffectiveEndDateTime: String
  pickupEffectiveStartDateTime: String
  pickupPrice: Float
  pickupPriceWithTax: Float
  preOrderReservedQuantity: Int
  productId: String
  productTitle: String
  productUOMId: String
  productUOMPricingId: String
  quantityBundleForSales: Int
  quantityForSales: Int
  quantityType: String
  salesChannelName: String
  shippingDimensionHeight: Float
  shippingDimensionLength: Float
  shippingDimensionWidth: Float
  shippingWeight: Float
  shippingWeightUnit: String
  sku: String
  skuLimitPerDay: Int
  storeId: [String]
  storeName: String
  storeProductId: String
  taggingNames: [String]
  totalStockQuantity: Int
  trackQuantity: Boolean
  updatedAt: String
  updatedBy: String
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
  virtualGoodsExpiredAt: String
  virtualGoodsExpiryDays: String
}

type ProductWithProductUOMs @aws_api_key @aws_cognito_user_pools {
  merchantId: String
  productCover: String
  productId: String
  productTitle: String
  productUOMs: [ProductUOM]
}

type ProductsDiscountIdsResponse @aws_api_key @aws_cognito_user_pools {
  collectionName: String
  productBundleId: String
  productId: String
  productUOMId: String
}

type ProductsDiscountResponse @aws_api_key @aws_cognito_user_pools {
  ids: [ProductsDiscountIdsResponse]
  type: String
}

type ProductsRecommendation @aws_api_key @aws_cognito_user_pools {
  barcode: String
  collectionNames: [String]
  continueSellingWhenOOS: Boolean
  createdAt: String
  createdBy: String
  discountedPrice: Float
  isDisabled: Boolean
  media: [String]
  merchantId: String
  price: Float
  productId: String
  productTitle: String
  productUOMId: String
  quantity: Int
  seoUrl: String
  sku: String
  taggingNames: [String]
  trackQuantity: Boolean
  updatedAt: String
  updatedBy: String
  variant: [ProductUOMVariant]
}

type ProductsRecommendationResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  products: [ProductsRecommendation]
  status: String
}

type PromoCodeCampaign @aws_api_key @aws_cognito_user_pools {
  activeCount: String
  category: String
  createdBy: String
  customerCondition: String
  deliveryDiscountType: String
  discountAmountCap: Float
  discountOnProductValue: Float
  discountQuantityCap: Int
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  isDisabled: Boolean
  maxUserUsageLimit: Int
  merchantId: String
  minimumCondition: String
  minimumPurchase: Float
  minimumQuantity: Int
  orderType: [String]
  productConditions: ProductsDiscountResponse
  productsDiscount: ProductsDiscountResponse
  promoCode: String
  promoCodeCampaignId: String
  remainingUsage: Int
  specificCustomerTag: String
  specificCustomers: [String]
  status: String
  stores: [String]
  title: String
  totalUsageLimit: Int
  type: String
  updatedAt: String
  updatedBy: String
}

type PromotionalWidget @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantId: String
  promotionalWidgetId: String
  updatedAt: String
  updatedBy: String
  widgetName: String
  widgetUrl: String
}

type PromotionalWidgetCacheResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: Boolean
  widgets: [PromotionalWidget]
}

type PromotionalWidgetResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  promotionalWidget: PromotionalWidget
  status: String
}

type PromptGetAssociatedProductResponse @aws_cognito_user_pools {
  condition: SmartTaggingCondition
  listOfAssociatedProducts: [SmartTaggingProduct]
  message: String
  status: String
}

type PublicCustomerCart @aws_api_key @aws_cognito_user_pools {
  customerCartId: String
  customerId: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  errorMessage: String
  facebookLiveCampaignDetailId: String
  isFreeItem: Boolean
  itemCode: String
  itemId: String
  itemImage: String
  itemProperty: String
  itemSku: String
  itemTitle: String
  itemUom: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  mandatoryItem: Boolean
  maxQuantity: Int
  modifierSubtotal: Float
  pickupCompareAtPrice: Float
  pickupPrice: Float
  pickupPriceWithoutTax: Float
  quantity: Int
  salesChannelName: String
  selectedModifierGroups: [ModifierGroups]
  shippingWeight: Float
  shippingWeightUnit: String
  storeId: String
  storeName: String
  subtotal: Float
  subtotalWithTax: Float
  timeslotEndDateTime: String
  timeslotStartDateTime: String
  type: String
}

type PublicCustomerCartsResponse @aws_api_key @aws_cognito_user_pools {
  items: [PublicCustomerCart]
  message: String
  status: String
}

type Query {
  adminDownloadEInvoiceUploadFile(fileKey: String, itemId: String, mode: String): AdminDownloadEInvoiceUploadFileResponse @aws_api_key @aws_cognito_user_pools
  adminDownloadMerchantOrderPDFReceipt(merchantOrderId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminDownloadS3File(s3Path: String): AdminDownloadS3FileResponse @aws_cognito_user_pools
  adminDownloadTextractDocument(documentSource: String, s3Key: String): adminDownloadTextractDocumentResponse @aws_api_key @aws_cognito_user_pools
  adminGetAccountList(merchantId: String): AdminGetAccountListResponse @aws_cognito_user_pools
  adminGetAnalytics(currentPeriodEndDate: String, currentPeriodStartDate: String, limit: Int, merchantId: String, nextToken: String, prevPeriodEndDate: String, prevPeriodStartDate: String, reportType: String, salesChannel: String): AnalyticsResponse @aws_cognito_user_pools
  adminGetAutopilotEvent(eventFlowId: String): adminGetAutopilotEventResponse @aws_cognito_user_pools
  adminGetBranch(branchId: String): adminGetBranchResponse @aws_cognito_user_pools
  adminGetChatbotSetting: GetChatbotSettingResponse @aws_api_key @aws_cognito_user_pools
  adminGetContactUsInfo(merchantId: String): ContactUsInfoResponse @aws_api_key @aws_cognito_user_pools
  adminGetContactUsStore(contactUsStoreId: String, merchantId: String): ContactUsStoreResponse @aws_api_key @aws_cognito_user_pools
  adminGetCustomOrder(customOrderId: String, merchantId: String): CustomOrderResponse @aws_api_key @aws_cognito_user_pools
  adminGetCustomer(customerId: String, limit: Int, merchantId: String, nextToken: String): CustomerResponse @aws_cognito_user_pools
  adminGetCustomerCarts(customerId: String, merchantId: String): CustomerCartsResponse @aws_cognito_user_pools
  adminGetCustomerIssueDetail(customerId: String, issueId: String, issueType: String): adminGetCustomerIssueDetailResponse @aws_api_key @aws_cognito_user_pools
  adminGetCustomerIssueList(channel: String, chatId: String): adminGetCustomerIssueListResponse @aws_api_key @aws_cognito_user_pools
  adminGetCustomerOrderDetailList(merchantId: String, orderId: String): CustomerOrderDetailListResponse @aws_cognito_user_pools
  adminGetCustomerOrderList(customerId: String, merchantId: String, nextToken: Int, status: String): CustomerOrderListResponse @aws_cognito_user_pools
  adminGetCustomerWishList(customerId: String, merchantId: String, nextToken: String, orderType: String, storeId: String): CustomerWishListResponse @aws_cognito_user_pools
  adminGetDashboard(dashboardId: String): DashboardResponse @aws_api_key @aws_cognito_user_pools
  adminGetDeliveryTransitionLog(orderNumber: String): adminGetDeliveryTransitionLogResponse @aws_api_key @aws_cognito_user_pools
  adminGetDocumentAuditTrail(filter: DocumentAuditTrailFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): AdminGetDocumentAuditTrailResponse @aws_api_key @aws_cognito_user_pools
  adminGetDocumentColumnMapping(customFilter: DocumentColumnMappingFilter, filter: SearchDocumentColumnMappingsFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): searchDocumentColumnMappingsResponse @aws_api_key @aws_cognito_user_pools
  adminGetDocumentListAndDetail(customFilter: DocumentDataFilter, filter: SearchDocumentsFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): searchDocumentsResponse @aws_api_key @aws_cognito_user_pools
  adminGetDocumentLookupAutoCompleteWords(additionalKeyColumns: [String], extractedDocumentLookupId: String, keyColumn: String, limit: Int, lookupKeyword: String): LookupAutoCompleteWordsResponse @aws_api_key @aws_cognito_user_pools
  adminGetDownloadJobStatus(downloadJobId: String, merchantId: String): DownloadJobStatusResponse @aws_api_key @aws_cognito_user_pools
  adminGetDynamicForm(dynamicFormId: String): AdminGetDynamicFormResponse @aws_api_key @aws_cognito_user_pools
  adminGetDynamicFormAnswer(dynamicFormAnswerId: String): AdminGetDynamicFormAnswerResponse @aws_api_key @aws_cognito_user_pools
  adminGetEInvoiceDetail(domain: String, eInvoiceId: String): EInvoiceDetailResponse @aws_api_key @aws_cognito_user_pools
  adminGetFacebookLiveCampaign(facebookLiveCampaignId: String, merchantId: String): GetFacebookLiveCampaignResponse @aws_api_key @aws_cognito_user_pools
  adminGetFacebookLiveMessageTemplate(merchantId: String): GetFacebookLiveMessageResponse @aws_cognito_user_pools
  adminGetFacebookLiveSalesPerformance(facebookLiveCampaignId: String, merchantId: String): FacebookLiveCampaignSalesPerformanceResponse @aws_cognito_user_pools
  adminGetFacebookTokenIndicator(merchantId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  adminGetFaq(faqId: String, merchantId: String): FaqItemResponse @aws_api_key @aws_cognito_user_pools
  adminGetFaqCategory(faqCategoryId: String, merchantId: String): FaqCategoryResponse @aws_api_key @aws_cognito_user_pools
  adminGetFilterTab(merchantId: String, type: String): FilterTabResponse @aws_api_key @aws_cognito_user_pools
  adminGetFoodMarketPlaceCustomerRevenueSegment(marketPlaceChannel: String, numOfDays: Int): adminGetFoodMarketPlaceCustomerRevenueSegmentResponse @aws_api_key @aws_cognito_user_pools
  adminGetFoodMarketPlaceSmsCampaign(foodMarketPlaceSmsCampaignId: String): adminGetFoodMarketPlaceSmsCampaignResponse @aws_api_key @aws_cognito_user_pools
  adminGetFoodMarketPlaceSmsCampaignList: adminGetFoodMarketPlaceSmsCampaignListResponse @aws_api_key @aws_cognito_user_pools
  adminGetHomeCollection(homeCollectionId: String, merchantId: String): HomeCollectionResponse @aws_api_key @aws_cognito_user_pools
  adminGetImportJobStatus(fileName: String): ImportJobStatusResponse @aws_cognito_user_pools
  adminGetInStoreOrderDetail(inStoreOrderId: String): AdminGetInStoreOrderResponse @aws_api_key @aws_cognito_user_pools
  adminGetItemQuantityForSales(itemId: String, itemProperty: String, merchantId: String): GetItemQuantityForSalesResponse @aws_cognito_user_pools
  adminGetLandingPageBanner(landingPageBannerId: String, merchantId: String): LandingPageBannerResponse @aws_cognito_user_pools
  adminGetLazadaProductSpec(merchantId: String, parentId: String, storeId: String, type: String): LazadaProductSpecResponse @aws_cognito_user_pools
  adminGetLegalPolicy(merchantId: String): LegalPolicyResponse @aws_cognito_user_pools
  adminGetLookupDetail(filter: SearchLookupDetailFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): adminGetLookupDetailResponse @aws_api_key @aws_cognito_user_pools
  adminGetMembershipSetting: adminGetMembershipSettingResponse @aws_cognito_user_pools
  adminGetMerchantAboutUs(merchantId: String): AboutUsResponse @aws_api_key @aws_cognito_user_pools
  adminGetMerchantAccessList: AdminGetMerchantAccessListResponse @aws_cognito_user_pools
  adminGetMerchantBusinessInfo: AdminGetMerchantBusinessInfoResponse @aws_api_key @aws_cognito_user_pools
  adminGetMerchantDepartmentMessageOverview: adminGetMerchantDepartmentMessageOverviewResponse @aws_api_key @aws_cognito_user_pools
  adminGetMerchantEInvoiceInfo: EInvoiceMerchantDetail @aws_api_key @aws_cognito_user_pools
  adminGetMerchantGeneralConfig(merchantId: String): MerchantGeneralConfigResponse @aws_cognito_user_pools
  adminGetMerchantGeneralConfigAndSiteAnalytics(merchantId: String): MerchantGeneralConfigAndSiteAnalyticsResponse @aws_cognito_user_pools
  adminGetMerchantPaymentConfig(merchantId: String): MerchantPaymentConfigResponse @aws_cognito_user_pools
  adminGetMerchantShippingCreditBalance(merchantId: String): MerchantShippingCreditBalanceResponse @aws_cognito_user_pools
  adminGetMerchantShippingCreditBalanceAndTransactions(limit: Int, merchantId: String, nextToken: String): adminGetMerchantShippingCreditBalanceAndTransactionsResponse @aws_api_key @aws_cognito_user_pools
  adminGetMerchantSiteFontAndColor(merchantId: String): MerchantSiteFontAndColorResponse @aws_api_key @aws_cognito_user_pools
  adminGetModuleList: AdminGetModuleListResponse @aws_api_key @aws_cognito_user_pools
  adminGetNotificationBarMessage(merchantId: String): GetNotificationBarMessageResponse @aws_cognito_user_pools
  adminGetNotificationSetting(merchantId: String, type: String): NotificationSetting @aws_cognito_user_pools
  adminGetNotificationSettingStatus(merchantId: String): NotificationSettingStatusResponse @aws_cognito_user_pools
  adminGetOrderPrintDetails(merchantId: String, orderId: [String], storeName: String, type: String): OrderPrintDetailsResponse @aws_cognito_user_pools
  adminGetPriceGroup(priceGroupId: String): PriceGroup @aws_cognito_user_pools
  adminGetProduct(merchantId: String, productId: String): GetProductResponse @aws_cognito_user_pools
  adminGetProductBundle(merchantId: String, productBundleId: String): ProductBundleResponse @aws_cognito_user_pools
  adminGetProductBundleNames(merchantId: String, productIdList: [String]): ProductBundleNamesResponse @aws_cognito_user_pools
  adminGetProductCollection(merchantId: String, productCollectionId: String): ProductCollection @aws_cognito_user_pools
  adminGetProductInventory(merchantId: String, productId: String): GetProductInventoryResponse @aws_cognito_user_pools
  adminGetPromoCodeCampaign(merchantId: String, promoCodeCampaignId: String): GetPromoCodeCampaignResponse @aws_cognito_user_pools
  adminGetPromotionalWidget(promotionalWidgetId: String): PromotionalWidgetResponse @aws_cognito_user_pools
  adminGetPushNotification(notificationCampaignId: String): AdminGetPushNotificationResponse @aws_api_key @aws_cognito_user_pools
  adminGetSMSConfigDetail(smsCampaignId: String): SMSConfigDetail @aws_api_key @aws_cognito_user_pools
  adminGetSMSConfigList: adminGetSMSConfigListResponse @aws_api_key @aws_cognito_user_pools
  adminGetSalesAgent(salesAgentId: String): SalesAgentResponse @aws_cognito_user_pools
  adminGetSalesChannelSetting(merchantId: String, salesChannelId: String, salesChannelName: String, storeId: String): SalesChannelSettingResponse @aws_cognito_user_pools
  adminGetShopeeAWB(merchantId: String, orderNumber: String, packageNumber: String, storeId: String, trackingNo: String): AWBResponse @aws_cognito_user_pools
  adminGetShopeeDeliveryPartner(merchantId: String, storeId: String): ShopeeDeliveryPartnerResponse @aws_cognito_user_pools
  adminGetShopeeProductSpec(merchantId: String, parentId: String, storeId: String, type: String): ShopeeProductSpecResponse @aws_cognito_user_pools
  adminGetSiteNavigation(merchantId: String, siteNavigationId: String): SiteNavigationResponse @aws_cognito_user_pools
  adminGetSmartTagging(smartTaggingId: String): GetSmartTaggingResponse @aws_api_key @aws_cognito_user_pools
  adminGetSmartVoucherCampaign(smartVoucherCampaignId: String): adminGetSmartVoucherCampaignResponse @aws_cognito_user_pools
  adminGetSmsTemplate(smsTemplateId: String): SmsTemplateItemResponse @aws_api_key @aws_cognito_user_pools
  adminGetSplashScreen(merchantId: String, splashScreenId: String): SplashScreenResponse @aws_cognito_user_pools
  adminGetStampingCampaignDetail(merchantId: String, stampingCampaignId: String): adminGetStampingCampaignDetailResponse @aws_api_key @aws_cognito_user_pools
  adminGetStampingCampaignList(filter: SearchStampingCampaignFilter, limit: String, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): adminGetStampingCampaignListResponse @aws_api_key @aws_cognito_user_pools
  adminGetStockMovement(merchantId: String, stockMovementId: String): GetStockMovementResponse @aws_cognito_user_pools
  adminGetStore(storeId: String): StoreResponse @aws_cognito_user_pools
  adminGetStoreBlockedOutPeriod(merchantId: String, storeId: String): StoreBlockedOutPeriodResponse @aws_cognito_user_pools
  adminGetStoreListByProduct(merchantId: String, productBundleId: String, productId: String): GetStoreListByProductResponse @aws_cognito_user_pools
  adminGetStoreOperatingHour(merchantId: String, storeId: String): StoreOperatingHourResponse @aws_cognito_user_pools
  adminGetSupplier(merchantId: String, supplierId: String): Supplier @aws_cognito_user_pools
  adminGetTruck(truckId: String): adminGetTruckResponse @aws_cognito_user_pools
  adminGetUpdateExtractedDocumentStatus(extractedDocumentId: String): AdminGetUpdateExtractedDocumentStatusResponse @aws_api_key @aws_cognito_user_pools
  adminGetUserMatrix(userGroupId: String): UserMatrixResponse @aws_cognito_user_pools
  adminGetUserMatrixTemplate: AdminGetUserMatrixTemplateResponse @aws_api_key @aws_cognito_user_pools
  adminGetUserMerchantList: UserMerchantListResponse @aws_cognito_user_pools
  adminGetVoucher(merchantId: String, voucherId: String): GetVoucherResponse @aws_cognito_user_pools
  adminGetWSChatHistoryLog(chatId: String, filter: AdminListWSChatHistoryFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): AdminGetWSChatHistoryLogResponse @aws_cognito_user_pools
  adminGetWarehouse(merchantId: String): Warehouse @aws_cognito_user_pools
  adminGetWarehouseDeliveryConfig(warehouseId: String): WarehouseDeliveryConfigResponse @aws_cognito_user_pools
  adminGetWebhookCallbackConfig(merchantId: String): WebhookCallbackConfig @aws_cognito_user_pools
  adminListChatbotFiles(filename: String): adminListChatbotFilesResponse @aws_cognito_user_pools
  adminListChatbotItems(limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection, type: String): ListChatbotItemsResponse @aws_cognito_user_pools
  adminListEInvoices(domain: String, filter: EInvoiceFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): EInvoiceListResponse @aws_api_key @aws_cognito_user_pools
  adminListFaqCategories(filter: SearchFaqCategoriesFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchFaqCategoriesResponse @aws_cognito_user_pools
  adminListItemsAndPricing(merchantId: String, productBundleIdList: [String], productId: String, productUOMIdList: [String], salesChannelName: String): ListItemsAndPricingResponse @aws_cognito_user_pools
  adminListManualPaymentOptions(merchantId: String): PaymentOptionsResponse @aws_cognito_user_pools
  adminListMerchantCreditTransactions(limit: Int, merchantId: String, nextToken: String): ListMerchantCreditTransactionsResponse @aws_cognito_user_pools
  adminListPendingCheckoutCarts(filter: ListPendingCheckoutCartsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): PendingCheckoutCartsResponse @aws_cognito_user_pools
  adminListPointConversion(filter: SearchPointConversionsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchPointConversionsResponse @aws_cognito_user_pools
  adminListProductExclusion(filter: SearchProductExclusionsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchProductExclusionsResponse @aws_cognito_user_pools
  adminListProductInventories(filter: SearchProductUOMsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): ListProductsWithProductUOMsResponse @aws_cognito_user_pools
  adminListProductsWithProductUOMs(filter: ListProductsWithProductUOMsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): ListProductsWithProductUOMsResponse @aws_cognito_user_pools
  adminListShippingZonesAndRates(merchantId: String, warehouseId: String): ListShippingZonesAndRatesResponse @aws_cognito_user_pools
  adminListSiteNavigations(filter: SearchSiteNavigationsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchSiteNavigationsResponse @aws_cognito_user_pools
  adminListStoreProductsBySalesChannel(merchantId: String, productBundleId: String, productId: String): ListStoreProductsBySalesChannelResponse @aws_cognito_user_pools
  adminListTimeline(merchantId: String, timelineForId: String): TimelineResponse @aws_cognito_user_pools
  adminListUserMatrix(userGroupId: String): UserMatrixResponse @aws_api_key @aws_cognito_user_pools
  adminListWSChatHistory(channelAutoReply: ChannelAutoReplyListWSChatHistory, filter: AdminListWSChatHistoryFilter, hasNewIssue: Int, limit: Int, nextToken: String, smartAlert: Boolean, sort: ElasticSearchSortDirection): AdminListWSChatHistoryResponse @aws_cognito_user_pools
  adminValidateVirtualGoodsOrderCode(code: String, merchantId: String): ValidateVirtualGoodsOrderCodeResponse @aws_cognito_user_pools
  batchExportExtractedDocument(extractedDocumentId: String): BatchExportExtractedDocumentResponse @aws_api_key @aws_cognito_user_pools
  checkMerchantSetupStatus(merchantId: String): CheckMerchantSetupStatusResponse @aws_api_key @aws_cognito_user_pools
  checkProductName(seoUrl: String, title: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  customerSearchProducts(filter: SearchStoreProductsFilter, limit: Int, merchantId: String, nextToken: String, orderType: String, sort: ElasticSearchSortDirection, storeId: String): CustomerSearchProductsResponse @aws_api_key @aws_cognito_user_pools
  generateHelpCenterS3DownloadLink(domain: String, fileName: String, merchantId: String, platform: String): String @aws_api_key @aws_cognito_user_pools
  generateS3DownloadLink(merchantId: String, orderId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  getAndCheckCustomerCartProduct(accessToken: String, addressLatitude: String, addressLongitude: String, deliveryAddress: String, deviceDateTime: String, distance: Float, merchantId: String, orderType: String, productList: String, promoCode: String, returnTotalNumber: Boolean, scheduledDateTime: String, storeId: String, voucherEntryNumber: String, voucherNumber: String): CustomerCartProductResponse @aws_api_key @aws_cognito_user_pools
  getChatHistoryLog(chatId: String, domain: String, filter: AdminListWSChatHistoryFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): GetChatHistoryLogResponse @aws_api_key @aws_cognito_user_pools
  getChatbotSetting(domain: String, merchantId: String): GetChatbotSettingResponse @aws_api_key @aws_cognito_user_pools
  getCollections(filter: SearchGetCollectionsFilter, homeCollectionId: String, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): GetCollectionsResponse @aws_api_key @aws_cognito_user_pools
  getContactUsInfo(merchantId: String): ContactUsInfoResponse @aws_api_key @aws_cognito_user_pools
  getCustomOrder(customOrderId: String, merchantId: String): CustomOrderResponse @aws_api_key @aws_cognito_user_pools
  getCustomer(accessToken: String, autoSignIn: Boolean, customerId: String, merchantId: String): CustomerResponse @aws_api_key @aws_cognito_user_pools
  getCustomerCarts(cartChannel: String, customOrderId: String, customerId: String, merchantId: String, storeId: String): PublicCustomerCartsResponse @aws_api_key @aws_cognito_user_pools
  getCustomerDeliveryPickUpOrderListing(accessToken: String, customerId: String, domain: String, filterType: String, merchantId: String, platform: String): getCustomerDeliveryPickUpOrderListingResponse @aws_api_key @aws_cognito_user_pools
  getCustomerDineInOrderListing(customerId: String, filterType: String, merchantId: String): getCustomerDineInOrderListingResponse @aws_api_key @aws_cognito_user_pools
  getCustomerFavouriteAddresses(accessToken: String, customerId: String, domain: String, merchantId: String): CustomerAddressesResponse @aws_api_key @aws_cognito_user_pools
  getCustomerNotificationDetail(merchantId: String, notificationId: String): getCustomerNotificationDetailResponse @aws_api_key @aws_cognito_user_pools
  getCustomerNotificationList(customerId: String, filter: SearchProductUOMsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): getCustomerNotificationListResponse @aws_api_key @aws_cognito_user_pools
  getCustomerOrderDetail(accessToken: String, customerId: String, domain: String, filterType: String, merchantId: String, orderId: String): getCustomerOrderDetailResponse @aws_api_key @aws_cognito_user_pools
  getCustomerOrderDetailList(accessToken: String, customerId: String, domain: String, merchantId: String, orderId: String): CustomerOrderDetailListResponse @aws_api_key @aws_cognito_user_pools
  getCustomerOrderList(accessToken: String, customerId: String, domain: String, filter: SearchOrdersFilter, filterType: String, inStoreFilter: SearchInStoreOrdersFilter, limit: Int, merchantId: String, nextToken: Int, sort: ElasticSearchSortDirection): CustomerOrderListResponse @aws_api_key @aws_cognito_user_pools
  getCustomerOrderPaymentMessage(accessToken: String, customerId: String, merchantId: String, messageId: String): OrderPaymentMessage @aws_api_key @aws_cognito_user_pools
  getCustomerVoucherCart(customerId: String, merchantId: String): getCustomerVoucherCartResponse @aws_api_key @aws_cognito_user_pools
  getCustomerVoucherList(accessToken: String, customerId: String, filterType: String, merchantId: String, voucherType: String): GetCustomerVoucherListResponse
  getCustomerWishList(accessToken: String, customerId: String, merchantId: String, nextToken: String, orderType: String, storeId: String): CustomerWishListResponse @aws_api_key @aws_cognito_user_pools
  getDeliveryQuotation(customerCartIds: [String], customerFirstName: String, customerLastName: String, customerMobileNo: String, deliveryAddress: String, deliveryCity: String, deliveryCountry: String, deliveryPostalCode: String, deliveryState: String, isAdvancedOrder: Boolean, latitude: Float, longitude: Float, merchantId: String, promoCode: String, scheduledDateTime: String, storeId: String, truckId: String): DeliveryQuotationResponse @aws_api_key @aws_cognito_user_pools
  getFaqList(domain: String, merchantId: String): FaqResponse @aws_api_key @aws_cognito_user_pools
  getFeaturedHomeCollectionCache(merchantId: String, storeId: String): FeaturedHomeCollectionCacheResponse @aws_api_key @aws_cognito_user_pools
  getGiftCardDetail(merchantId: String, voucherId: String): GiftCardDetailResponse @aws_api_key @aws_cognito_user_pools
  getGiftCardTemplateList: GiftCardTemplateListResponse @aws_api_key @aws_cognito_user_pools
  getHeader(merchantId: String): HeaderResponse @aws_api_key @aws_cognito_user_pools
  getHelpCenterFaqCache(platform: String): getHelpCenterFaqCacheResponse @aws_api_key @aws_cognito_user_pools
  getHelpCenterOrderList(accessToken: String, customerId: String, domain: String, filterType: String, merchantId: String, orderNumber: String, source: String): GetHelpCenterOrderListResponse @aws_api_key @aws_cognito_user_pools
  getHomeScreenCollectionCache(accessToken: String, merchantId: String, orderType: String, storeId: String): HomeScreenCollectionCacheResponse @aws_api_key @aws_cognito_user_pools
  getIconBar(merchantId: String): IconBarResponse @aws_api_key @aws_cognito_user_pools
  getLandingPageBannerCache(accessToken: String, merchantId: String): LandingPageBannerCacheResponse @aws_api_key @aws_cognito_user_pools
  getLandingPageBannerDetail(domain: String, merchantId: String, seoUrl: String, sequence: Int): LandingPageBannerDetailResponse @aws_api_key @aws_cognito_user_pools
  getLandingPageMenuCache(merchantId: String, platform: String, version: String): LandingPageMenuCacheResponse @aws_api_key @aws_cognito_user_pools
  getLandingPageProductCache(merchantId: String, orderType: String, page: Int, pageSize: Int, storeId: String): [LandingPageProductCacheResponse] @aws_api_key @aws_cognito_user_pools
  getLegalPolicy(domain: String, merchantId: String): LegalPolicyResponse @aws_api_key @aws_cognito_user_pools
  getManualPaymentOrderStatus(domain: String, merchantId: String, orderNumber: String): GetManualPaymentOrderStatusResponse @aws_api_key @aws_cognito_user_pools
  getMemberPointLog(accessToken: String, customerId: String, merchantId: String): GetMemberPointLogResponse @aws_api_key @aws_cognito_user_pools
  getMenuCache(merchantId: String): MenuResponse @aws_api_key @aws_cognito_user_pools
  getMerchantDetails(merchantId: String): MerchantDetailsResponse @aws_api_key @aws_cognito_user_pools
  getMerchantLogo(merchantId: String): MerchantLogoResponse @aws_api_key @aws_cognito_user_pools
  getMerchantVoucherDetail(merchantId: String, voucherId: String): getMerchantVoucherDetailResponse @aws_api_key @aws_cognito_user_pools
  getMerchantVoucherList(filter: ListProductsWithProductUOMsFilter, limit: Int, merchantId: String, nextToken: String, requiredPoints: Boolean, sort: ElasticSearchSortDirection): getMerchantVoucherListResponse @aws_api_key @aws_cognito_user_pools
  getNearbyStores(city: String, customerAddress: String, deliveryMode: String, deliveryServiceAvailable: Boolean, keyword: String, latitude: Float, longitude: Float, merchantId: String, orderType: String, pickupServiceAvailable: Boolean, state: String, taggings: [String]): [StoreResponse] @aws_api_key @aws_cognito_user_pools
  getNewsLetter(merchantId: String): NewsLetterResponse @aws_api_key @aws_cognito_user_pools
  getOrderInvoice(merchantId: String, orderId: String): OrderInvoiceResponse @aws_api_key @aws_cognito_user_pools
  getPageLayout(merchantId: String, type: String): PageLayoutResponse @aws_api_key @aws_cognito_user_pools
  getPaymentOptions(domain: String, merchantId: String): PaymentOptionsResponse @aws_api_key @aws_cognito_user_pools
  getPendingProfessionalServicesMerchantList: GetPendingProfessionalServicesMerchantListResponse @aws_api_key @aws_cognito_user_pools
  getProductBundleDetails(domain: String, merchantId: String, orderType: String, seoUrl: String, storeId: String): ProductBundleResponse @aws_api_key @aws_cognito_user_pools
  getProductCache(departmentId: String, merchantId: String, orderType: String, page: Int, pageSize: Int, productTaggingId: String, storeId: String): [LandingPageProductCacheResponse] @aws_api_key @aws_cognito_user_pools
  getProductDetails(customerId: String, domain: String, merchantId: String, orderType: String, seoUrl: String, storeId: String): ProductDetailResponse @aws_api_key @aws_cognito_user_pools
  getProductsRecommendation(merchantId: String, salesChannelName: String): ProductsRecommendationResponse @aws_api_key @aws_cognito_user_pools
  getPromotionalWidgetCache(accessToken: String, merchantId: String): PromotionalWidgetCacheResponse @aws_api_key @aws_cognito_user_pools
  getRecaptchaResponse(token: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  getShopByCategoryCache(merchantId: String): ShopByCategoryCacheResponse @aws_api_key @aws_cognito_user_pools
  getSiteNavigationCache(merchantId: String): SiteNavigationsResponse @aws_api_key @aws_cognito_user_pools
  getSplashScreenCache(merchantId: String): SplashScreenCacheResponse @aws_api_key @aws_cognito_user_pools
  getStampingCampaignDetail(customerId: String, merchantId: String, stampingCampaignId: String, stampingProgressId: String): getStampingCampaignDetailResponse @aws_api_key @aws_cognito_user_pools
  getStampingCampaignList(customerId: String, filter: SearchModifierItemsFilter, limit: String, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): getStampingCampaignListResponse @aws_api_key @aws_cognito_user_pools
  getStandardDeliveryQuotation(customerCartIds: [String], customerFirstName: String, customerLastName: String, customerMobileNo: String, deliveryAddress: String, deliveryCity: String, deliveryCountry: String, deliveryPostalCode: String, deliveryState: String, merchantId: String, promoCode: String, storeId: String): DeliveryQuotationResponse @aws_api_key @aws_cognito_user_pools
  getStoreInformation(merchantId: String): KdsGetStoreInformationResponse @aws_api_key @aws_cognito_user_pools
  getSubscriptionHistoryList: GetSubscriptionHistoryListResponse @aws_api_key @aws_cognito_user_pools
  getSupportStatementCache(merchantId: String): GetSupportStatementCacheResponse @aws_api_key @aws_cognito_user_pools
  getThankYouPageOrderInfo(accessToken: String, domain: String, merchantId: String, orderNumber: String): ThankYouPageOrderInfoResponse @aws_api_key @aws_cognito_user_pools
  getTotalCartCount(customerId: String, domain: String, merchantId: String, storeId: String): getTotalCartCountResponse @aws_api_key @aws_cognito_user_pools
  getVirtualGoodsRedemptionCode(merchantId: String, orderDetailId: String): GetVirtualGoodsRedemptionResponse @aws_api_key @aws_cognito_user_pools
  getVoucherDetail(accessToken: String, customerId: String, expiryDate: String, merchantId: String, voucherCode: String): GetVoucherDetailResponse
  getVoucherPointRedemption(customerId: String, merchantId: String): getVoucherPointRedemptionResponse @aws_api_key @aws_cognito_user_pools
  helpCenterGetChatDetail(accessToken: String!, domain: String!, issueId: String!, issueType: String!, merchantId: String): HelpCenterGetChatDetailResponse @aws_api_key @aws_cognito_user_pools
  helpCenterGetChatList(accessToken: String, channel: String, domain: String, issueNumber: String, merchantId: String, orderNumber: String, platform: String): HelpCenterGetChatListResponse @aws_api_key @aws_cognito_user_pools
  kdsDownloadPDFReceipt(orderId: String): StatusResponse @aws_api_key @aws_cognito_user_pools
  kdsGetCustomer(customerPhoneNumber: String): kdsGetCustomerResponse @aws_cognito_user_pools
  kdsGetMerchantServiceCatalog: KdsGetMerchantServiceCatalogResponse @aws_api_key @aws_cognito_user_pools
  kdsGetOrderDetail(merchantId: String, orderId: String, storeId: String, token: String): KdsOrderDetail @aws_api_key @aws_cognito_user_pools
  kdsGetOrderList(advancedOrderTab: Boolean, filter: SearchOrdersFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): KdsOrderListResponse @aws_api_key @aws_cognito_user_pools
  kdsGetStoreInformation: KdsGetStoreInformationResponse @aws_api_key @aws_cognito_user_pools
  kdsGetWarungLandingPage(merchantId: String): ListStoreOpenClose @aws_api_key @aws_cognito_user_pools
  kdsListModifierItems(filter: SearchModifierItemsFilter, limit: String, nextToken: String, sort: ElasticSearchSortDirection): kdsListModifierItemsResponse @aws_api_key @aws_cognito_user_pools
  kdsOrderHistortList(merchantId: String, orderType: String, totalDayOfRecord: String): ListKdsOrderHistory @aws_api_key @aws_cognito_user_pools
  listItemReviews(itemId: String, itemProperty: String, limit: Int, merchantId: String, nextToken: String): ListItemReviewsResponse @aws_api_key @aws_cognito_user_pools
  listItemsByCollection(filter: SearchProductsFilter, limit: Int, merchantId: String, nextToken: String, orderType: String, seoUrl: String, sort: ElasticSearchSortDirection, storeId: String): ItemsByCollectionResponse @aws_api_key @aws_cognito_user_pools
  listSimilarItems(domain: String, itemProperty: String, merchantId: String, orderType: String, seoUrl: String, storeId: String): ListSimilarItemsResponse @aws_api_key @aws_cognito_user_pools
  pointTransactionAPI(customerId: String, merchantId: String): pointTransactionAPIResponse @aws_api_key @aws_cognito_user_pools
  qrCodeShowOnSite(filterPrintNumber: String): qrCodeShowOnSiteResponse @aws_api_key @aws_cognito_user_pools
  searchAutoContents(autoContentId: String, filter: SearchAutoContentsResponseFilter, issueId: String, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): searchAutoContentsResponse @aws_cognito_user_pools
  searchBranches(branchId: String, filter: SearchBranchesResponseFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchBranchesResponse @aws_cognito_user_pools
  searchContactUsStores(filter: SearchContactUsStoreFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchContactUsStoreResponse @aws_cognito_user_pools
  searchCustomOrders(filter: SearchCustomOrdersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchCustomOrdersResponse @aws_cognito_user_pools
  searchCustomerVouchers(filter: SearchCustomerVouchersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchCustomerVouchersResponse @aws_cognito_user_pools
  searchCustomers(filter: SearchCustomersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchCustomersResponse @aws_cognito_user_pools
  searchDocumentColumnMappings(extractedDocumentColumnMappingId: String, filter: SearchDocumentColumnMappingsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchDocumentColumnMappingsResponse @aws_cognito_user_pools
  searchDocumentLookups(extractedDocumentLookupId: String, filter: SearchDocumentLookupsResponseFilter, limit: Int, lookupName: String, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchDocumentLookupsResponse @aws_cognito_user_pools
  searchDocumentTemplate(documentS3Key: String, documentTemplateName: String, documentTemplateType: String, extractedDocumentTemplateId: String, filter: SearchDocumentTemplateResponseFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchDocumentTemplateResponse @aws_cognito_user_pools
  searchDocuments(extractedDocumentId: String, filter: SearchDocumentsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchDocumentsResponse @aws_cognito_user_pools
  searchDynamicForm(filter: SearchDynamicFormFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchDynamicFormResponse @aws_api_key @aws_cognito_user_pools
  searchDynamicFormAnswer(filter: SearchDynamicFormAnswerFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchDynamicFormAnswerResponse @aws_api_key @aws_cognito_user_pools
  searchEInvoiceConsolidated(filter: SearchEInvoiceConsolidatedFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): SearchEInvoiceConsolidatedResponse @aws_api_key @aws_cognito_user_pools
  searchEInvoiceQuickBookCustomers(filter: SearchEInvoiceQuickBookCustomersFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): SearchEInvoiceQuickBookCustomersResponse @aws_api_key @aws_cognito_user_pools
  searchEInvoiceQuickBookItems(filter: SearchEInvoiceQuickBookItemsFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): SearchEInvoiceQuickBookItemsResponse @aws_api_key @aws_cognito_user_pools
  searchEInvoiceUpload(filter: SearchEInvoiceUploadFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): SearchEInvoiceUploadResponse @aws_api_key @aws_cognito_user_pools
  searchEventFlows(filter: SearchEventFlowsResponseFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchEventFlowsResponse @aws_cognito_user_pools
  searchFacebookLiveCampaigns(filter: SearchFacebookLiveCampaignsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchFacebookLiveCampaignsResponse @aws_cognito_user_pools
  searchFaqCategories(filter: SearchFaqCategoriesFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchFaqCategoriesResponse @aws_cognito_user_pools
  searchFaqs(filter: SearchFaqsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchFaqsResponse @aws_cognito_user_pools
  searchGalleryDetails(filter: SearchGalleryDetailsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchGalleryDetailsResponse @aws_cognito_user_pools
  searchHelpCenterFaq(filter: SearchHelpCenterFaqFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): SearchHelpCenterFaqResponse @aws_api_key
  searchHomeCollections(filter: SearchHomeCollectionsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchHomeCollectionsResponse @aws_cognito_user_pools
  searchInStoreOrders(filter: SearchInStoreOrdersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchInStoreOrdersResponse @aws_cognito_user_pools
  searchKdsOrders(filter: SearchKdsOrdersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchKdsOrdersResponse @aws_cognito_user_pools
  searchKnowledgeBases(filter: SearchKnowledgeBasesResponseFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): searchKnowledgeBasesResponse @aws_cognito_user_pools
  searchLandingPageBanners(filter: SearchLandingPageBannersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchLandingPageBannersResponse @aws_cognito_user_pools
  searchMarketplaceSyncHistories(filter: SearchMarketplaceSyncHistoriesFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchMarketplaceSyncHistoriesResponse @aws_cognito_user_pools
  searchMemberPointLog(filter: SearchMemberPointLogFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchMemberPointLogResponse @aws_cognito_user_pools
  searchMembershipTiers(filter: SearchMembershipTiersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchMembershipTiersResponse @aws_cognito_user_pools
  searchMerchantCreditTransactions(filter: SearchMerchantCreditTransactionsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchMerchantCreditTransactionsResponse @aws_cognito_user_pools
  searchNotificationCampaign(documentTemplateName: String, extractedDocumentTemplateId: String, filter: SearchNotificationCampaignResponseFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchNotificationCampaignResponse @aws_cognito_user_pools
  searchOrders(filter: SearchOrdersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchOrdersResponse @aws_cognito_user_pools
  searchPelangiCustomers(filter: SearchPelangiCustomersFilter, limit: Int, nextToken: String, pelangiCustomerId: String, sort: ElasticSearchSortDirection): searchPelangiCustomersResponse @aws_cognito_user_pools
  searchPelangiIsbn(filter: SearchPelangiIsbnFilter, limit: Int, nextToken: String, pelangiIsbnId: String, sort: ElasticSearchSortDirection): searchPelangiIsbnResponse @aws_cognito_user_pools
  searchPointConversions(filter: SearchPointConversionsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchPointConversionsResponse @aws_cognito_user_pools
  searchPriceGroups(filter: SearchPriceGroupsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchPriceGroupsResponse @aws_cognito_user_pools
  searchProductBundles(filter: SearchProductBundlesFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchProductBundlesResponse @aws_cognito_user_pools
  searchProductCollections(filter: SearchProductCollectionsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchProductCollectionsResponse @aws_cognito_user_pools
  searchProductExclusions(filter: SearchProductExclusionsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchProductExclusionsResponse @aws_cognito_user_pools
  searchProductUOMs(filter: SearchProductUOMsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchProductUOMsResponse @aws_cognito_user_pools
  searchProducts(filter: SearchProductsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchProductsResponse @aws_cognito_user_pools
  searchPromoCodeCampaigns(filter: SearchPromoCodeCampaignsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchPromoCodeCampaignsResponse @aws_cognito_user_pools
  searchPromotionalWidget(filter: SearchPromotionalWidgetFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchPromotionalWidgetResponse @aws_cognito_user_pools
  searchSMSConfigs(filter: SearcSMSConfigsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchSMSConfigsResponse @aws_cognito_user_pools
  searchSalesAgent(filter: SearchSalesAgentFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchSalesAgentResponse @aws_api_key @aws_cognito_user_pools
  searchSiteNavigations(filter: SearchSiteNavigationsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchSiteNavigationsResponse @aws_cognito_user_pools
  searchSmartTagging(filter: SearchSmartTaggingFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): SearchSmartTaggingResponse @aws_api_key @aws_cognito_user_pools
  searchSmartVoucherCampaigns(filter: SearchSmartVoucherCampaignsResponseFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): searchSmartVoucherCampaignsResponse @aws_cognito_user_pools
  searchSmsCampaignResponse(filter: SearcSMSCampaignResponseFilter, limit: Int, nextToken: String, smsCampaignId: String, sort: ElasticSearchSortDirection): searchSmsCampaignResponseResponse @aws_cognito_user_pools
  searchSmsTemplate(filter: SearchSmsTemplateFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): searchSmsTemplateResponse @aws_cognito_user_pools
  searchSplashScreens(filter: SearchSplashScreensFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchSplashScreensResponse @aws_cognito_user_pools
  searchStockImages(filter: SearchStockImagesFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): StockImagesResponse @aws_api_key @aws_cognito_user_pools
  searchStockMovements(filter: SearchStockMovementsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchStockMovementsResponse @aws_api_key @aws_cognito_user_pools
  searchStoreGroups(filter: SearchStoreGroupsFilter, limit: Int, merchantId: String, name: String, nextToken: String, sort: ElasticSearchSortDirection): SearchStoreGroupsResponse @aws_cognito_user_pools
  searchStoreList(domain: String, merchantId: String): SearchStoreListResponse @aws_api_key @aws_cognito_user_pools
  searchStoreProducts(filter: SearchStoreProductsFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchStoreProductsResponse @aws_api_key @aws_cognito_user_pools
  searchStores(filter: SearchStoresFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchStoresResponse @aws_cognito_user_pools
  searchSuppliers(filter: SearchSuppliersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchSuppliersResponse @aws_cognito_user_pools
  searchTaggings(filter: SearchTaggingsFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection): SearchTaggingsResponse @aws_cognito_user_pools
  searchTimelines(filter: SearchTimelinesFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchTimelinesResponse @aws_cognito_user_pools
  searchTruckPackingLists(filter: SearchTruckPackingListsResponseFilter, limit: Int, nextToken: String, sort: ElasticSearchSortDirection, truckPackingListId: String): searchTruckPackingListsResponse @aws_cognito_user_pools
  searchTruckSchedules(filter: SearchTruckSchedulesResponseFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection, truckId: String, truckScheduleId: String): searchTruckSchedulesResponse @aws_cognito_user_pools
  searchTrucks(filter: SearchTrucksResponseFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection, truckId: String): searchTrucksResponse @aws_cognito_user_pools
  searchUploadFileDetail(filter: SearchUploadFileDetailFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection, uploadFileDetailId: String): SearchUploadFileDetailResponse @aws_api_key @aws_cognito_user_pools
  searchUserGroups(filter: SearchUserGroupsResponseFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection, userGroupId: String, userGroupName: String): searchUserGroupsResponse @aws_cognito_user_pools
  searchUsers(filter: SearchUsersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchUsersResponse @aws_cognito_user_pools
  searchVouchers(filter: SearchVouchersFilter, limit: Int, merchantId: String, nextToken: String, sort: ElasticSearchSortDirection): SearchVouchersResponse @aws_cognito_user_pools
  validateCustomerSeating(domain: String, seatingNo: String): ValidateCustomerSeatingResponse @aws_api_key @aws_cognito_user_pools
}

type ResportTypeResponse @aws_api_key @aws_cognito_user_pools {
  nextToken: String
  total: Int
  totalSalesDetails: [TotalSalesDetails]
  totalSession: [TotalSession]
}

type RewardVoucherMapping @aws_api_key @aws_cognito_user_pools {
  id: String
  quantity: Int
}

type SMSConfigDetail @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  csvS3Key: String
  listOfCustomerPhoneNumber: [String]
  listOfSelectedSmartTags: [String]
  mediaContent: String
  mediaType: String
  merchantDepartmentId: String
  merchantId: String
  message: String
  platform: String
  reply: Boolean
  saveTemplate: Boolean
  selectedTemplateId: String
  smsCampaignId: String
  smsScheduleDateTime: String
  smsText: String
  smsTopic: String
  status: String
  updatedAt: String
  updatedBy: String
}

type SalesAgentItem @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  customOrderEnabled: String
  firstName: String
  lastName: String
  maxCreditLimit: Float
  merchantId: String
  salesAgentId: String
  updatedAt: String
  updatedBy: String
  username: String
}

type SalesAgentResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  salesAgent: SalesAgentItem
  status: String
}

type SalesChannelSettingResponse @aws_api_key @aws_cognito_user_pools {
  isDisabled: Boolean
  message: String
  status: String
  storeCode: String
  storeId: String
  storeName: String
  syncFrequency: String
}

type SalesPerformanceOnSalesChannel @aws_api_key @aws_cognito_user_pools {
  changes: Float
  title: String
  value: Float
}

type SearchContactUsStoreResponse @aws_cognito_user_pools {
  items: [ContactUsStore]
  nextToken: String
  total: Int
}

type SearchCustomOrdersResponse @aws_cognito_user_pools {
  items: [CustomOrder]
  nextToken: String
  total: Int
}

type SearchCustomerVouchersResponse @aws_cognito_user_pools {
  items: [CustomerVoucher]
  nextToken: String
  total: Int
}

type SearchCustomersResponse @aws_cognito_user_pools {
  items: [Customer]
  nextToken: String
  total: Int
}

type SearchDynamicFormAnswerResponse @aws_api_key @aws_cognito_user_pools {
  items: [DynamicFormAnswerItem]
  nextToken: String
  total: Int
}

type SearchDynamicFormResponse @aws_api_key @aws_cognito_user_pools {
  items: [DynamicFormItem]
  nextToken: String
  total: Int
}

type SearchEInvoiceConsolidatedResponse @aws_api_key @aws_cognito_user_pools {
  items: [EInvoiceConsolidated]
  nextToken: String
  total: Int
}

type SearchEInvoiceQuickBookCustomersResponse @aws_api_key @aws_cognito_user_pools {
  items: [EInvoiceQuickBookCustomer]
  nextToken: String
  total: Int
}

type SearchEInvoiceQuickBookItemsResponse @aws_api_key @aws_cognito_user_pools {
  items: [EInvoiceQuickBookItem]
  nextToken: String
  total: Int
}

type SearchEInvoiceUploadResponse @aws_api_key @aws_cognito_user_pools {
  items: [EInvoiceUpload]
  nextToken: String
  total: Int
}

type SearchFacebookLiveCampaignsResponse @aws_api_key @aws_cognito_user_pools {
  items: [FacebookLiveCampaign]
  nextToken: String
  total: Int
}

type SearchFaqCategoriesResponse @aws_cognito_user_pools {
  items: [FaqCategory]
  nextToken: String
  total: Int
}

type SearchFaqsResponse @aws_cognito_user_pools {
  items: [Faq]
  nextToken: String
  total: Int
}

type SearchGalleryDetailsResponse @aws_api_key @aws_cognito_user_pools {
  items: [GalleryDetail]
  nextToken: String
  total: Int
}

type SearchHelpCenterFaqResponse @aws_api_key {
  items: [HelpCenterFaq]
  nextToken: String
  total: Int
}

type SearchHomeCollectionsResponse @aws_api_key @aws_cognito_user_pools {
  items: [HomeCollection]
  nextToken: String
  total: Int
}

type SearchInStoreOrdersResponse @aws_cognito_user_pools {
  items: [InStoreOrder]
  nextToken: String
  total: Int
}

type SearchLandingPageBannersResponse @aws_api_key @aws_cognito_user_pools {
  items: [LandingPageBanner]
  nextToken: String
  total: Int
}

type SearchMarketplaceSyncHistoriesResponse @aws_api_key @aws_cognito_user_pools {
  items: [MarketPlaceSyncHistory]
  nextToken: String
  total: Int
}

type SearchMemberPointLogResponse @aws_api_key @aws_cognito_user_pools {
  items: [MemberPointLog]
  message: String
  nextToken: String
  status: String
  total: Int
}

type SearchMembershipTiersResponse @aws_api_key @aws_cognito_user_pools {
  items: [MembershipTier]
  message: String
  nextToken: String
  status: String
  total: Int
}

type SearchMerchantCreditTransactionsResponse @aws_cognito_user_pools {
  items: [MerchantCreditTransaction]
  nextToken: String
  total: Int
}

type SearchOrdersResponse @aws_cognito_user_pools {
  items: [Order]
  newOrdersTotal: Int
  nextToken: String
  total: Int
}

type SearchPointConversionsResponse @aws_api_key @aws_cognito_user_pools {
  items: [PointConversion]
  message: String
  nextToken: String
  status: String
  total: Int
}

type SearchPriceGroupsResponse @aws_cognito_user_pools {
  items: [PriceGroup]
  nextToken: String
  total: Int
}

type SearchProductBundlesResponse @aws_api_key @aws_cognito_user_pools {
  items: [ProductBundle]
  nextToken: String
  total: Int
}

type SearchProductCollectionsResponse @aws_cognito_user_pools {
  items: [ProductCollection]
  nextToken: String
  total: Int
}

type SearchProductExclusionsResponse @aws_api_key @aws_cognito_user_pools {
  items: [ProductExclusion]
  message: String
  nextToken: String
  status: String
  total: Int
}

type SearchProductUOMsResponse @aws_cognito_user_pools {
  items: [ProductUOM]
  nextToken: String
  total: Int
}

type SearchProductsResponse @aws_cognito_user_pools {
  items: [Product]
  nextToken: String
  total: Int
}

type SearchPromoCodeCampaignsResponse @aws_cognito_user_pools {
  items: [PromoCodeCampaign]
  nextToken: String
  total: Int
}

type SearchPromotionalWidgetResponse @aws_api_key @aws_cognito_user_pools {
  items: [PromotionalWidget]
  nextToken: String
  total: Int
}

type SearchSiteNavigationsResponse @aws_api_key @aws_cognito_user_pools {
  items: [SiteNavigation]
  nextToken: String
  total: Int
}

type SearchSmartTaggingResponse @aws_api_key @aws_cognito_user_pools {
  items: [SmartTaggingSearch]
  nextToken: String
  total: Int
}

type SearchSplashScreensResponse @aws_api_key @aws_cognito_user_pools {
  items: [SplashScreen]
  nextToken: String
  total: Int
}

type SearchStockMovementsResponse @aws_cognito_user_pools {
  items: [StockMovement]
  nextToken: String
  total: Int
}

type SearchStoreGroupsResponse @aws_cognito_user_pools {
  items: [StoreGroup]
  nextToken: String
  total: Int
}

type SearchStoreListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  offlineStores: [StoreResponse]
  status: String
}

type SearchStoreProductsResponse @aws_cognito_user_pools {
  items: [StoreProduct]
  nextToken: String
  total: Int
}

type SearchStoresResponse @aws_cognito_user_pools {
  items: [Store]
  nextToken: String
  total: Int
}

type SearchSuppliersResponse @aws_cognito_user_pools {
  items: [Supplier]
  nextToken: String
  total: Int
}

type SearchTaggingsResponse @aws_cognito_user_pools {
  items: [Tagging]
  nextToken: String
  total: Int
}

type SearchTimelinesResponse @aws_cognito_user_pools {
  items: [Timeline]
  nextToken: String
  total: Int
}

type SearchUploadFileDetailResponse @aws_api_key @aws_cognito_user_pools {
  items: [UploadFileDetail]
  nextToken: String
  total: Int
}

type SearchUsersResponse @aws_cognito_user_pools {
  items: [User]
  nextToken: String
  total: Int
}

type SearchVouchersResponse @aws_cognito_user_pools {
  items: [adminSearchVoucher]
  nextToken: String
  total: Int
}

type SelectedDemographics @aws_api_key @aws_cognito_user_pools {
  ageFrom: Int
  ageTo: Int
  gender: String
  joinedFrom: String
  joinedTo: String
  membershipTier: [MembershipTierSmartVoucher]
}

type SelectedItemInLandingPageBanner @aws_api_key @aws_cognito_user_pools {
  itemId: String
  itemImage: String
  itemProperty: String
  itemSeoUrl: String
  itemTitle: String
}

type SelectedItemInSplashScreen @aws_api_key @aws_cognito_user_pools {
  itemId: String
  itemImage: String
  itemProperty: String
  itemSeoUrl: String
  itemTitle: String
}

type SelectedItemSiteNotification @aws_api_key @aws_cognito_user_pools {
  itemId: String
  itemImage: String
  itemProperty: String
  itemTitle: String
}

type SelectedTags @aws_api_key @aws_cognito_user_pools {
  smartTaggingId: String
  tagName: String
  taggingId: String
}

type ShippingRate @aws_api_key @aws_cognito_user_pools {
  amount: Float
  conditionType: String
  createdAt: String
  createdBy: String
  estimatedDuration: String
  maxValue: Float
  merchantId: String
  minValue: Float
  shippingRateId: String
  shippingZoneId: String
  title: String
  updatedAt: String
  updatedBy: String
}

type ShippingZone @aws_api_key @aws_cognito_user_pools {
  country: String
  createdAt: String
  createdBy: String
  merchantId: String
  shippingRates: [ShippingRate]
  shippingZoneId: String
  state: [String]
  title: String
  transportType: String
  updatedAt: String
  updatedBy: String
  warehouseId: String
}

type ShopByCategoryCacheResponse @aws_api_key @aws_cognito_user_pools {
  homeCollections: [HomeCollection]
  message: String
  status: String
}

type ShopeeDeliveryPartner @aws_api_key @aws_cognito_user_pools {
  cod_enabled: Boolean
  enabled: Boolean
  fee_type: String
  force_enable: Boolean
  item_max_dimension: ShopeeDeliveryPartnerItemMaxDimension
  logistics_channel_id: Int
  logistics_channel_name: String
  logistics_description: String
  mask_channel_id: Int
  preferred: Boolean
  size_list: [String]
  volume_limit: ShopeeDeliveryPartnerVolumeLimit
  weight_limit: ShopeeDeliveryPartnerWeightLimit
}

type ShopeeDeliveryPartnerItemMaxDimension @aws_api_key @aws_cognito_user_pools {
  dimension_sum: Int
  height: Int
  length: Int
  unit: String
  width: Int
}

type ShopeeDeliveryPartnerResponse @aws_api_key @aws_cognito_user_pools {
  delivery_partner_list: [ShopeeDeliveryPartner]
  message: String
  status: String
}

type ShopeeDeliveryPartnerVolumeLimit @aws_api_key @aws_cognito_user_pools {
  item_max_volume: Int
  item_min_volume: Int
}

type ShopeeDeliveryPartnerWeightLimit @aws_api_key @aws_cognito_user_pools {
  item_max_weight: Int
  item_min_weight: Int
}

type ShopeeProductSpecResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  products: [MarketPlaceProductSpecList]
  status: Boolean
}

type SimilarItem @aws_api_key @aws_cognito_user_pools {
  compareAtPrice: Float
  cover: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  description: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  hasStock: Boolean
  hasVariant: Boolean
  image: [String]
  itemId: String
  itemProperty: String
  memberDiscount: MemberDiscount
  price: Float
  priceWithTax: Float
  productIsDisabled: Boolean
  promotionEndDateTime: String
  promotionStartDateTime: String
  seoUrl: String
  title: String
  updatedAt: String
  video: String
}

type SiteNavigation @aws_api_key @aws_cognito_user_pools {
  childItems: [SiteNavigation]
  createdAt: String
  createdBy: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  isDisabled: Boolean
  linkValue: String
  menuType: String
  merchantId: String
  navigationType: String
  openNewTab: Boolean
  parentId: String
  sequence: Int
  siteNavigationId: String
  title: String
  updatedAt: String
  updatedBy: String
}

type SiteNavigationResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  selectedItem: SelectedItemSiteNotification
  siteNavigation: SiteNavigation
  status: String
}

type SiteNavigationsResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  siteNavigations: [SiteNavigation]
  status: String
}

type SmartTagging @aws_api_key @aws_cognito_user_pools {
  condition: SmartTaggingCondition
  createdAt: String
  createdBy: String
  listOfAssociatedProducts: [SmartTaggingProduct]
  merchantId: String
  promptText: String
  smartTaggingId: String
  tagName: String
  totalListOfAssociatedProducts: Int
  updatedAt: String
  updatedBy: String
}

type SmartTaggingCondition @aws_api_key @aws_cognito_user_pools {
  numberOfPurchase: Int
}

type SmartTaggingProduct @aws_api_key @aws_cognito_user_pools {
  ids: [String]
  itemCover: String
  itemId: String
  itemTitle: String
  itemType: String
}

type SmartTaggingSearch @aws_api_key @aws_cognito_user_pools {
  condition: SmartTaggingCondition
  createdAt: String
  createdBy: String
  merchantId: String
  smartTaggingId: String
  tagName: String
  totalListOfAssociatedProducts: Int
  updatedAt: String
  updatedBy: String
}

type SmartVoucherCampaignDetail @aws_api_key @aws_cognito_user_pools {
  actualTargetCustomers: Int
  assumptionConversion: Float
  campaignMessage: String
  creditRequired: Float
  customerList: [CustomerList]
  estimateRevenueSplitAmt: Float
  estimateRevenueSplitRatio: Float
  gptPrompt: String
  inputFrequencySegment: InputFrequencySegment
  inputMonetaryValue: Float
  inputRecencyValue: Int
  isPersonalizedMsg: Boolean
  isTemplateMsg: Boolean
  merchantId: String
  previewCustomer: [PreviewCustomer]
  previewCustomerMsg: previewCustomerMsg
  previewMsg: String
  selectedDemographics: SelectedDemographics
  selectedTags: [SelectedTags]
  smartVoucherCampaignDetailId: String
  smartVoucherCampaignId: String
  smsTemplateId: String
  stepFunctionExecutionId: String
  targetCustomerSpending: Float
  totalCustomerParticipated: Int
  totalRevenueEarned: Float
  totalTargetCustomer: Int
  voucherDiscount: Float
  voucherMinSpend: Float
}

type SmsCampaignResponse @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  customerPhoneNumber: String
  message: String
  platform: String
  smsCampaignId: String
  smsCampaignResponseId: String
  smsScheduleDateTime: String
  smsText: String
  status: String
  updatedAt: String
  updatedBy: String
}

type SmsTemplate @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantDepartmentId: String
  merchantId: String
  smsTemplateId: String
  smsText: String
  templateEmailBody: [EmailBody]
  templateEmailDesign: EmailDesign
  templateEmailHtml: String
  templateMediaContent: String
  templateMediaType: String
  templateName: String
  templateStatus: String
  templateType: String
  updatedAt: String
  updatedBy: String
}

type SmsTemplateItemResponse @aws_api_key @aws_cognito_user_pools {
  item: SmsTemplate
  message: String
  status: String
}

type SplashScreen @aws_api_key @aws_cognito_user_pools {
  buttonActionValue: String
  createdAt: String
  createdBy: String
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  homeImage: String
  isDisabled: Boolean
  merchantId: String
  sequence: Int
  splashScreenId: String
  title: String
  updatedAt: String
  updatedBy: String
}

type SplashScreenCacheResponse @aws_api_key @aws_cognito_user_pools {
  items: [SplashScreen]
  message: String
  status: Boolean
}

type SplashScreenResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  splashScreen: SplashScreen
  status: String
}

type StampingCampaignResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  stampingCampaignId: String
  status: String
}

type StatusResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
}

type StockImage @aws_api_key @aws_cognito_user_pools {
  stockImageCategory: String
  stockImageId: String
  stockImageUrl: String
}

type StockImagesResponse @aws_api_key @aws_cognito_user_pools {
  items: [StockImage]
  nextToken: String
  total: Int
}

type StockMovement @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  expectedArrivalDate: String
  merchantId: String
  referenceNumber: String
  status: String
  stockMovementId: String
  supplierId: String
  supplierName: String
  taggingNames: [String]
  totalOrderedQuantity: Int
  totalReceivedQuantity: Int
  trackingNumber: String
  updatedAt: String
  updatedBy: String
}

type StockMovementDetail @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantId: String
  orderedQuantity: Int
  productId: String
  productImage: String
  productTitle: String
  productUOMId: String
  receivedQuantity: Int
  remarks: String
  stockMovementDetailId: String
  stockMovementId: String
  updatedAt: String
  updatedBy: String
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
}

type Store @aws_api_key @aws_cognito_user_pools {
  acceptOrderWithMinPurchase: Boolean
  address: String
  city: String
  closingHour: String
  code: String
  createdAt: String
  createdBy: String
  deliveryDiscountAmount: Float
  deliveryDiscountBasketValue: Float
  deliveryDiscountType: String
  deliveryDuration: Int
  deliveryFee: Float
  deliveryGracePeriod: Float
  deliveryMaxPurchaseQuantity: Int
  deliveryMinPurchaseAmount: Float
  deliveryPartnerMaxRetry: Int
  deliveryPreparationTime: Int
  deliveryServiceAvailable: Boolean
  driveThru: Boolean
  eCommEndDate: String
  eCommStartDate: String
  freeDeliveryWithMinPurchase: Boolean
  groupName: String
  hasSeatingArea: Boolean
  incrementDistanceCharges: Float
  incrementDistanceUnit: Float
  isDisabled: Boolean
  isOffline24Hour: Boolean
  isOnline24Hour: Boolean
  lastOrderTime: String
  lastSyncOrderDateTime: String
  latitude: String
  longitude: String
  managerContact: String
  managerEmail: String
  managerName: String
  maxOrderQty: Int
  merchantId: String
  minDeliveryDuration: Int
  minDistance: Float
  minDistanceCharges: Float
  minFoodPreparationDuration: Int
  minPurchaseAmount: Float
  name: String
  openingHour: String
  pickupServiceAvailable: Boolean
  pollingDeliveryTime: Float
  postalCode: String
  priceGroupId: String
  priceGroupName: String
  priorityDeliveryPartner: String
  riderTimeout: Float
  routingOption: String
  salesChannelId: String
  salesChannelName: String
  state: String
  storeId: String
  taggingNames: [String]
  updatedAt: String
  updatedBy: String
}

type StoreBlockedOutPeriodResponse @aws_api_key @aws_cognito_user_pools {
  endDateTime: String
  message: String
  startDateTime: String
  status: String
  storeType: String
}

type StoreGroup @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantId: String
  name: String
  storeGroupId: String
  updatedAt: String
  updatedBy: String
}

type StoreInfo @aws_api_key @aws_cognito_user_pools {
  storeCode: String
  storeId: String
  storeName: String
}

type StoreItem @aws_api_key @aws_cognito_user_pools {
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  isSellingOffline: Boolean
  itemId: String
  itemImage: String
  itemProperty: String
  itemTitle: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  productId: String
  quantityForSales: Int
  storeProductId: String
}

type StoreListByProduct @aws_api_key @aws_cognito_user_pools {
  isProductSelling: Boolean
  salesChannelName: String
  storeId: String
  storeName: String
}

type StoreOpenCloseHour @aws_api_key @aws_cognito_user_pools {
  close: String
  day: String
  enabled: Boolean
  endingTimeAfterMidnight: Boolean
  open: String
}

type StoreOperatingHour @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  day: String
  endingTimeAfterMidnight: Boolean
  merchantId: String
  offlineStoreClosingHour: String
  offlineStoreOpeningHour: String
  storeId: String
  storeOperatingHourId: String
  updatedAt: String
  updatedBy: String
}

type StoreOperatingHourResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  storeOperatingHours: [StoreOperatingHour]
}

type StoreProduct @aws_api_key @aws_cognito_user_pools {
  collectionNames: [String]
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  isDisabled: Boolean
  itemCover: String
  itemHasVariant: Boolean
  itemId: String
  itemImage: String
  itemIsVirtualGoods: Boolean
  itemProperty: String
  itemSeoUrl: String
  itemSku: String
  itemTitle: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  itemVirtualGoodsExpiredAt: String
  itemVirtualGoodsExpiryDays: String
  marketPlaceAttributes: [MarketPlaceProductSpecList]
  marketPlaceBrand: MarketPlaceProductSpecList
  marketPlaceCategories: [MarketPlaceProductSpecList]
  marketPlaceProductCode: String
  marketPlaceProductUOMCode: String
  merchantId: String
  modifierGroups: [ModifierGroups]
  noOfPurchases: Int
  pickupCompareAtPrice: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  quantityForSales: Int
  quantityType: String
  salesChannelName: String
  storeId: String
  storeName: String
  storeProductId: String
  taggingNames: [String]
  updatedAt: String
  updatedBy: String
}

type StoreProductBySalesChannel @aws_api_key @aws_cognito_user_pools {
  compareAtPrice: Float
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  isDisabled: Boolean
  marketPlaceAttributes: [MarketPlaceProductSpecList]
  marketPlaceBrand: MarketPlaceProductSpecList
  marketPlaceCategories: [MarketPlaceProductSpecList]
  marketPlaceProductCode: String
  marketPlaceProductUOMCode: String
  merchantId: String
  noOfPurchases: Int
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  price: Float
  priceWithTax: Float
  quantityForSales: Int
  quantityType: String
  salesChannelName: String
  storeId: String
  storeName: String
  storeProductId: String
  updatedAt: String
  updatedBy: String
}

type StoreResponse @aws_api_key @aws_cognito_user_pools {
  address: String
  advancedOrderEnabled: Boolean
  city: String
  code: String
  deliveryDuration: Int
  deliveryFee: Float
  deliveryMaxPurchaseQuantity: Int
  deliveryMinPurchaseAmount: Float
  deliveryPreparationTime: Int
  deliveryServiceAvailable: Boolean
  distance: String
  groupName: String
  isDisabled: Boolean
  items: [StoreItem]
  latitude: String
  longitude: String
  managerContact: String
  managerEmail: String
  managerName: String
  maxAdvancedOrderDay: Int
  message: String
  minPurchase: String
  name: String
  offlineStoreOperate24Hour: Boolean
  onlineStoreOperate24Hour: Boolean
  pickupServiceAvailable: Boolean
  postalCode: String
  primaryEmail: String
  state: String
  status: String
  storeId: String
  storeOperatingHourList: [StoreOpenCloseHour]
  storeOperatingHours: String
  taggingNames: [String]
  todayCloseTime: String
  todayOpenTime: String
  userId: String
  visibleToOnlineStore: Boolean
}

type Supplier @aws_api_key @aws_cognito_user_pools {
  address: String
  contact: String
  contactName: String
  country: String
  email: String
  merchantId: String
  name: String
  supplierId: String
}

type SupportStatement @aws_api_key @aws_cognito_user_pools {
  childrenStatement: [SupportStatement]
  createdAt: String
  createdBy: String
  isDisabled: Boolean
  merchantId: String
  messageToCustomer: String
  parentId: String
  platform: String
  priority: String
  sequence: Int
  statement: String
  statementType: String
  supportStatementId: String
  supportType: String
  updatedAt: String
  updatedBy: String
}

type TableFormDataObject @aws_api_key @aws_cognito_user_pools {
  boundingBox: BoundingBoxCoordinate
  fieldLabel: String
  fieldName: String
  fieldValue: [fieldValueObject]
  inUse: Boolean
  mandatory: Boolean
  regex: [String]
  type: String
  uom: Boolean
}

type Tagging @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantId: String
  name: String
  taggingId: String
  type: String
  updatedAt: String
  updatedBy: String
}

type TargetAudience @aws_api_key @aws_cognito_user_pools {
  csvFilePath: String
  csvLastUpdated: String
  method: String
  numberOfAudience: Int
}

type TestAuthResponse @aws_cognito_user_pools {
  authUrl: String
  marketPlaceSettingId: String
  message: String
  status: String
}

type ThankYouPageOrderInfoResponse @aws_api_key @aws_cognito_user_pools {
  customerFirstName: String
  customerLastName: String
  customerMobileNo: String
  customerPrimaryEmail: String
  deliveryAddress: String
  deliveryCity: String
  deliveryCountry: String
  deliveryFee: Float
  deliveryPostalCode: String
  deliveryState: String
  giftCardTitle: String
  grandTotal: Float
  isBankTransfer: Boolean
  manualPaymentMethodName: String
  manualPaymentOrderStatus: String
  message: String
  orderDetails: [OrderDetailOrVoucherDetail]
  orderId: String
  orderNumber: String
  orderType: String
  paymentMethod: String
  paymentStatus: String
  paymentType: String
  posQrCode: String
  status: String
  subtotal: Float
  totalDiscount: Float
  voucherId: String
}

type TicketInfo @aws_api_key @aws_cognito_user_pools {
  issueId: String
  ticketLink: String
  ticketNumber: String
}

type TimeList @aws_api_key @aws_cognito_user_pools {
  endTime: String
  startTime: String
}

type Timeline @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  description: String
  merchantId: String
  timelineForId: String
  timelineId: String
  title: String
  type: String
  updatedAt: String
  updatedBy: String
}

type TimelineResponse @aws_cognito_user_pools {
  timelines: [Timeline]
}

type Timeslot @aws_api_key @aws_cognito_user_pools {
  effectiveEndDate: String
  effectiveEndTime: String
  effectiveStartDate: String
  effectiveStartTime: String
}

type TimeslotsProductDetail @aws_api_key @aws_cognito_user_pools {
  date: String
  timeList: [TimeList]
}

type TokenData @aws_api_key @aws_cognito_user_pools {
  accessToken: String
  accountNo: String
  customerId: String
  expiredAt: String
  merchantId: String
  refreshToken: String
  sessionID: String
}

type TopResult @aws_api_key @aws_cognito_user_pools {
  description: String
  title: String
  totalAmount: Float
}

type TotalSalesDetails @aws_api_key @aws_cognito_user_pools {
  day: String
  discounts: Float
  grossSale: Float
  month: String
  netSales: Float
  return: Float
  shipping: Float
  tax: Float
  totalOrder: Int
  totalSales: Float
  year: String
}

type TotalSession @aws_api_key @aws_cognito_user_pools {
  addToCart: Int
  checkoutCart: Int
  conversion: Float
  day: String
  month: String
  totalSession: Int
  year: String
}

type Truck @aws_api_key @aws_cognito_user_pools {
  branchList: [String]
  createdAt: String
  createdBy: String
  deliveryFee: Float
  limit: Float
  merchantId: String
  truckId: String
  truckName: String
  truckNumber: String
  truckScheduleDay: [String]
  truckScheduleTime: [String]
  unit: String
  updatedAt: String
  updatedBy: String
}

type TruckPackingLists @aws_api_key @aws_cognito_user_pools {
  branchId: String
  createdAt: String
  createdBy: String
  merchantId: String
  packingDate: String
  packingSlipUrl: String
  packingTime: String
  truckCapacityId: String
  truckId: String
  truckName: String
  truckPackingListId: String
  updatedAt: String
  updatedBy: String
}

type TruckSchedule @aws_api_key @aws_cognito_user_pools {
  branchId: String
  createdAt: String
  createdBy: String
  day: String
  merchantId: String
  postal: [String]
  time: String
  truckId: String
  truckName: String
  truckScheduleId: String
  updatedAt: String
  updatedBy: String
}

type UnreadChatHistory @aws_cognito_user_pools {
  channel: String
  total: Int
}

type UpdateTagsOnModuleResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  updatedAt: String
  updatedBy: String
}

type UploadFileDetail @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  documentType: String
  fileName: String
  inputS3Path: String
  marketPlace: String
  outputS3Path: String
  status: String
  updatedAt: String
  uploadFileDetailId: String
}

type User @aws_api_key @aws_cognito_user_pools {
  accountId: String
  accountName: String
  createdAt: String
  createdBy: String
  email: String
  isDisabled: Boolean
  merchantId: String
  name: String
  storeId: String
  storeName: String
  updatedAt: String
  updatedBy: String
  userGroupId: String
  userGroupName: String
  userId: String
}

type UserGroup @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantId: String
  totalUser: Int
  updatedAt: String
  updatedBy: String
  userGroupId: String
  userGroupName: String
}

type UserGroupTemplates @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  description: String
  merchantType: String
  updatedAt: String
  updatedBy: String
  userGroupTemplateId: String
  userGroupTemplateName: String
  userMatrixTemplates: [UserMatrixList]
}

type UserMatrix @aws_api_key @aws_cognito_user_pools {
  children: [UserMatrixSubModule]
  module: String
}

type UserMatrixList @aws_api_key @aws_cognito_user_pools {
  detail: [UserMatrixTemplates]
  module: String
}

type UserMatrixResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  userGroupId: String
  userGroupName: String
  userMatrixList: [UserMatrix]
}

type UserMatrixSubModule @aws_api_key @aws_cognito_user_pools {
  canAdd: Boolean
  canDelete: Boolean
  canEdit: Boolean
  canList: Boolean
  canView: Boolean
  children: [UserMatrixSubModule]
  title: String
  userMatrixId: String
}

type UserMatrixTemplates @aws_api_key @aws_cognito_user_pools {
  canAdd: Boolean
  canDelete: Boolean
  canEdit: Boolean
  canList: Boolean
  canView: Boolean
  detail: [UserMatrixTemplates]
  title: String
}

type UserMerchantListResponse @aws_cognito_user_pools {
  items: [MerchantStoreDetail]
}

type ValidateCustomerSeatingResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  redirectURL: String
  seatingSection: String
  status: String
}

type ValidateVirtualGoodsOrderCodeResponse @aws_api_key @aws_cognito_user_pools {
  code: String
  codeStatus: String
  codeUpdatedAt: String
  isRedeemable: Boolean
  message: String
  orderDetails: [OrderDetail]
  productDescription: String
  status: String
}

type VerifyAccountStatusResponse @aws_api_key @aws_cognito_user_pools {
  accountIsExist: Boolean
  message: String
  status: String
}

type VirtualGoods @aws_api_key @aws_cognito_user_pools {
  code: String
  customerFirstName: String
  customerId: String
  customerLastName: String
  customerMobileNo: String
  customerPrimaryEmail: String
  expiredAt: String
  merchantId: String
  orderDetailId: String
  orderId: String
  orderNumber: String
  status: String
  virtualGoodsRedemptionId: String
}

type Voucher @aws_api_key @aws_cognito_user_pools {
  category: String
  customerCondition: String
  deliveryDiscountType: String
  description: String
  discountAmountCap: Float
  discountOnProductValue: Float
  image: String
  merchantId: String
  minimumAmount: Float
  minimumCondition: String
  minimumQuantity: Int
  orderType: [String]
  price: Float
  productConditions: voucherProductConditionMapping
  productsDiscount: ConditionMappingResponse
  requiredPoints: Int
  status: String
  title: String
  type: String
  voucherIcon: String
  voucherId: String
}

type VoucherList @aws_api_key @aws_cognito_user_pools {
  confirmationDate: String
  customerVoucherId: String
  description: String
  expiryDate: String
  giftCardValue: String
  image: String
  isShareable: Boolean
  merchantId: String
  pendingAccept: Int
  pendingReceiverAccept: Int
  quantity: Int
  remainingQuantity: Int
  senderName: String
  senderNameList: [String]
  title: String
  totalAccepted: Int
  totalPending: Int
  voucherCode: String
  voucherIcon: String
  voucherId: String
  voucherValue: String
}

type Warehouse @aws_api_key @aws_cognito_user_pools {
  StoreOperatingHour: [StoreOpenCloseHour]
  address: String
  addressDetail: String
  advancedOrderEnabled: Boolean
  city: String
  country: String
  createdAt: String
  createdBy: String
  isOnDemandDeliveryEnabled: Boolean
  isPickupEnabled: Boolean
  latitude: Float
  longitude: Float
  maxAdvancedOrderDay: Int
  merchantId: String
  onDemandMaxDistance: Float
  ownTransportCutoffTime: String
  ownTransportDayInAdvance: Int
  postalCode: String
  state: String
  updatedAt: String
  updatedBy: String
  warehouseId: String
}

type WarehouseDeliveryConfigResponse @aws_api_key @aws_cognito_user_pools {
  isOwnTransportEnabled: Boolean
  isStandardDeliveryEnabled: Boolean
  message: String
  onDemandDefaultVehicleType: String
  onDemandMaxDistance: Float
  standardPreferredPartnerName1: String
  standardPreferredPartnerName2: String
  status: String
}

type WebhookCallbackConfig @aws_api_key @aws_cognito_user_pools {
  callbackEvent: String
  callbackUrl: String
  createdAt: String
  createdBy: String
  merchantId: String
  updatedAt: String
  updatedBy: String
  webhookCallbackConfigId: String
}

type addUpdateDeleteVoucherCartResponse @aws_api_key @aws_cognito_user_pools {
  customerVoucherCartId: String
  message: String
  status: String
}

type adminDownloadTextractDocumentResponse @aws_api_key @aws_cognito_user_pools {
  documentUrl: String
  message: String
  status: String
}

type adminGetAutopilotEventResponse @aws_api_key @aws_cognito_user_pools {
  autopilotEvent: EventFlow
  message: String
  status: String
}

type adminGetBranchResponse @aws_api_key @aws_cognito_user_pools {
  branch: Branch
  message: String
  status: String
}

type adminGetCustomerIssueDetailResponse @aws_api_key @aws_cognito_user_pools {
  issue: HelpCenterIssueInfo
  issueDetail: [IssueDetail]
  message: String
  status: String
  ticketUrl: String
}

type adminGetCustomerIssueListResponse @aws_api_key @aws_cognito_user_pools {
  feedback: [FeedbackHistory]
  issue: [IssueHistory]
  message: String
  status: String
}

type adminGetDeliveryTransitionLogResponse @aws_api_key @aws_cognito_user_pools {
  items: [DeliveryTransitionLog]
  message: String
  status: Boolean
}

type adminGetFoodMarketPlaceCustomerRevenueSegmentResponse @aws_api_key @aws_cognito_user_pools {
  customerSegmentsList: [CustomerSegmentsList]
  marketPlaceChannel: String
  message: String
  status: Boolean
}

type adminGetFoodMarketPlaceSmsCampaignListResponse @aws_api_key @aws_cognito_user_pools {
  foodMarketPlaceSmsCampaignList: [foodMarketPlaceSmsCampaignList]
  message: String
}

type adminGetFoodMarketPlaceSmsCampaignResponse @aws_api_key @aws_cognito_user_pools {
  actualCustomers: Int
  actualRevenue: Float
  description: String
  foodMarketPlaceSmsCampaignId: String
  message: String
  promoCode: String
  roi: Float
  smsScheduleDateTime: String
  smsText: String
  status: String
  targetCustomers: Int
  targetRevenue: Float
  title: String
}

type adminGetLookupDetailResponse @aws_api_key @aws_cognito_user_pools {
  items: [lookupDetailsList]
  nextToken: String
  total: Int
}

type adminGetMembershipSettingResponse @aws_api_key @aws_cognito_user_pools {
  membershipPointExpiryType: String
  membershipPointExpiryValue: Int
  membershipTierActivated: Boolean
  message: String
  multiplier: Int
  pointConversionId: String
  spent: Int
  status: String
}

type adminGetMerchantDepartmentMessageOverviewResponse @aws_api_key @aws_cognito_user_pools {
  merchantDepartment: [merchantDepartment]
  message: String
  smsCampaign: [smsCampaign]
  status: String
}

type adminGetMerchantShippingCreditBalanceAndTransactionsResponse @aws_api_key @aws_cognito_user_pools {
  items: [merchantCreditTransactions]
  message: String
  nextToken: String
  shippingCreditBalance: Float
  status: Boolean
  total: Int
}

type adminGetSMSConfigListResponse @aws_api_key @aws_cognito_user_pools {
  smsCampaignList: [SMSConfigDetail]
}

type adminGetSmartVoucherCampaignResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  smartVoucherCampaign: smartVoucherCampaign
  status: Boolean
}

type adminGetStampingCampaignDetailResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  stampingCampaign: AdminStampingCampaign
  status: String
}

type adminGetStampingCampaignListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  nextToken: String
  stampingCampaignList: [stampingCampaign]
  status: String
  total: Int
}

type adminGetTruckResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  truck: Truck
  truckSchedule: [TruckSchedule]
}

type adminListChatbotFilesResponse @aws_api_key @aws_cognito_user_pools {
  items: [ChatbotFiles]
  message: String
  status: String
}

type adminSearchVoucher @aws_api_key @aws_cognito_user_pools {
  category: String
  customerCondition: String
  customerGetDiscountLimit: Float
  customerGetDiscountType: String
  customerGetItems: ConditionMappingResponse
  customerGetPercentValue: Float
  customerGetQuantity: String
  customerGetValue: Float
  deliveryDiscountType: String
  deliveryDiscountValue: Float
  description: String
  discountAmountCap: Float
  discountOnDelivery: Boolean
  discountOnProductValue: Float
  image: String
  isShareable: Boolean
  isUnlimitedDistribution: Boolean
  maxUserObtainLimit: Int
  merchantId: String
  minimumAmount: Float
  minimumCondition: String
  minimumQuantity: Int
  orderType: [String]
  price: Float
  productConditions: ConditionMappingResponse
  productsDiscount: ConditionMappingResponse
  qrImageKey: String
  requiredPoints: Int
  status: String
  title: String
  totalDistributed: Int
  totalDistributionLimit: Int
  type: String
  voucherCodeS3Key: String
  voucherExpiryType: String
  voucherExpiryValue: String
  voucherIcon: String
  voucherId: String
}

type adminVoucher @aws_api_key @aws_cognito_user_pools {
  category: String
  customerCondition: String
  customerGetDiscountLimit: Float
  customerGetDiscountType: String
  customerGetItems: productsMappingResponse
  customerGetPercentValue: Float
  customerGetQuantity: String
  customerGetValue: Float
  deliveryDiscountType: String
  deliveryDiscountValue: Float
  description: String
  discountAmountCap: Float
  discountOnDelivery: Boolean
  discountOnProductValue: Float
  image: String
  isShareable: Boolean
  isUnlimitedDistribution: Boolean
  maxUserObtainLimit: Int
  merchantId: String
  minimumAmount: Float
  minimumCondition: String
  minimumQuantity: Int
  orderType: [String]
  price: Float
  productConditions: voucherProductConditionMapping
  productsDiscount: productsMappingResponse
  qrImageKey: String
  requiredPoints: Int
  status: String
  title: String
  totalDistributed: Int
  totalDistributionLimit: Int
  type: String
  voucherCodeS3Key: String
  voucherExpiryType: String
  voucherExpiryValue: String
  voucherIcon: String
  voucherId: String
}

type advancedOrderDateTimeSelection @aws_api_key @aws_cognito_user_pools {
  advancedOrderDateSelection: String
  advancedOrderTimeSelection: [String]
}

type availableTruck @aws_api_key @aws_cognito_user_pools {
  truckCapacityId: String
  truckId: String
}

type checkCartLimitResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
}

type checkVoucherCartResponse @aws_api_key @aws_cognito_user_pools {
  quantity: Int
  status: String
  subtotal: Float
  voucherCartIdLists: [String]
}

type creditLimitDetails @aws_api_key @aws_cognito_user_pools {
  balanceCreditAmt: Float
  creditLimit: Float
  spentCreditLimit: Float
}

type csvExportFrequencyObject @aws_api_key @aws_cognito_user_pools {
  unit: String
  value: Int
}

type customerInfo @aws_api_key @aws_cognito_user_pools {
  customerId: String
  firstName: String
  lastName: String
  mobileNo: String
  points: membershipPointObject
  primaryEmail: String
  voucher: [voucherObject]
}

type customerOrderDetail @aws_api_key @aws_cognito_user_pools {
  address: String
  customerName: String
  latitude: Float
  longitude: Float
  phoneNumber: String
  postalCode: String
  selectedOrderType: String
  selectedStore: AutoSelectedStore
}

type deliveryDiscount @aws_api_key @aws_cognito_user_pools {
  discountType: String
  discountValue: Float
}

type fieldValueObject @aws_api_key @aws_cognito_user_pools {
  regexType: String
  value: String
}

type foodMarketPlaceSmsCampaignList @aws_api_key @aws_cognito_user_pools {
  customerSegmentIndex: String
  foodMarketPlaceSmsCampaignId: String
  smsScheduleDateTime: String
  status: String
  targetCustomers: Int
  title: String
  updatedAt: String
}

type generateURLResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  url: String
}

type getCustomerDeliveryPickUpOrderListingResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  nextToken: String
  orderListing: [OrderOrVoucher]
  status: String
  total: Int
}

type getCustomerDineInOrderListingResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  nextToken: String
  orderListing: [OrderOrVoucher]
  status: String
  total: Int
}

type getCustomerNotificationDetailResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  notification: Notification
  status: String
}

type getCustomerNotificationListResponse @aws_api_key @aws_cognito_user_pools {
  customerNotificationList: [CustomerNotificationList]
  message: String
  nextToken: String
  status: String
  total: Int
}

type getCustomerOrderDetailResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  order: Order
  orderDetails: [OrderDetailOrVoucherDetail]
  status: String
}

type getCustomerVoucherCartResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  voucher: [voucherCart]
}

type getHelpCenterFaqCacheResponse @aws_api_key @aws_cognito_user_pools {
  items: [HelpCenterFaq]
  nextToken: String
}

type getMerchantVoucherDetailResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  voucherDetail: Voucher
}

type getMerchantVoucherListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  nextToken: Int
  status: String
  total: Int
  voucherList: [Voucher]
}

type getStampingCampaignDetailResponse @aws_api_key @aws_cognito_user_pools {
  endDate: String
  extraProductCondition: ProductsDiscountResponse
  extraProductStamp: Int
  isEnable: Boolean
  merchantId: String
  message: String
  minSpend: Float
  orderType: [String]
  productCondition: ProductsDiscountResponse
  rewardVoucher: [Voucher]
  stampClaimCount: Int
  stampCollected: Int
  stampTypeValue: Int
  stampValueCollected: Int
  stampingCampaignCode: String
  stampingCampaignCycle: Int
  stampingCampaignCycleDurationValue: String
  stampingCampaignDescription: String
  stampingCampaignId: String
  stampingCampaignImage: String
  stampingCampaignListingImage: String
  stampingCampaignReminder: String
  stampingCampaignTitle: String
  stampingCampaignType: String
  stampingMilestone: Int
  stampingMilestoneRemaining: Int
  stampingProgressId: String
  startDate: String
  status: String
  voucherExpiryDateType: String
  voucherExpiryDateValue: String
}

type getStampingCampaignListResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  nextToken: String
  stampingCampaignList: [stampingCampaign]
  status: String
  total: Int
}

type getTotalCartCountResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  productCartCount: Int
  status: String
  voucherCartCount: Int
}

type getVoucherPointRedemptionResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
  voucherPointRedemptionDetail: [voucherPointRedemptionDetail]
}

type kdsGetCustomerResponse @aws_api_key @aws_cognito_user_pools {
  customerInfo: customerInfo
  message: String
  status: String
}

type kdsListModifierItemsResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  modifierItemList: [modifierItem]
  nextToken: String
  status: Boolean
  total: Int
}

type lookupDetailsList @aws_api_key @aws_cognito_user_pools {
  extractedDocumentLookupDetailId: String
  headers: [String]
  values: [String]
}

type membershipPointObject @aws_api_key @aws_cognito_user_pools {
  membershipPoint: Int
  membershipPointExpiryDate: String
  membershipTier: String
  totalEarnedMembershipPoint: Int
}

type merchantCreditTransactions @aws_api_key @aws_cognito_user_pools {
  actionType: String
  amount: Float
  createdAt: String
  createdBy: String
  merchantCreditTransactionId: String
  merchantId: String
  merchantOrderId: String
  orderNumber: String
  refundReason: String
}

type merchantDepartment @aws_api_key @aws_cognito_user_pools {
  departmentName: String
  merchantDepartmentId: String
  smsQuota: Int
  smsUsage: Int
}

type modifierItem @aws_api_key @aws_cognito_user_pools {
  availableStatus: String
  modifierId: String
  modifierName: String
}

type pointTransaction @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  customerId: String
  expiredDateTime: String
  image: String
  memberId: String
  memberPointLogId: String
  merchantId: String
  orderId: String
  orderNumber: String
  points: String
  referenceId: String
  type: String
  updatedAt: String
  updatedBy: String
  voucherName: String
}

type pointTransactionAPIResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  pointTransaction: [pointTransaction]
  status: String
}

type previewCustomerMsg @aws_api_key @aws_cognito_user_pools {
  campaignMessage: String
  firstName: String
  lastName: String
  selectedDataTrack: [String]
}

type processCustomerVoucherResponse @aws_api_key @aws_cognito_user_pools {
  gatewayPaymentUrl: String
  message: String
  orderNumber: String
  status: String
}

type productConditionMapping @aws_api_key @aws_cognito_user_pools {
  exclude: Boolean
  ids: [IdsWithQuantities]
  type: String
}

type productMappingType @aws_api_key @aws_cognito_user_pools {
  bundleId: String
  collectionId: String
  productId: String
  productUOM: String
}

type productsMappingResponse @aws_api_key @aws_cognito_user_pools {
  ids: [productMappingType]
  type: String
}

type qbInformation @aws_api_key @aws_cognito_user_pools {
  qbClientId: String
  qbClientSecret: String
}

type qrCodeShowOnSiteResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  qrCodeList: [qrCodeShowOnsiteList]
  status: Boolean
}

type qrCodeShowOnsiteList @aws_api_key @aws_cognito_user_pools {
  printNumber: String
  printedQrCodeId: String
  webQrCode: String
}

type rateFaqArticleResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: String
}

type reminder @aws_api_key @aws_cognito_user_pools {
  notificationMessage: String
  notificationTitle: String
  reminderId: String
  reminderMilestoneValue: Int
}

type rewardVoucherMapping @aws_api_key @aws_cognito_user_pools {
  id: String
  quantity: Int
}

type scheduledTime @aws_api_key @aws_cognito_user_pools {
  availableTrucks: [availableTruck]
  time: String
}

type searchAutoContentsResponse @aws_cognito_user_pools {
  items: [AutoContents]
  nextToken: String
  total: Int
}

type searchBranchesResponse @aws_cognito_user_pools {
  items: [Branch]
  nextToken: String
  total: Int
}

type searchDocumentColumnMappingsResponse @aws_cognito_user_pools {
  items: [DocumentColumnMappings]
  nextToken: String
  total: Int
}

type searchDocumentLookupsResponse @aws_cognito_user_pools {
  items: [ExtractedDocumentLookup]
  nextToken: String
  total: Int
}

type searchDocumentTemplateResponse @aws_cognito_user_pools {
  items: [ExtractedDocumentTemplate]
  nextToken: String
  total: Int
}

type searchDocumentsResponse @aws_cognito_user_pools {
  items: [Documents]
  nextToken: String
  total: Int
}

type searchEventFlowsResponse @aws_api_key @aws_cognito_user_pools {
  items: [EventFlow]
  nextToken: String
  total: Int
}

type searchKdsOrdersResponse @aws_api_key @aws_cognito_user_pools {
  items: [KdsOrder]
  nextToken: String
  total: Int
}

type searchKnowledgeBasesResponse @aws_api_key @aws_cognito_user_pools {
  items: [KnowledgeBase]
  nextToken: String
  total: Int
}

type searchNotificationCampaignResponse @aws_cognito_user_pools {
  items: [NotificationCampaign]
  nextToken: String
  total: Int
}

type searchPelangiCustomersResponse @aws_cognito_user_pools {
  items: [PelangiCustomers]
  nextToken: String
  total: Int
}

type searchPelangiIsbnResponse @aws_cognito_user_pools {
  items: [PelangiIsbn]
  nextToken: String
  total: Int
}

type searchSMSConfigsResponse @aws_cognito_user_pools {
  items: [SMSConfigDetail]
  nextToken: String
  total: Int
}

type searchSalesAgentResponse @aws_api_key @aws_cognito_user_pools {
  items: [SalesAgentItem]
  nextToken: String
  total: Int
}

type searchSmartVoucherCampaignsResponse @aws_cognito_user_pools {
  items: [smartVoucherCampaign]
  nextToken: String
  total: Int
}

type searchSmsCampaignResponseResponse @aws_cognito_user_pools {
  items: [SmsCampaignResponse]
  nextToken: String
  total: Int
}

type searchSmsTemplateResponse @aws_cognito_user_pools {
  items: [smsTemplate]
  nextToken: String
  total: Int
}

type searchTruckPackingListsResponse @aws_cognito_user_pools {
  items: [TruckPackingLists]
  nextToken: String
  total: Int
}

type searchTruckSchedulesResponse @aws_cognito_user_pools {
  items: [TruckSchedule]
  nextToken: String
  total: Int
}

type searchTrucksResponse @aws_cognito_user_pools {
  items: [Truck]
  nextToken: String
  total: Int
}

type searchUserGroupsResponse @aws_cognito_user_pools {
  items: [UserGroup]
  nextToken: String
  total: Int
}

type smartVoucherCampaign @aws_api_key @aws_cognito_user_pools {
  campaignDetail: [SmartVoucherCampaignDetail]
  campaignTitle: String
  campaignTotalCustomerParticipated: Int
  campaignTotalTargetCustomer: Int
  comparisonType: String
  createdAt: String
  createdBy: String
  customerType: String
  errorFileKey: String
  estimatedCost: Float
  estimatedRevenue: Float
  merchantId: String
  messageStatus: String
  msgScheduleDateTime: String
  revenueSplit: Int
  s3FileKey: String
  smartVoucherCampaignId: String
  stepFunctionExecutionId: String
  totalCampaignOptOutCustomers: Int
  totalCustomers: Int
  totalExistingCustomers: Int
  totalFilteredCustomers: Int
  updatedAt: String
  updatedBy: String
  voucherExpiryDate: String
}

type smsCampaign @aws_api_key @aws_cognito_user_pools {
  departmentName: String
  smsUsage: String
  userId: String
  userName: String
}

type smsTemplate @aws_cognito_user_pools {
  createdAt: String
  createdBy: String
  merchantDepartmentId: String
  merchantId: String
  smsTemplateId: String
  smsText: String
  templateEmailBody: [EmailBody]
  templateEmailDesign: EmailDesign
  templateEmailHtml: String
  templateMediaContent: String
  templateMediaType: String
  templateName: String
  templateStatus: String
  templateType: String
  updatedAt: String
  updatedBy: String
}

type stampConditionMapping @aws_api_key @aws_cognito_user_pools {
  exclude: Boolean
  ids: [stampRewards]
  type: String
}

type stampRewards @aws_api_key @aws_cognito_user_pools {
  id: String
  quantity: Int
}

type stampingCampaign @aws_api_key @aws_cognito_user_pools {
  endDate: String
  extraProductCondition: ProductsDiscountResponse
  extraProductStamp: Int
  isEnable: Boolean
  merchantId: String
  minSpend: Float
  orderType: [String]
  productCondition: ProductsDiscountResponse
  rewardVoucher: [Voucher]
  stampClaimCount: Int
  stampCollected: Int
  stampTypeValue: Int
  stampValueCollected: Int
  stampingCampaignCode: String
  stampingCampaignCycle: Int
  stampingCampaignCycleDuration: Int
  stampingCampaignCycleDurationValue: String
  stampingCampaignDescription: String
  stampingCampaignId: String
  stampingCampaignImage: String
  stampingCampaignListingImage: String
  stampingCampaignReminder: String
  stampingCampaignTitle: String
  stampingCampaignType: String
  stampingMilestone: Int
  stampingMilestoneRemaining: Int
  stampingProgressId: String
  startDate: String
  updatedAt: String
  voucherExpiryDateType: String
  voucherExpiryDateValue: String
}

type subscriptionHistoryList @aws_api_key @aws_cognito_user_pools {
  amount: Float
  completedDateTime: String
  createdDateTime: String
  merchantId: String
  merchantOrderId: String
  orderNumber: String
  paymentDateTime: String
  paymentMethod: String
  paymentStatus: String
  serviceDetail: [String]
  serviceType: String
  status: String
  title: String
  transactionId: String
}

type truckSelection @aws_api_key @aws_cognito_user_pools {
  scheduledDate: String
  scheduledDay: String
  scheduledTime: [scheduledTime]
}

type updateModifierItemsAvailabilityResponse @aws_api_key @aws_cognito_user_pools {
  message: String
  status: Boolean
}

type voucherCart @aws_api_key @aws_cognito_user_pools {
  createdAt: String
  customerId: String
  merchantId: String
  voucherCartId: String
  voucherId: String
  voucherImage: String
  voucherPrice: Float
  voucherQuantity: Int
  voucherTitle: String
  voucherTotalPrice: Float
}

type voucherObject @aws_api_key @aws_cognito_user_pools {
  description: String
  expiryDate: String
  image: String
  quantity: Int
  remainingQuantity: Int
  title: String
  voucherCode: String
  voucherIcon: String
  voucherId: String
}

type voucherPointRedemptionDetail @aws_api_key @aws_cognito_user_pools {
  customerId: String
  merchantId: String
  pointsRedeemed: String
  redeemDateTime: String
  voucherId: String
  voucherPointRedemptionId: String
}

type voucherProductConditionMapping @aws_api_key @aws_cognito_user_pools {
  exclude: Boolean
  ids: [String]
  type: String
}

input AdminListWSChatHistoryFilter {
  and: [AdminListWSChatHistoryFilter]
  channel: SearchableStringFilterInput
  chatDateTime: SearchableStringFilterInput
  chatId: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  customerName: SearchableStringFilterInput
  disableAutoReply: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  merchantReply: SearchableBooleanFilterInput
  message: SearchableStringFilterInput
  messageSentiment: SearchableStringFilterInput
  messageType: SearchableStringFilterInput
  not: [AdminListWSChatHistoryFilter]
  or: [AdminListWSChatHistoryFilter]
  recipient: SearchableStringFilterInput
  sender: SearchableStringFilterInput
}

input CampaignDetailInput {
  assumptionConversion: Float
  campaignMessage: String
  estimateRevenueSplitRatio: Float
  gptPrompt: String
  inputFrequencySegment: InputFrequencySegmentInput
  inputMonetaryValue: Float
  inputRecencyValue: Int
  isPersonalizedMsg: Boolean
  isTemplateMsg: Boolean
  previewCustomerMsg: PreviewCustomerMsgInput
  selectedDemographics: SelectedDemographicsInput
  selectedTags: [SelectedTagsInput]
  smsTemplateId: String
  voucherDiscount: Float
  voucherMinSpend: Float
}

input ChannelAutoReplyListWSChatHistory {
  channels: [String]
  isDisabled: Int
}

input ChildRecord {
  recordId: String
}

input ConditionMapping {
  ids: [String]
  type: String
}

input ContactUsStoreInput {
  address: String
  city: String
  contactUsStoreId: String
  createdAt: String
  createdBy: String
  latitude: String
  longitude: String
  merchantId: String
  postalCode: String
  state: String
  storeCode: String
  storeId: String
  storeName: String
  updatedAt: String
  updatedBy: String
}

input CreateStoreItemInput {
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  isSellingOffline: Boolean
  itemId: String
  itemProperty: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  quantityForSales: Int
}

input CustomOrderItemInput {
  itemDescription: String
  itemId: String
  itemProperty: String
  itemTitle: String
  price: Float
  quantity: Int
}

input CustomerInfoInput {
  creditLimit: Float
  creditLimitEnabled: Boolean
  customerFirstName: String
  customerLastName: String
  customerMobileNo: String
  customerPrimaryEmail: String
}

input DocumentAuditTrailFilter {
  and: [DocumentAuditTrailFilter]
  documentNo: SearchableStringFilterInput
  extractedDocumentId: SearchableStringFilterInput
  not: [DocumentAuditTrailFilter]
  or: [DocumentAuditTrailFilter]
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input DocumentColumnMappingFilter {
  actualValue: String
  fieldNameList: [String]
  fieldValueList: [String]
}

input DocumentDataFilter {
  dataType: String
  fieldName: String
  fieldValue: String
}

input DocumentFormDataInput {
  fieldName: String
  fieldValue: String
}

input DocumentTableDataInput {
  fieldName: String
  fieldValue: [String]
}

input DocumentTemplateTableFormDataFieldValueInput {
  regexType: String
  value: String
}

input DocumentTemplateTableFormDataInput {
  boundingBox: InputBoundingBoxCoordinate
  fieldLabel: String
  fieldName: String
  fieldValue: [DocumentTemplateTableFormDataFieldValueInput]
  inUse: Boolean
  mandatory: Boolean
  regex: [String]
  type: String
  uom: Boolean
}

input EInvoiceFilter {
  additionalChargeAmount: SearchableFloatFilterInput
  adjustmentStatus: SearchableStringFilterInput
  adjustmentType: SearchableStringFilterInput
  and: [EInvoiceFilter]
  companyAddressLine: SearchableStringFilterInput
  companyCityName: SearchableStringFilterInput
  companyPostalCode: SearchableStringFilterInput
  companyStateName: SearchableStringFilterInput
  companyTin: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  discountAmount: SearchableFloatFilterInput
  documentType: SearchableStringFilterInput
  eInvoiceNo: SearchableStringFilterInput
  email: SearchableStringFilterInput
  fullName: SearchableStringFilterInput
  idNumber: SearchableStringFilterInput
  idType: SearchableStringFilterInput
  isInAdjustment: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  not: EInvoiceFilter
  or: [EInvoiceFilter]
  phoneNumber: SearchableStringFilterInput
  posType: SearchableStringFilterInput
  receiptNumber: SearchableStringFilterInput
  source: SearchableStringFilterInput
  sstRegistrationNumber: SearchableStringFilterInput
  status: SearchableStringFilterInput
  storeCode: SearchableStringFilterInput
  totalExcludingTax: SearchableFloatFilterInput
  totalNetAmount: SearchableFloatFilterInput
  totalPayableAmount: SearchableFloatFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input ElasticSearchSortDirection {
  direction: String
  field: String
}

input EmailBodyInput {
  button: String
  divider: Boolean
  emailText: String
  link: String
  media: EmailMediaInput
}

input EmailButtonDesignInput {
  buttonColor: String
  buttonFontFamily: String
  buttonFontSize: String
  buttonRadius: String
  buttonTextColor: String
}

input EmailDesignInput {
  buttonDesign: EmailButtonDesignInput
  dividersDesign: EmailDividersDesignInput
  linkDesign: EmailLinkDesignInput
  template: EmailTemplateInput
  textStyles: EmailTextStylesInput
}

input EmailDividersDesignInput {
  dividerColor: String
  dividerHeight: String
  dividerStyle: String
}

input EmailLinkDesignInput {
  linkColor: String
  linkFontFamily: String
  linkFontSize: String
  linkTextStyle: String
}

input EmailMediaInput {
  mediaContent: String
  mediaType: String
}

input EmailTemplateInput {
  backgroundColor: String
  bodyColor: String
}

input EmailTextStylesInput {
  heading1Color: String
  heading1FontFamily: String
  heading1FontSize: String
  heading2Color: String
  heading2FontFamily: String
  heading2FontSize: String
  paragraphFontFamily: String
  paragraphFontSize: String
  parapgraphColor: String
}

input ExtractedDocumentColumnMappingsInput {
  inputFieldName: String
  outputFieldName: String
}

input ExtractedDocumentCsvExportFrequencyInput {
  unit: String
  value: Int
}

input ExtractedDocumentDataInput {
  formData: [DocumentFormDataInput]
  tableData: [DocumentTableDataInput]
}

input ExtractedDocumentTemplateDataLabelInput {
  formData: [DocumentTemplateTableFormDataInput]
  tableData: [DocumentTemplateTableFormDataInput]
}

input FacebookLiveCampaignDetailInput {
  associatedProducts: [ProductInBundleInput]
  commentedQuantity: Int
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  facebookLiveCampaignDetailId: String
  facebookLiveCampaignId: String
  hotkey: String
  itemId: String
  itemImage: String
  itemProperty: String
  itemSku: String
  itemTitle: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  merchantId: String
  productId: String
  quantity: Int
}

input FacebookLiveMessageInput {
  facebookLiveComment: String
  facebookMessengerResponseOutOfStock: String
  facebookMessengerResponsePartialSuccess: String
  facebookMessengerResponseSuccess: String
}

input HeadersAndValuesInput {
  extractedDocumentLookupDetailId: String
  headers: [String]
  values: [String]
}

input HelpCenterIssueInput {
  issueMessage: String
  issueType: String
  orderNumber: String
  phoneNumber: String
}

input IdsWithQuantitiesInput {
  id: String
  quantity: Int
}

input InStoreOrderInput {
  accountNo: String
  area: String
  createdAt: String
  createdBy: String
  duplicateRecords: [InStoreOrderInput]
  firstName: String
  hasDuplicateRecords: Boolean
  inStoreOrderId: String
  lastName: String
  merchantId: String
  posTerminalNo: String
  receiptNo: String
  status: String
  storeArea: String
  storeName: String
  storeNo: String
  totalAmountSpent: String
  totalDiscountAmount: String
  totalPointsCollected: String
  totalPointsRedeemed: String
  totalVoucherDiscountAmount: String
  transactionDate: String
  transactionTime: String
  updatedAt: String
  updatedBy: String
}

input InStoreOrderMainRecordInput {
  inStoreOrderId: String
  receiptNo: String
  totalAmountSpent: Float
}

input InputBoundingBoxCoordinate {
  height: Float
  left: Float
  top: Float
  width: Float
}

input InputDocumentTableFormDataDataLabels {
  fieldName: SearchableStringFilterInput
  fieldValue: [InputDocumentTableFormDataDataLabelsFieldValue]
  inUse: SearchableBooleanFilterInput
  mandatory: SearchableBooleanFilterInput
  regex: [SearchableStringFilterInput]
  type: SearchableStringFilterInput
  uom: SearchableBooleanFilterInput
}

input InputDocumentTableFormDataDataLabelsFieldValue {
  regexType: SearchableStringFilterInput
  value: SearchableStringFilterInput
}

input InputFrequencySegmentInput {
  endDate: String
  noOfOrders: Int
  startDate: String
}

input ItemToBeUpdated {
  itemId: String
  itemProperty: String
  productId: String
}

input LHDNAdjustmentInput {
  productId: String
  productName: String
  productPrice: Float
  productTaxRate: Float
  quantity: Int
}

input LegalPolicyInput {
  isDisabled: Boolean
  policyContent: String
  policyType: String
}

input ListOfKbInput {
  sourceUrl: String
  type: String
}

input ListPendingCheckoutCartsFilter {
  and: [ListPendingCheckoutCartsFilter]
  createdAt: SearchableStringFilterInput
  customerFirstName: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  customerLastName: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [ListPendingCheckoutCartsFilter]
  or: [ListPendingCheckoutCartsFilter]
  salesChannelName: SearchableStringFilterInput
  totalPrice: SearchableFloatFilterInput
  totalProducts: SearchableIntFilterInput
  totalQuantity: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
}

input ListProductsWithProductUOMsFilter {
  and: [ListProductsWithProductUOMsFilter]
  barcode: SearchableStringFilterInput
  collectionIds: SearchableStringFilterInput
  collectionNames: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  isDisabled: SearchableBooleanFilterInput
  media: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [ListProductsWithProductUOMsFilter]
  or: [ListProductsWithProductUOMsFilter]
  productId: SearchableStringFilterInput
  productTitle: SearchableStringFilterInput
  sku: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input LookupFieldInput {
  dataLabelType: String
  fieldIndex: Int
  inputFieldIndex: Int
  keyColumns: [String]
  lookupId: String
  lookupType: String
  relationship: String
  requireKey: String
  secondaryFieldIndex: [Int]
  shareKey: String
}

input ManualPaymentOption {
  accountNumber: String
  bankAccountName: String
  isBankTransfer: Boolean
  isDisabled: Boolean
  manualPaymentMethodName: String
  paymentInstructions: String
  qrCode: String
}

input MarketPlaceProductSpecInput {
  actualName: String
  hasChildren: Boolean
  inputType: String
  isRequired: Boolean
  parentId: String
  type: String
  typeId: String
  typeName: String
  typeValues: [MarketPlaceProductSpecValueInput]
}

input MarketPlaceProductSpecValueInput {
  valueEnglishName: String
  valueId: String
  valueName: String
  valueUnit: String
}

input MembershipTierInput {
  membershipTierId: String
  title: String
}

input ModifierGroupsInput {
  isItemsControlAvailable: Boolean
  modifier: [ModifiersInput]
  modifierGroupId: String
  modifierGroupName: String
  modifierGroupType: String
  requestRemark: String
  selectionRangeMax: Int
  selectionRangeMin: Int
}

input ModifiersInput {
  availableStatus: String
  modifierId: String
  modifierName: String
  price: Float
}

input ModifyChatbotItemsInput {
  answer: String
  chatbotItemId: String
  idList: [String]
  question: String
}

input OrderDetailToBeCancelled {
  orderDetailId: String
  quantity: Int
}

input OrderDetailToBeFulfilled {
  orderDetailId: String
  productUOMId: String
  quantity: Int
}

input OrderDetailToBeRefunded {
  amount: Float
  orderDetailId: String
  quantity: Int
}

input OrderInput {
  accumulatedRefundAmount: Float
  billingAddress: String
  billingCity: String
  billingCountry: String
  billingPostalCode: String
  billingState: String
  cancelledBy: String
  cancelledReason: String
  createdAt: String
  createdBy: String
  customerAccountNo: String
  customerFirstName: String
  customerIP: String
  customerId: String
  customerLastName: String
  customerMobileNo: String
  customerPrimaryEmail: String
  deliveryAddress: String
  deliveryCity: String
  deliveryCountry: String
  deliveryDiscount: Float
  deliveryFee: Float
  deliveryLatitude: String
  deliveryLongitude: String
  deliveryMode: String
  deliveryNumber: String
  deliveryOrderDateTime: String
  deliveryOrderId: String
  deliveryPartnerFee: Float
  deliveryPartnerName: String
  deliveryPostalCode: String
  deliveryState: String
  deliveryStatus: String
  deliveryType: String
  driverName: String
  driverPhoneNumber: String
  driverPlateNumber: String
  grandTotal: Float
  isAdvancedOrder: Boolean
  isRefunded: Boolean
  isReviewAvailable: Boolean
  lalamoveOrderDateTime: String
  lalamoveOrderId: String
  lalamoveTotalFee: Float
  merchantId: String
  noteToRider: String
  orderCancellationDateTime: String
  orderCollectedDateTime: String
  orderCompletedDateTime: String
  orderDateTime: String
  orderId: String
  orderNumber: String
  orderType: String
  overallRating: Int
  packageNumber: String
  partialFulfilmentAmount: Float
  partialFulfilmentDiscount: Float
  paymentDateTime: String
  paymentStatus: String
  promoCode: String
  promoCodeDiscount: Float
  promoCodeId: String
  promoCodeTitle: String
  refundAmount: Float
  refundCompleteDateTime: String
  refundReason: String
  remarks: String
  requiredCutlery: Boolean
  riderJobNumber: String
  salesChannelName: String
  scheduledDateTime: String
  sellerNote: String
  status: String
  storeCode: String
  storeId: String
  storeName: String
  subtotal: Float
  taggingNames: [String]
  totalDiscount: Float
  totalOrderItems: Int
  totalPromoCodeDiscount: Float
  totalVoucherDiscount: Float
  transactionId: String
  updatedAt: String
  updatedBy: String
  voucherDiscount: Float
  voucherNumber: String
}

input OrderToBeUpdated {
  orderId: String
  status: String
}

input PaymentGateway {
  companyName: String
  isDisabled: Boolean
  serviceId: String
  servicePassword: String
}

input PointConversionInput {
  effectiveEndDateTime: String
  effectiveStartDateTime: String
  itemId: String
  itemProperty: String
  multiplier: Float
  productId: String
  spent: Float
}

input PreviewCustomerMsgInput {
  campaignMessage: String
  firstName: String
  lastName: String
  selectedDataTrack: [String]
}

input ProductBundleDetailInput {
  merchantId: String
  productBundleDetailId: String
  productBundleId: String
  productId: String
  productImage: String
  productSku: String
  productTitle: String
  productUOMId: String
  quantity: Int
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
}

input ProductBundlePricingInput {
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryEffectiveEndDateTime: String
  deliveryEffectiveStartDateTime: String
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  marketPlaceAttributes: [MarketPlaceProductSpecInput]
  marketPlaceBrand: MarketPlaceProductSpecInput
  marketPlaceCategories: [MarketPlaceProductSpecInput]
  merchantId: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupEffectiveEndDateTime: String
  pickupEffectiveStartDateTime: String
  pickupPrice: Float
  pickupPriceWithTax: Float
  priceGroupName: String
  productBundlePricingId: String
  quantityForSales: Int
  quantityType: String
  salesChannelName: String
  storeId: [String]
  storeProductId: [String]
  updatedAt: String
  updatedBy: String
}

input ProductConditionMappingInput {
  exclude: Boolean
  ids: [IdsWithQuantitiesInput]
  type: String
}

input ProductExclusionInput {
  itemId: String
  itemProperty: String
  productId: String
  type: String
}

input ProductInBundleInput {
  productId: String
  productImage: String
  productSku: String
  productTitle: String
  productUOMId: String
  quantity: Int
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
}

input ProductUOMInput {
  barcode: String
  collectionNames: [String]
  createdAt: String
  createdBy: String
  estimatedRestock: Int
  image: String
  incomingQuantity: Int
  isDisabled: Boolean
  isNewArrival: Boolean
  isProductTaxable: Boolean
  isVirtualGoods: Boolean
  merchantId: String
  modifierGroups: [ModifierGroupsInput]
  newArrivalDate: String
  noOfPurchases: Int
  packageSize: Int
  preOrderReservedQuantity: Int
  productCover: String
  productId: String
  productTitle: String
  productUOMId: String
  productUOMPricing: [ProductUOMPricingInput]
  quantityBundleForSales: Int
  quantityForSales: Int
  shippingDimensionHeight: Float
  shippingDimensionLength: Float
  shippingDimensionWidth: Float
  shippingWeight: Float
  shippingWeightUnit: String
  sku: String
  skuLimitPerDay: Int
  storeProduct: [StoreProductInput]
  taggingNames: [String]
  totalStockQuantity: Int
  trackQuantity: Boolean
  updatedAt: String
  updatedBy: String
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
  virtualGoodsExpiredAt: String
  virtualGoodsExpiryDays: String
}

input ProductUOMPricingInput {
  ProductUOMPricingId: String
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryEffectiveEndDateTime: String
  deliveryEffectiveStartDateTime: String
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  marketPlaceAttributes: [MarketPlaceProductSpecInput]
  marketPlaceBrand: MarketPlaceProductSpecInput
  marketPlaceCategories: [MarketPlaceProductSpecInput]
  merchantId: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupEffectiveEndDateTime: String
  pickupEffectiveStartDateTime: String
  pickupPrice: Float
  pickupPriceWithTax: Float
  priceGroupName: String
  productId: String
  productUOMId: String
  salesChannelName: String
  storeId: [String]
  storeProductId: [String]
  updatedAt: String
  updatedBy: String
}

input ProductsDiscount {
  ids: [ProductsDiscountIds]
  type: String
}

input ProductsDiscountIds {
  collectionName: String
  productBundleId: String
  productId: String
  productUOMId: String
}

input RecordInput {
  childIds: [ChildRecord]
  recordId: String
}

input ReminderInput {
  notificationMessage: String
  notificationTitle: String
  reminderId: String
  reminderMilestoneValue: Int
}

input RewardVoucherMappingInput {
  id: String
  quantity: Int
}

input ScheduleInput {
  branchId: String
  branchName: String
  day: String
  postal: [String]
  time: String
}

input SearcSMSCampaignResponseFilter {
  and: [SearcSMSCampaignResponseFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerPhoneNumber: SearchableStringFilterInput
  message: SearchableStringFilterInput
  not: [SearcSMSCampaignResponseFilter]
  or: [SearcSMSCampaignResponseFilter]
  platform: SearchableStringFilterInput
  smsCampaignId: SearchableStringFilterInput
  smsCampaignResponseId: SearchableStringFilterInput
  smsScheduleDateTime: SearchableStringFilterInput
  smsText: SearchableStringFilterInput
  status: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearcSMSConfigsFilter {
  and: [SearcSMSConfigsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  csvS3Key: SearchableStringFilterInput
  listOfCustomerPhoneNumber: [SearchableStringFilterInput]
  merchantDepartmentId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  message: SearchableStringFilterInput
  not: [SearcSMSConfigsFilter]
  or: [SearcSMSConfigsFilter]
  platform: SearchableStringFilterInput
  reply: SearchableBooleanFilterInput
  saveTemplate: SearchableBooleanFilterInput
  smsCampaignId: SearchableStringFilterInput
  smsScheduleDateTime: SearchableStringFilterInput
  smsText: SearchableStringFilterInput
  smsTopic: SearchableStringFilterInput
  status: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchAutoContentsResponseFilter {
  and: [SearchAutoContentsResponseFilter]
  answer: SearchableStringFilterInput
  autoContentId: SearchableStringFilterInput
  contentSelected: SearchableBooleanFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  issueId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchAutoContentsResponseFilter]
  or: [SearchAutoContentsResponseFilter]
  question: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchBranchesResponseFilter {
  address: SearchableStringFilterInput
  and: [SearchBranchesResponseFilter]
  branchId: SearchableStringFilterInput
  branchName: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchBranchesResponseFilter]
  or: [SearchBranchesResponseFilter]
  postalCode: SearchableStringFilterInput
  truckList: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchContactUsStoreFilter {
  address: SearchableStringFilterInput
  and: [SearchContactUsStoreFilter]
  city: SearchableStringFilterInput
  contactUsStoreId: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  latitude: SearchableStringFilterInput
  longitude: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchContactUsStoreFilter]
  or: [SearchContactUsStoreFilter]
  postalCode: SearchableStringFilterInput
  state: SearchableStringFilterInput
  storeCode: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  storeName: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchCustomOrdersFilter {
  and: [SearchCustomOrdersFilter]
  billingAddress: SearchableStringFilterInput
  billingCity: SearchableStringFilterInput
  billingCountry: SearchableStringFilterInput
  billingPostalCode: SearchableStringFilterInput
  billingState: SearchableStringFilterInput
  cognitoUsername: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customOrderId: SearchableStringFilterInput
  customerFirstName: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  customerLastName: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  mobileNo: SearchableStringFilterInput
  not: [SearchCustomOrdersFilter]
  or: [SearchCustomOrdersFilter]
  orderId: SearchableStringFilterInput
  orderNumber: SearchableStringFilterInput
  remark: SearchableStringFilterInput
  salesAgentId: SearchableStringFilterInput
  shippingAddress: SearchableStringFilterInput
  shippingCity: SearchableStringFilterInput
  shippingCountry: SearchableStringFilterInput
  shippingPostalCode: SearchableStringFilterInput
  shippingState: SearchableStringFilterInput
  status: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchCustomerVouchersFilter {
  and: [SearchCustomerVouchersFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  customerVoucherId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchCustomerVouchersFilter]
  or: [SearchCustomerVouchersFilter]
  status: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  voucherCode: SearchableStringFilterInput
  voucherExpiryDate: SearchableStringFilterInput
  voucherId: SearchableStringFilterInput
}

input SearchCustomersFilter {
  accountNo: SearchableStringFilterInput
  activated: SearchableBooleanFilterInput
  address: SearchableStringFilterInput
  address2: SearchableStringFilterInput
  and: [SearchCustomersFilter]
  city: SearchableStringFilterInput
  consentPersonalData: SearchableBooleanFilterInput
  country: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  dateOfBirth: SearchableStringFilterInput
  deviceEndpoint: SearchableStringFilterInput
  deviceToken: SearchableStringFilterInput
  emailSubcriptionStatus: SearchableStringFilterInput
  employmentStatus: SearchableStringFilterInput
  facebookID: SearchableStringFilterInput
  firstName: SearchableStringFilterInput
  gender: SearchableStringFilterInput
  hasCompletedProfile: SearchableBooleanFilterInput
  hasRewarded: SearchableBooleanFilterInput
  identityCard: SearchableStringFilterInput
  isBlocked: SearchableBooleanFilterInput
  isFacebook: SearchableBooleanFilterInput
  lastName: SearchableStringFilterInput
  maritalStatus: SearchableStringFilterInput
  marketingConsent: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  mobileNo: SearchableStringFilterInput
  nationality: SearchableStringFilterInput
  not: [SearchCustomersFilter]
  or: [SearchCustomersFilter]
  password: SearchableStringFilterInput
  personalIncomeLevel: SearchableStringFilterInput
  postal: SearchableStringFilterInput
  primaryEmail: SearchableStringFilterInput
  profilePicture: SearchableStringFilterInput
  qrCode: SearchableStringFilterInput
  race: SearchableStringFilterInput
  salesAgentId: SearchableStringFilterInput
  secondaryEmail: SearchableStringFilterInput
  signedUpDateTime: SearchableStringFilterInput
  smartTaggingNames: SearchableStringFilterInput
  state: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  totalSalesOrder: SearchableIntFilterInput
  totalSpent: SearchableFloatFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchDocumentColumnMappingsFilter {
  actualValue: SearchableStringFilterInput
  alternativeValue: SearchableStringFilterInput
  and: [SearchDocumentColumnMappingsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  extractedDocumentColumnMappingId: SearchableStringFilterInput
  fieldName: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  message: SearchableStringFilterInput
  not: [SearchDocumentColumnMappingsFilter]
  or: [SearchDocumentColumnMappingsFilter]
  status: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchDocumentLookupsResponseFilter {
  and: [SearchDocumentLookupsResponseFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  csvS3Key: SearchableStringFilterInput
  extractedDocumentLookupId: SearchableStringFilterInput
  fieldName: SearchableStringFilterInput
  fieldType: SearchableStringFilterInput
  fieldValue: [SearchableStringFilterInput]
  lookupName: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchDocumentLookupsResponseFilter]
  or: [SearchDocumentLookupsResponseFilter]
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchDocumentTemplateResponseFilter {
  and: [SearchDocumentTemplateResponseFilter]
  batchExportCsvFrequency: SearchableStringFilterInput
  columnMappings: [SearchableColumnMappingsFilterInput]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  dataLabels: SearchableExtractedDocumentDataLabelsFilterInput
  defaultTemplate: SearchableBooleanFilterInput
  documentS3Key: SearchableStringFilterInput
  documentTemplateName: SearchableStringFilterInput
  documentTemplateType: SearchableStringFilterInput
  extractedDocumentTemplateId: SearchableStringFilterInput
  isExportCsv: SearchableBooleanFilterInput
  lookupFields: [SearchableLookupFieldFilterInput]
  merchantId: SearchableStringFilterInput
  not: [SearchDocumentTemplateResponseFilter]
  or: [SearchDocumentTemplateResponseFilter]
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchDocumentsFilter {
  and: [SearchDocumentsFilter]
  approvedStatus: SearchableBooleanFilterInput
  conversionStatus: SearchableBooleanFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  documentDate: SearchableStringFilterInput
  documentNo: SearchableStringFilterInput
  documentType: SearchableStringFilterInput
  executionId: SearchableStringFilterInput
  extractedDocumentId: SearchableStringFilterInput
  extractedDocumentTemplateId: SearchableStringFilterInput
  inputFileName: SearchableStringFilterInput
  inputS3Path: SearchableStringFilterInput
  isDuplicate: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  message: SearchableStringFilterInput
  not: [SearchDocumentsFilter]
  or: [SearchDocumentsFilter]
  outputS3Path: SearchableStringFilterInput
  outputS3PathBatchCsv: SearchableStringFilterInput
  status: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchDynamicFormAnswerFilter {
  and: [SearchSalesAgentFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  dynamicFormAnswerId: SearchableStringFilterInput
  dynamicFormId: SearchableStringFilterInput
  layout: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchSalesAgentFilter]
  or: [SearchSalesAgentFilter]
  respondentEmail: SearchableStringFilterInput
  taggingNames: [SearchableStringFilterInput]
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchDynamicFormFilter {
  and: [SearchSalesAgentFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  dynamicFormId: SearchableStringFilterInput
  layout: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchSalesAgentFilter]
  numberOfAnswer: SearchableIntFilterInput
  or: [SearchSalesAgentFilter]
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchEInvoiceConsolidatedFilter {
  and: [SearchEInvoiceConsolidatedFilter]
  consolidationPeriod: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  currency: SearchableStringFilterInput
  currencyExchangeRate: SearchableFloatFilterInput
  eInvoiceConsolidatedId: SearchableStringFilterInput
  eInvoiceNo: SearchableStringFilterInput
  finalTotalPayableAmount: SearchableFloatFilterInput
  listEInvoicesId: [SearchableStringFilterInput]
  merchantId: SearchableStringFilterInput
  month: SearchableStringFilterInput
  not: [SearchEInvoiceConsolidatedFilter]
  or: [SearchEInvoiceConsolidatedFilter]
  source: SearchableStringFilterInput
  status: SearchableStringFilterInput
  storeCode: SearchableStringFilterInput
  totalAmount: SearchableFloatFilterInput
  totalEInvoice: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  year: SearchableStringFilterInput
}

input SearchEInvoiceQuickBookCustomersFilter {
  addressLine1: SearchableStringFilterInput
  addressLine2: SearchableStringFilterInput
  addressLine3: SearchableStringFilterInput
  and: [SearchEInvoiceQuickBookCustomersFilter]
  city: SearchableStringFilterInput
  companyTin: SearchableStringFilterInput
  country: SearchableStringFilterInput
  countryCode: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerName: SearchableStringFilterInput
  eInvoiceQuickBookCustomersId: SearchableStringFilterInput
  email: SearchableStringFilterInput
  idNumber: SearchableStringFilterInput
  idType: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchEInvoiceQuickBookCustomersFilter]
  or: [SearchEInvoiceQuickBookCustomersFilter]
  phoneNumber: SearchableStringFilterInput
  postalCode: SearchableStringFilterInput
  quickBookCustomerClassCode: SearchableStringFilterInput
  quickBookCustomerClassCodeName: SearchableStringFilterInput
  quickBookCustomerId: SearchableStringFilterInput
  quickBookCustomerName: SearchableStringFilterInput
  sstRegistrationNumber: SearchableStringFilterInput
  stateCode: SearchableStringFilterInput
  stateName: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchEInvoiceQuickBookItemsFilter {
  and: [SearchEInvoiceQuickBookItemsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  eInvoiceQuickBookItemsId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchEInvoiceQuickBookItemsFilter]
  or: [SearchEInvoiceQuickBookItemsFilter]
  quickBookItemClassCode: SearchableStringFilterInput
  quickBookItemClassCodeName: SearchableStringFilterInput
  quickBookItemId: SearchableStringFilterInput
  quickBookItemName: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchEInvoiceUploadFilter {
  and: [SearchEInvoiceUploadFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  eInvoiceUploadId: SearchableStringFilterInput
  errorPath: SearchableStringFilterInput
  fileName: SearchableStringFilterInput
  inputPath: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchEInvoiceUploadFilter]
  or: [SearchEInvoiceUploadFilter]
  status: SearchableStringFilterInput
  totalInvoice: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchEventFlowsResponseFilter {
  and: [SearchEventFlowsResponseFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  eventFlowId: SearchableStringFilterInput
  eventType: SearchableStringFilterInput
  flow: SearchableStringFilterInput
  isDisabled: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchEventFlowsResponseFilter]
  or: [SearchEventFlowsResponseFilter]
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchFacebookLiveCampaignsFilter {
  and: [SearchFacebookLiveCampaignsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  facebookLiveCampaignId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchFacebookLiveCampaignsFilter]
  or: [SearchFacebookLiveCampaignsFilter]
  salesChannelName: SearchableStringFilterInput
  scheduleEndDateTime: SearchableStringFilterInput
  scheduleStartDateTime: SearchableStringFilterInput
  status: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  storeName: SearchableStringFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchFaqCategoriesFilter {
  and: [SearchFaqCategoriesFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  faqCategoryId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchFaqCategoriesFilter]
  or: [SearchFaqCategoriesFilter]
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchFaqsFilter {
  and: [SearchFaqsFilter]
  answer: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  faqCategory: SearchableStringFilterInput
  faqId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchFaqsFilter]
  or: [SearchFaqsFilter]
  parentId: SearchableStringFilterInput
  question: SearchableStringFilterInput
  sequence: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchGalleryDetailsFilter {
  and: [SearchGalleryDetailsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  filesize: SearchableIntFilterInput
  galleryDetailId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  name: SearchableStringFilterInput
  not: [SearchGalleryDetailsFilter]
  or: [SearchGalleryDetailsFilter]
  s3Path: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchGetCollectionsFilter {
  and: [SearchGetCollectionsFilter]
  cover: SearchableStringFilterInput
  deliveryCompareAtPrice: SearchableFloatFilterInput
  deliveryPrice: SearchableFloatFilterInput
  deliveryPriceWithTax: SearchableFloatFilterInput
  description: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  hasStock: SearchableBooleanFilterInput
  hasVariant: SearchableBooleanFilterInput
  homeCollectionId: SearchableStringFilterInput
  image: SearchableStringFilterInput
  itemId: SearchableStringFilterInput
  itemProperty: SearchableStringFilterInput
  not: [SearchGetCollectionsFilter]
  or: [SearchGetCollectionsFilter]
  productIsDisabled: SearchableBooleanFilterInput
  promotionEndDateTime: SearchableStringFilterInput
  promotionStartDateTime: SearchableStringFilterInput
  seoUrl: SearchableStringFilterInput
  title: SearchableStringFilterInput
  totalRatings: SearchableIntFilterInput
  totalReviews: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
  video: SearchableStringFilterInput
}

input SearchHelpCenterFaqFilter {
  _typename: SearchableStringFilterInput
  and: [SearchHelpCenterFaqFilter]
  answer: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  faqCategory: SearchableStringFilterInput
  helpCenterFaqId: SearchableStringFilterInput
  not: [SearchHelpCenterFaqFilter]
  or: [SearchHelpCenterFaqFilter]
  question: SearchableStringFilterInput
  sequence: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
}

input SearchHomeCollectionsFilter {
  and: [SearchHomeCollectionsFilter]
  collectionId: SearchableStringFilterInput
  collectionImage: SearchableStringFilterInput
  collectionName: SearchableStringFilterInput
  collectionSeoUrl: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  homeCollectionId: SearchableStringFilterInput
  homeCollectionType: SearchableStringFilterInput
  isDisabled: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchHomeCollectionsFilter]
  or: [SearchHomeCollectionsFilter]
  sequence: SearchableIntFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchInStoreOrdersFilter {
  accountNo: SearchableStringFilterInput
  and: [SearchInStoreOrdersFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  hasDuplicateRecords: SearchableBooleanFilterInput
  inStoreOrderId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchInStoreOrdersFilter]
  or: [SearchInStoreOrdersFilter]
  posTerminalNo: SearchableStringFilterInput
  receiptNo: SearchableStringFilterInput
  status: SearchableStringFilterInput
  storeNo: SearchableStringFilterInput
  totalAmountSpent: SearchableFloatFilterInput
  totalDiscountAmount: SearchableFloatFilterInput
  totalPointsCollected: SearchableFloatFilterInput
  totalPointsRedeemed: SearchableFloatFilterInput
  totalVoucherDiscountAmount: SearchableFloatFilterInput
  transactionDate: SearchableStringFilterInput
  transactionTime: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchKdsOrdersFilter {
  acceptedDateTime: SearchableStringFilterInput
  and: [SearchKdsOrdersFilter]
  cancelledBy: SearchableStringFilterInput
  cancelledDateTime: SearchableStringFilterInput
  completedDateTime: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  createdDateTime: SearchableStringFilterInput
  customerFirstName: SearchableStringFilterInput
  customerLastName: SearchableStringFilterInput
  customerMobileNo: SearchableStringFilterInput
  deliveryNumber: SearchableStringFilterInput
  deliveryPartnerName: SearchableStringFilterInput
  deliveryType: SearchableStringFilterInput
  isAdvancedOrder: SearchableBooleanFilterInput
  kdsOrderId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchKdsOrdersFilter]
  noteToRider: SearchableStringFilterInput
  or: [SearchKdsOrdersFilter]
  orderId: SearchableStringFilterInput
  orderNumber: SearchableStringFilterInput
  orderType: SearchableStringFilterInput
  readyDateTime: SearchableStringFilterInput
  remarks: SearchableStringFilterInput
  requiredCutlery: SearchableBooleanFilterInput
  riderCarPlateNo: SearchableStringFilterInput
  riderJobNumber: SearchableStringFilterInput
  riderMobileNo: SearchableStringFilterInput
  riderName: SearchableStringFilterInput
  scheduledDateTime: SearchableStringFilterInput
  status: SearchableStringFilterInput
  storeCode: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  storeName: SearchableStringFilterInput
  totalOrderItems: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchKnowledgeBasesResponseFilter {
  and: [SearchKnowledgeBasesResponseFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  knowledgeBaseId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchKnowledgeBasesResponseFilter]
  or: [SearchKnowledgeBasesResponseFilter]
  processedS3Path: SearchableStringFilterInput
  sourceUrl: SearchableStringFilterInput
  status: SearchableStringFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchLandingPageBannersFilter {
  and: [SearchLandingPageBannersFilter]
  buttonAction: SearchableStringFilterInput
  buttonActionValue: SearchableStringFilterInput
  buttonTitle: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  description: SearchableStringFilterInput
  detailPageImage: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  homeImage: SearchableStringFilterInput
  landingPageBannerId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchLandingPageBannersFilter]
  or: [SearchLandingPageBannersFilter]
  sequence: SearchableIntFilterInput
  status: SearchableStringFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchLookupDetailFilter {
  and: [SearchLookupDetailFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  extractedDocumentLookupId: SearchableStringFilterInput
  not: [SearchLookupDetailFilter]
  or: [SearchLookupDetailFilter]
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchMarketplaceSyncHistoriesFilter {
  and: [SearchMarketplaceSyncHistoriesFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  merketPlaceSyncHistoryId: SearchableStringFilterInput
  noOfRecords: SearchableIntFilterInput
  not: [SearchMarketplaceSyncHistoriesFilter]
  or: [SearchMarketplaceSyncHistoriesFilter]
  salesChannelId: SearchableStringFilterInput
  salesChannelName: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  syncStatus: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchMemberPointLogFilter {
  and: [SearchMemberPointLogFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  expiredDateTime: SearchableStringFilterInput
  memberId: SearchableStringFilterInput
  memberPointLogId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchMemberPointLogFilter]
  or: [SearchMemberPointLogFilter]
  orderId: SearchableStringFilterInput
  points: SearchableFloatFilterInput
  referenceId: SearchableStringFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchMembershipTiersFilter {
  and: [SearchMembershipTiersFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  membershipTierId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchMembershipTiersFilter]
  or: [SearchMembershipTiersFilter]
  point: SearchableFloatFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchMerchantCreditTransactionsFilter {
  actionType: SearchableStringFilterInput
  amount: SearchableFloatFilterInput
  and: [SearchMerchantCreditTransactionsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantCreditTransactionId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  merchantOrderId: SearchableStringFilterInput
  not: [SearchMerchantCreditTransactionsFilter]
  or: [SearchMerchantCreditTransactionsFilter]
  orderNumber: SearchableStringFilterInput
  transactionId: SearchableStringFilterInput
}

input SearchModifierItemsFilter {
  and: [SearchModifierItemsFilter]
  availableStatus: SearchableStringFilterInput
  modifierId: SearchableStringFilterInput
  modifierName: SearchableStringFilterInput
  not: [SearchModifierItemsFilter]
  or: [SearchModifierItemsFilter]
  storeId: SearchableStringFilterInput
}

input SearchNotificationCampaignResponseFilter {
  actionId: SearchableStringFilterInput
  actionType: SearchableStringFilterInput
  and: [SearchNotificationCampaignResponseFilter]
  body: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  image: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchNotificationCampaignResponseFilter]
  notificationCampaignId: SearchableStringFilterInput
  or: [SearchNotificationCampaignResponseFilter]
  scheduledDateTime: SearchableStringFilterInput
  showToNewUser: SearchableBooleanFilterInput
  targetAudience: SearchTargetAudienceInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchOrdersFilter {
  accumulatedRefundAmount: SearchableFloatFilterInput
  and: [SearchOrdersFilter]
  billingAddress: SearchableStringFilterInput
  cancelledBy: SearchableStringFilterInput
  cancelledReason: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerAccountNo: SearchableStringFilterInput
  customerFirstName: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  customerLastName: SearchableStringFilterInput
  customerMobileNo: SearchableStringFilterInput
  deliveryAddress: SearchableStringFilterInput
  deliveryAddressLatitude: SearchableStringFilterInput
  deliveryAddressLongitude: SearchableStringFilterInput
  deliveryDiscount: SearchableFloatFilterInput
  deliveryFee: SearchableFloatFilterInput
  deliveryMode: SearchableStringFilterInput
  deliveryNumber: SearchableStringFilterInput
  deliveryOrderDateTime: SearchableStringFilterInput
  deliveryOrderId: SearchableStringFilterInput
  deliveryPartnerFee: SearchableFloatFilterInput
  deliveryPartnerName: SearchableStringFilterInput
  deliveryStatus: SearchableStringFilterInput
  deliveryType: SearchableStringFilterInput
  discountAmount: SearchableFloatFilterInput
  driverName: SearchableStringFilterInput
  driverPhoneNumber: SearchableStringFilterInput
  driverPlateNumber: SearchableStringFilterInput
  eGHLCardType: SearchableStringFilterInput
  eGHLIssuingBank: SearchableStringFilterInput
  eGHLPymtMethod: SearchableStringFilterInput
  floorOrUnit: SearchableStringFilterInput
  grandTotal: SearchableFloatFilterInput
  isAdvancedOrder: SearchableBooleanFilterInput
  isRefunded: SearchableBooleanFilterInput
  isReviewAvailable: SearchableBooleanFilterInput
  lalamoveOrderDateTime: SearchableStringFilterInput
  lalamoveOrderId: SearchableStringFilterInput
  lalamoveTotalFee: SearchableFloatFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchOrdersFilter]
  noteToRider: SearchableStringFilterInput
  or: [SearchOrdersFilter]
  orderCancellationDateTime: SearchableStringFilterInput
  orderCollectedDateTime: SearchableStringFilterInput
  orderCompletedDateTime: SearchableStringFilterInput
  orderDateTime: SearchableStringFilterInput
  orderId: SearchableStringFilterInput
  orderNumber: SearchableStringFilterInput
  orderType: SearchableStringFilterInput
  overallRating: SearchableIntFilterInput
  partialFulfilmentAmount: SearchableFloatFilterInput
  partialFulfilmentDiscount: SearchableFloatFilterInput
  paymentDateTime: SearchableStringFilterInput
  paymentStatus: SearchableStringFilterInput
  paymentType: SearchableStringFilterInput
  promoCode: SearchableStringFilterInput
  promoCodeDiscount: SearchableFloatFilterInput
  promoCodeId: SearchableStringFilterInput
  promoCodeTitle: SearchableStringFilterInput
  refundAmount: SearchableFloatFilterInput
  refundCompleteDateTime: SearchableStringFilterInput
  refundReason: SearchableStringFilterInput
  remarks: SearchableStringFilterInput
  requiredCutlery: SearchableBooleanFilterInput
  riderJobNumber: SearchableStringFilterInput
  salesAgentId: SearchableStringFilterInput
  salesChannelId: SearchableStringFilterInput
  salesChannelName: SearchableStringFilterInput
  scheduledDate: SearchableStringFilterInput
  scheduledDateTime: SearchableStringFilterInput
  scheduledTime: SearchableStringFilterInput
  sellerNote: SearchableStringFilterInput
  status: SearchableStringFilterInput
  storeCode: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  storeName: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  totalOrderItems: SearchableIntFilterInput
  totalPromoCodeDiscount: SearchableFloatFilterInput
  totalVoucherDiscount: SearchableFloatFilterInput
  transactionId: SearchableStringFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  voucherDiscount: SearchableFloatFilterInput
  voucherNumber: SearchableStringFilterInput
}

input SearchPelangiCustomersFilter {
  and: [SearchPelangiCustomersFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerGroup: SearchableStringFilterInput
  customerIdentifier: SearchableStringFilterInput
  customerName: SearchableStringFilterInput
  not: [SearchPelangiCustomersFilter]
  or: [SearchPelangiCustomersFilter]
  pelangiCustomerId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchPelangiIsbnFilter {
  and: [SearchPelangiIsbnFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerGroup: SearchableStringFilterInput
  inventoryId: SearchableStringFilterInput
  not: [SearchPelangiIsbnFilter]
  or: [SearchPelangiIsbnFilter]
  pelangiIsbnId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchPointConversionsFilter {
  and: [SearchPointConversionsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  effectiveEndDatTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  itemId: SearchableStringFilterInput
  itemProperty: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  multiplier: SearchableFloatFilterInput
  not: [SearchPointConversionsFilter]
  or: [SearchPointConversionsFilter]
  pointConversionId: SearchableStringFilterInput
  productId: SearchableStringFilterInput
  spent: SearchableFloatFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchPriceGroupsFilter {
  and: [SearchPriceGroupsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  increment: SearchableFloatFilterInput
  incrementType: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  name: SearchableStringFilterInput
  not: [SearchPriceGroupsFilter]
  or: [SearchPriceGroupsFilter]
  priceGroupId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchProductBundlesFilter {
  and: [SearchProductBundlesFilter]
  barcode: SearchableStringFilterInput
  collectionNames: SearchableStringFilterInput
  cover: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  deliveryCompareAtPrice: SearchableFloatFilterInput
  deliveryCostPerItem: SearchableFloatFilterInput
  deliveryPrice: SearchableFloatFilterInput
  deliveryPriceWithTax: SearchableFloatFilterInput
  description: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  image: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchProductBundlesFilter]
  or: [SearchProductBundlesFilter]
  pickupCompareAtPrice: SearchableFloatFilterInput
  pickupCostPerItem: SearchableFloatFilterInput
  pickupPrice: SearchableFloatFilterInput
  pickupPriceWithTax: SearchableFloatFilterInput
  productBundleId: SearchableStringFilterInput
  promotionEndDateTime: SearchableStringFilterInput
  promotionStartDateTime: SearchableStringFilterInput
  sellOnFacebookStore: SearchableBooleanFilterInput
  sellOnFoodPanda: SearchableBooleanFilterInput
  sellOnGrabFood: SearchableBooleanFilterInput
  sellOnGrabMart: SearchableBooleanFilterInput
  sellOnInstagram: SearchableBooleanFilterInput
  sellOnLazada: SearchableBooleanFilterInput
  sellOnOnlineStore: SearchableBooleanFilterInput
  sellOnPandaMart: SearchableBooleanFilterInput
  sellOnShopee: SearchableBooleanFilterInput
  seoDescription: SearchableStringFilterInput
  seoTitle: SearchableStringFilterInput
  seoUrl: SearchableStringFilterInput
  sku: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  video: SearchableStringFilterInput
}

input SearchProductCollectionsFilter {
  and: [SearchProductCollectionsFilter]
  banner: SearchableStringFilterInput
  conditionType: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  description: SearchableStringFilterInput
  icon: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  name: SearchableStringFilterInput
  not: [SearchProductCollectionsFilter]
  or: [SearchProductCollectionsFilter]
  productCollectionId: SearchableStringFilterInput
  seoDescription: SearchableStringFilterInput
  seoTitle: SearchableStringFilterInput
  seoUrl: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchProductExclusionsFilter {
  and: [SearchProductExclusionsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  itemId: SearchableStringFilterInput
  itemProperty: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchProductExclusionsFilter]
  or: [SearchProductExclusionsFilter]
  productExclusionId: SearchableStringFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchProductUOMsFilter {
  and: [SearchProductUOMsFilter]
  barcode: SearchableStringFilterInput
  collectionNames: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  image: SearchableStringFilterInput
  incomingQuantity: SearchableIntFilterInput
  isDisabled: SearchableBooleanFilterInput
  isProductTaxable: SearchableBooleanFilterInput
  isVirtualGoods: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  noOfPurchases: SearchableIntFilterInput
  not: [SearchProductUOMsFilter]
  or: [SearchProductUOMsFilter]
  productId: SearchableStringFilterInput
  productTitle: SearchableStringFilterInput
  productUOMId: SearchableStringFilterInput
  quantityForSales: SearchableIntFilterInput
  shippingDimensionHeight: SearchableFloatFilterInput
  shippingDimensionLength: SearchableFloatFilterInput
  shippingDimensionWidth: SearchableFloatFilterInput
  shippingWeight: SearchableFloatFilterInput
  shippingWeightUnit: SearchableStringFilterInput
  sku: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  totalStockQuantity: SearchableIntFilterInput
  trackQuantity: SearchableBooleanFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  variantName1: SearchableStringFilterInput
  variantName2: SearchableStringFilterInput
  variantName3: SearchableStringFilterInput
  variantValue1: SearchableStringFilterInput
  variantValue2: SearchableStringFilterInput
  variantValue3: SearchableStringFilterInput
  virtualGoodsExpiredAt: SearchableStringFilterInput
  virtualGoodsExpiryDays: SearchableStringFilterInput
}

input SearchProductsFilter {
  and: [SearchProductsFilter]
  code: SearchableStringFilterInput
  collectionNames: SearchableStringFilterInput
  cover: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  deliveryCompareAtPrice: SearchableFloatFilterInput
  deliveryPrice: SearchableFloatFilterInput
  description: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  hasVariant: SearchableBooleanFilterInput
  image: SearchableStringFilterInput
  isDisabled: SearchableBooleanFilterInput
  isVirtualGoods: SearchableBooleanFilterInput
  merchantId: SearchableStringFilterInput
  modifierProduct: SearchableBooleanFilterInput
  noOfPurchases: SearchableIntFilterInput
  noOfViews: SearchableIntFilterInput
  not: [SearchProductsFilter]
  or: [SearchProductsFilter]
  pickupCompareAtPrice: SearchableFloatFilterInput
  pickupPrice: SearchableFloatFilterInput
  platform: SearchableStringFilterInput
  productId: SearchableStringFilterInput
  promotionEndDateTime: SearchableStringFilterInput
  promotionStartDateTime: SearchableStringFilterInput
  salesAgentId: SearchableStringFilterInput
  sellOnFacebookStore: SearchableBooleanFilterInput
  sellOnFoodPanda: SearchableBooleanFilterInput
  sellOnGrabFood: SearchableBooleanFilterInput
  sellOnGrabMart: SearchableBooleanFilterInput
  sellOnInstagram: SearchableBooleanFilterInput
  sellOnLazada: SearchableBooleanFilterInput
  sellOnOnlineStore: SearchableBooleanFilterInput
  sellOnPandaMart: SearchableBooleanFilterInput
  sellOnShopee: SearchableBooleanFilterInput
  seoDescription: SearchableStringFilterInput
  seoTitle: SearchableStringFilterInput
  seoUrl: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  variantName1: SearchableStringFilterInput
  variantName2: SearchableStringFilterInput
  variantName3: SearchableStringFilterInput
  variantValues1: SearchableStringFilterInput
  variantValues2: SearchableStringFilterInput
  variantValues3: SearchableStringFilterInput
  video: SearchableStringFilterInput
  virtualGoodsExpiredAt: SearchableStringFilterInput
  virtualGoodsExpiryDays: SearchableStringFilterInput
}

input SearchPromoCodeCampaignsFilter {
  and: [SearchPromoCodeCampaignsFilter]
  category: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  deliveryDiscountType: SearchableIntFilterInput
  discountAmountCap: SearchableIntFilterInput
  discountOnProductValue: SearchableIntFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  isDisabled: SearchableBooleanFilterInput
  maxUserUsageLimit: SearchableIntFilterInput
  merchantId: SearchableStringFilterInput
  minimumCondition: SearchableIntFilterInput
  minimumPurchase: SearchableIntFilterInput
  minimumQuantity: SearchableIntFilterInput
  not: [SearchPromoCodeCampaignsFilter]
  or: [SearchPromoCodeCampaignsFilter]
  promoCode: SearchableStringFilterInput
  promoCodeCampaignId: SearchableStringFilterInput
  remainingUsage: SearchableIntFilterInput
  title: SearchableStringFilterInput
  totalUsageLimit: SearchableIntFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchPromotionalWidgetFilter {
  and: [SearchPromotionalWidgetFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchPromotionalWidgetFilter]
  or: [SearchPromotionalWidgetFilter]
  promotionalWidgetId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  widgetName: SearchableStringFilterInput
  widgetUrl: SearchableStringFilterInput
}

input SearchSalesAgentFilter {
  and: [SearchSalesAgentFilter]
  customOrderEnabled: SearchableBooleanFilterInput
  firstName: SearchableStringFilterInput
  lastName: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchSalesAgentFilter]
  or: [SearchSalesAgentFilter]
  salesAgentId: SearchableStringFilterInput
  username: SearchableStringFilterInput
}

input SearchSiteNavigationsFilter {
  and: [SearchSiteNavigationsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  isDisabled: SearchableBooleanFilterInput
  menuType: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  navigationType: SearchableStringFilterInput
  not: [SearchSiteNavigationsFilter]
  or: [SearchSiteNavigationsFilter]
  sequence: SearchableIntFilterInput
  siteNavigationId: SearchableStringFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchSmartTaggingFilter {
  and: [SearchSmartTaggingFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchSmartTaggingFilter]
  or: [SearchSmartTaggingFilter]
  smartTaggingId: SearchableStringFilterInput
  tagName: SearchableStringFilterInput
  totalListOfAssociatedProducts: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchSmartVoucherCampaignsResponseFilter {
  and: [SearchSmartVoucherCampaignsResponseFilter]
  assumptionConversion: SearchableFloatFilterInput
  campaignMessage: SearchableStringFilterInput
  campaignTitle: SearchableStringFilterInput
  campaignTotalCustomerParticipated: SearchableIntFilterInput
  campaignTotalTargetCustomer: SearchableIntFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  estimatedRevenue: SearchableFloatFilterInput
  merchantId: SearchableStringFilterInput
  messageStatus: SearchableStringFilterInput
  msgScheduleDateTime: SearchableStringFilterInput
  not: [SearchSmartVoucherCampaignsResponseFilter]
  or: [SearchSmartVoucherCampaignsResponseFilter]
  smartVoucherCampaignId: SearchableStringFilterInput
  targetCustomerSpending: SearchableFloatFilterInput
  totalCustomerParticipated: SearchableIntFilterInput
  totalRevenueEarned: SearchableFloatFilterInput
  totalTargetCustomer: SearchableIntFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  voucherDiscount: SearchableFloatFilterInput
  voucherExpiryDate: SearchableStringFilterInput
  voucherMinSpend: SearchableFloatFilterInput
}

input SearchSmsTemplateFilter {
  and: [SearchSmsTemplateFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantDepartmentId: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchSmsTemplateFilter]
  or: [SearchSmsTemplateFilter]
  smsTemplateId: SearchableStringFilterInput
  smsText: SearchableStringFilterInput
  templateMediaContent: SearchableStringFilterInput
  templateMediaType: SearchableStringFilterInput
  templateName: SearchableStringFilterInput
  templateStatus: SearchableStringFilterInput
  templateType: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchSplashScreensFilter {
  and: [SearchSplashScreensFilter]
  buttonAction: SearchableStringFilterInput
  buttonActionValue: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  homeImage: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchSplashScreensFilter]
  or: [SearchSplashScreensFilter]
  sequence: SearchableIntFilterInput
  splashScreenId: SearchableStringFilterInput
  status: SearchableStringFilterInput
  title: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchStampingCampaignFilter {
  and: [SearchStampingCampaignFilter]
  availableStatus: SearchableStringFilterInput
  endDate: SearchableStringFilterInput
  modifierId: SearchableStringFilterInput
  modifierName: SearchableStringFilterInput
  not: [SearchStampingCampaignFilter]
  or: [SearchStampingCampaignFilter]
  orderType: SearchableStringFilterInput
  stampingCampaignTitle: SearchableStringFilterInput
  stampingCampaignType: SearchableStringFilterInput
  startDate: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
}

input SearchStockImagesFilter {
  and: [SearchStockImagesFilter]
  not: [SearchStockImagesFilter]
  or: [SearchStockImagesFilter]
  stockImageCategory: SearchableStringFilterInput
  stockImageId: SearchableStringFilterInput
  stockImageUrl: SearchableStringFilterInput
}

input SearchStockMovementsFilter {
  and: [SearchStockMovementsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  expectedArrivalDate: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchStockMovementsFilter]
  or: [SearchStockMovementsFilter]
  referenceNumber: SearchableStringFilterInput
  status: SearchableStringFilterInput
  stockMovementId: SearchableStringFilterInput
  supplierId: SearchableStringFilterInput
  supplierName: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  totalOrderedQuantity: SearchableIntFilterInput
  totalReceivedQuantity: SearchableIntFilterInput
  trackingNumber: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchStoreGroupsFilter {
  and: [SearchStoreGroupsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  name: SearchableStringFilterInput
  not: [SearchStoreGroupsFilter]
  or: [SearchStoreGroupsFilter]
  storeGroupId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchStoreProductsFilter {
  and: [SearchStoreProductsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  deliveryCompareAtPrice: SearchableFloatFilterInput
  deliveryPrice: SearchableFloatFilterInput
  deliveryPriceWithTax: SearchableFloatFilterInput
  isDisabled: SearchableBooleanFilterInput
  itemId: SearchableStringFilterInput
  itemImage: SearchableStringFilterInput
  itemIsVirtualGoods: SearchableBooleanFilterInput
  itemProperty: SearchableStringFilterInput
  itemSku: SearchableStringFilterInput
  itemTitle: SearchableStringFilterInput
  itemVariantName1: SearchableStringFilterInput
  itemVariantName2: SearchableStringFilterInput
  itemVariantName3: SearchableStringFilterInput
  itemVariantValue1: SearchableStringFilterInput
  itemVariantValue2: SearchableStringFilterInput
  itemVariantValue3: SearchableStringFilterInput
  itemVirtualGoodsExpiredAt: SearchableStringFilterInput
  itemVirtualGoodsExpiryDays: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  noOfPurchases: SearchableIntFilterInput
  not: [SearchStoreProductsFilter]
  or: [SearchStoreProductsFilter]
  pickupCompareAtPrice: SearchableFloatFilterInput
  pickupPrice: SearchableFloatFilterInput
  pickupPriceWithTax: SearchableFloatFilterInput
  quantityForSales: SearchableIntFilterInput
  quantityType: SearchableStringFilterInput
  salesChannelName: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  storeName: SearchableStringFilterInput
  storeProductId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchStoresFilter {
  acceptOrderWithMinPurchase: SearchableBooleanFilterInput
  address: SearchableStringFilterInput
  and: [SearchStoresFilter]
  city: SearchableStringFilterInput
  closeHour: SearchableStringFilterInput
  code: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  deliveryDiscountType: SearchableStringFilterInput
  deliveryFee: SearchableIntFilterInput
  deliveryGracePeriod: SearchableIntFilterInput
  deliveryMinPurchaseAmount: SearchableIntFilterInput
  deliveryServiceAvailable: SearchableBooleanFilterInput
  eCommEndDate: SearchableStringFilterInput
  eCommStartDate: SearchableStringFilterInput
  freeDeliveryWithMinPurchase: SearchableBooleanFilterInput
  group: SearchableStringFilterInput
  hasSeatingArea: SearchableBooleanFilterInput
  isDisabled: SearchableBooleanFilterInput
  isOffline24Hour: SearchableBooleanFilterInput
  isOnline24Hour: SearchableBooleanFilterInput
  lastOrderTime: SearchableStringFilterInput
  lastSyncOrderDateTime: SearchableStringFilterInput
  latitude: SearchableStringFilterInput
  longitude: SearchableStringFilterInput
  managerContact: SearchableStringFilterInput
  managerEmail: SearchableStringFilterInput
  managerName: SearchableStringFilterInput
  maxOrderQty: SearchableIntFilterInput
  merchantId: SearchableStringFilterInput
  minDeliveryDuration: SearchableIntFilterInput
  minFoodPreparationDuration: SearchableIntFilterInput
  name: SearchableStringFilterInput
  not: [SearchStoresFilter]
  openHour: SearchableStringFilterInput
  or: [SearchStoresFilter]
  pickupServiceAvailable: SearchableBooleanFilterInput
  postalCode: SearchableStringFilterInput
  priceGroupName: SearchableStringFilterInput
  routingOption: SearchableStringFilterInput
  salesChannelId: SearchableStringFilterInput
  salesChannelName: SearchableStringFilterInput
  state: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  visibleToOnlineStore: SearchableBooleanFilterInput
}

input SearchSuppliersFilter {
  address: SearchableStringFilterInput
  and: [SearchSuppliersFilter]
  contact: SearchableStringFilterInput
  contactName: SearchableStringFilterInput
  country: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  email: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  name: SearchableStringFilterInput
  not: [SearchSuppliersFilter]
  or: [SearchSuppliersFilter]
  supplierId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchTaggingsFilter {
  and: [SearchTaggingsFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  name: SearchableStringFilterInput
  not: [SearchTaggingsFilter]
  or: [SearchTaggingsFilter]
  taggingId: SearchableStringFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchTargetAudienceInput {
  csvFilePath: SearchableStringFilterInput
  csvLastUpdated: SearchableStringFilterInput
  method: SearchableStringFilterInput
  numberOfAudience: SearchableIntFilterInput
}

input SearchTimelinesFilter {
  and: [SearchTimelinesFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  description: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchTimelinesFilter]
  or: [SearchTimelinesFilter]
  timelineForId: SearchableStringFilterInput
  timelineId: SearchableStringFilterInput
  title: SearchableStringFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchTruckPackingListsResponseFilter {
  and: [SearchTruckPackingListsResponseFilter]
  branchId: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchTruckPackingListsResponseFilter]
  or: [SearchTruckPackingListsResponseFilter]
  packingDate: SearchableStringFilterInput
  packingSlipUrl: SearchableStringFilterInput
  packingTime: SearchableStringFilterInput
  truckCapacityId: SearchableStringFilterInput
  truckId: SearchableStringFilterInput
  truckName: SearchableStringFilterInput
  truckPackingListId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchTruckSchedulesResponseFilter {
  and: [SearchTruckSchedulesResponseFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  day: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchTruckSchedulesResponseFilter]
  or: [SearchTruckSchedulesResponseFilter]
  postal: SearchableStringFilterInput
  time: SearchableStringFilterInput
  truckId: SearchableStringFilterInput
  truckScheduleId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchTrucksResponseFilter {
  and: [SearchTrucksResponseFilter]
  branchList: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  limit: SearchableFloatFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchTrucksResponseFilter]
  or: [SearchTrucksResponseFilter]
  truckId: SearchableStringFilterInput
  truckName: SearchableStringFilterInput
  truckNumber: SearchableStringFilterInput
  truckScheduleDay: SearchableStringFilterInput
  truckScheduleTime: SearchableStringFilterInput
  unit: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
}

input SearchUploadFileDetailFilter {
  and: [SearchUploadFileDetailFilter]
  createdAt: SearchableStringFilterInput
  documentType: SearchableStringFilterInput
  fileName: SearchableStringFilterInput
  inputS3Path: SearchableStringFilterInput
  marketPlace: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchUploadFileDetailFilter]
  or: [SearchUploadFileDetailFilter]
  outputS3Path: SearchableStringFilterInput
  status: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  uploadFileDetailId: SearchableStringFilterInput
}

input SearchUserGroupsResponseFilter {
  and: [SearchUserGroupsResponseFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  not: [SearchUserGroupsResponseFilter]
  or: [SearchUserGroupsResponseFilter]
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  userGroupId: [SearchableStringFilterInput]
  userGroupName: SearchableStringFilterInput
}

input SearchUsersFilter {
  accountId: SearchableStringFilterInput
  accountName: SearchableStringFilterInput
  and: [SearchUsersFilter]
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  email: SearchableStringFilterInput
  merchantId: SearchableStringFilterInput
  name: SearchableStringFilterInput
  not: [SearchUsersFilter]
  or: [SearchUsersFilter]
  storeId: SearchableStringFilterInput
  storeName: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  userId: SearchableStringFilterInput
}

input SearchVouchersFilter {
  and: [SearchVouchersFilter]
  category: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerCondition: SearchableStringFilterInput
  deliveryDiscountType: SearchableStringFilterInput
  discountAmountCap: SearchableFloatFilterInput
  discountOnProductValue: SearchableFloatFilterInput
  isShareable: SearchableBooleanFilterInput
  isUnlimitedDistribution: SearchableBooleanFilterInput
  maxUserObtainLimit: SearchableIntFilterInput
  merchantId: SearchableStringFilterInput
  minimumAmount: SearchableFloatFilterInput
  minimumCondition: SearchableStringFilterInput
  minimumQuantity: SearchableIntFilterInput
  not: [SearchVouchersFilter]
  or: [SearchVouchersFilter]
  orderType: SearchableStringFilterInput
  smartVoucherCampaignId: SearchableStringFilterInput
  status: SearchableStringFilterInput
  title: SearchableStringFilterInput
  totalDistributed: SearchableIntFilterInput
  totalDistributionLimit: SearchableIntFilterInput
  type: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  voucherIcon: SearchableStringFilterInput
  voucherId: SearchableStringFilterInput
}

input SearchableBooleanFilterInput {
  eq: Boolean
  ne: Boolean
}

input SearchableColumnMappingsFilterInput {
  inputFieldName: SearchableStringFilterInput
  outputFieldName: SearchableStringFilterInput
}

input SearchableExtractedDocumentDataLabelsFilterInput {
  formData: [InputDocumentTableFormDataDataLabels]
  tableData: [InputDocumentTableFormDataDataLabels]
}

input SearchableFloatFilterInput {
  eq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
}

input SearchableIntFilterInput {
  eq: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  ne: Int
}

input SearchableLookupFieldFilterInput {
  extractedDocumentLookupId: SearchableStringFilterInput
  fieldName: SearchableStringFilterInput
  keyColumns: [SearchableStringFilterInput]
  lookupType: SearchableStringFilterInput
  relationship: SearchableStringFilterInput
  requireKey: SearchableStringFilterInput
  secondaryFieldName: [SearchableStringFilterInput]
  shareKey: SearchableStringFilterInput
}

input SearchableStringFilterInput {
  eq: String
  exists: Boolean
  gt: String
  gte: String
  lt: String
  lte: String
  match: String
  matchPhrase: String
  matchPhrasePrefix: String
  multiMatch: String
  ne: String
  regexp: String
  wildcard: String
}

input SelectedDemographicsInput {
  ageFrom: Int
  ageTo: Int
  gender: String
  joinedFrom: String
  joinedTo: String
  membershipTier: [MembershipTierInput]
}

input SelectedTagsInput {
  smartTaggingId: String
  tagName: String
  taggingId: String
}

input SmartTaggingConditionInput {
  numberOfPurchase: Int
}

input SmartTaggingProductInput {
  itemCover: String
  itemId: String
  itemTitle: String
  itemType: String
}

input SmartVoucherVariableInput {
  name: String
  value: String
}

input StampConditionMappingInput {
  exclude: Boolean
  ids: [StampRewardsInput]
  type: String
}

input StampRewardsInput {
  id: String
  quantity: Int
}

input StockMovementDetailInput {
  orderedQuantity: Int
  productId: String
  productImage: String
  productTitle: String
  productUOMId: String
  receivedQuantity: Int
  remarks: String
  stockMovementDetailId: String
  variantName1: String
  variantName2: String
  variantName3: String
  variantValue1: String
  variantValue2: String
  variantValue3: String
}

input StoreOpenCloseHoursInput {
  close: String
  day: String
  open: String
}

input StoreOperatingHourInput {
  closingHour: String
  day: String
  enabled: Boolean
  endingTimeAfterMidnight: Boolean
  openingHour: String
}

input StoreProductInput {
  createdAt: String
  createdBy: String
  deliveryCompareAtPrice: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  isDisabled: Boolean
  itemId: String
  itemImage: String
  itemIsVirtualGoods: Boolean
  itemProperty: String
  itemSku: String
  itemTitle: String
  itemVariantName1: String
  itemVariantName2: String
  itemVariantName3: String
  itemVariantValue1: String
  itemVariantValue2: String
  itemVariantValue3: String
  itemVirtualGoodsExpiredAt: String
  itemVirtualGoodsExpiryDays: String
  marketPlaceAttributes: [MarketPlaceProductSpecInput]
  marketPlaceBrand: MarketPlaceProductSpecInput
  marketPlaceCategories: [MarketPlaceProductSpecInput]
  marketPlaceProductCode: String
  marketPlaceProductUOMCode: String
  merchantId: String
  modifierGroups: [ModifierGroupsInput]
  noOfPurchases: Int
  pickupCompareAtPrice: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  quantityForSales: Int
  quantityType: String
  salesChannelName: String
  storeId: String
  storeName: String
  storeProductId: String
  updatedAt: String
  updatedBy: String
}

input TargetAudienceInput {
  csvFilePath: String
  csvLastUpdated: String
  method: String
  numberOfAudience: Int
}

input TimeslotInput {
  effectiveEndDate: String
  effectiveEndTime: String
  effectiveStartDate: String
  effectiveStartTime: String
}

input TriggerExportCsvFilter {
  #  Customer
  accountNo: SearchableStringFilterInput
  accumulatedRefundAmount: SearchableFloatFilterInput
  activated: SearchableBooleanFilterInput
  address: SearchableStringFilterInput
  address2: SearchableStringFilterInput
  adjustmentAmount: SearchableFloatFilterInput
  adjustmentStatus: SearchableStringFilterInput
  adjustmentType: SearchableStringFilterInput
  adminReason: SearchableStringFilterInput
  and: [TriggerExportCsvFilter]
  billingAddress: SearchableStringFilterInput
  cancelledBy: SearchableStringFilterInput
  cancelledReason: SearchableStringFilterInput
  city: SearchableStringFilterInput
  code: SearchableStringFilterInput
  collectionNames: SearchableStringFilterInput
  companyCityName: SearchableStringFilterInput
  companyName: SearchableStringFilterInput
  companyPostalCode: SearchableStringFilterInput
  companyStateCode: SearchableStringFilterInput
  companyStateName: SearchableStringFilterInput
  companyTin: SearchableStringFilterInput
  consentPersonalData: SearchableBooleanFilterInput
  country: SearchableStringFilterInput
  cover: SearchableStringFilterInput
  createdAt: SearchableStringFilterInput
  createdBy: SearchableStringFilterInput
  customerAccountNo: SearchableStringFilterInput
  customerFirstName: SearchableStringFilterInput
  customerId: SearchableStringFilterInput
  customerLastName: SearchableStringFilterInput
  customerMobileNo: SearchableStringFilterInput
  customerReason: SearchableStringFilterInput
  dateOfBirth: SearchableStringFilterInput
  deliveryAddress: SearchableStringFilterInput
  deliveryAddressLatitude: SearchableStringFilterInput
  deliveryAddressLongitude: SearchableStringFilterInput
  deliveryCompareAtPrice: SearchableFloatFilterInput
  deliveryDiscount: SearchableFloatFilterInput
  deliveryFee: SearchableFloatFilterInput
  deliveryMode: SearchableStringFilterInput
  deliveryNumber: SearchableStringFilterInput
  deliveryOrderDateTime: SearchableStringFilterInput
  deliveryOrderId: SearchableStringFilterInput
  deliveryPartnerFee: SearchableFloatFilterInput
  deliveryPartnerName: SearchableStringFilterInput
  deliveryPrice: SearchableFloatFilterInput
  deliveryStatus: SearchableStringFilterInput
  deliveryType: SearchableStringFilterInput
  description: SearchableStringFilterInput
  deviceEndpoint: SearchableStringFilterInput
  deviceToken: SearchableStringFilterInput
  discountAmount: SearchableFloatFilterInput
  documentType: SearchableStringFilterInput
  driverName: SearchableStringFilterInput
  driverPhoneNumber: SearchableStringFilterInput
  driverPlateNumber: SearchableStringFilterInput
  eGHLCardType: SearchableStringFilterInput
  eGHLIssuingBank: SearchableStringFilterInput
  eGHLPymtMethod: SearchableStringFilterInput
  #  EInvoice
  eInvoiceId: SearchableStringFilterInput
  eInvoiceNo: SearchableStringFilterInput
  effectiveEndDateTime: SearchableStringFilterInput
  effectiveStartDateTime: SearchableStringFilterInput
  email: SearchableStringFilterInput
  emailSubcriptionStatus: SearchableStringFilterInput
  employmentStatus: SearchableStringFilterInput
  facebookID: SearchableStringFilterInput
  firstName: SearchableStringFilterInput
  floorOrUnit: SearchableStringFilterInput
  fullName: SearchableStringFilterInput
  gender: SearchableStringFilterInput
  grandTotal: SearchableFloatFilterInput
  hasCompletedProfile: SearchableBooleanFilterInput
  hasRewarded: SearchableBooleanFilterInput
  hasVariant: SearchableBooleanFilterInput
  idNumber: SearchableStringFilterInput
  idType: SearchableStringFilterInput
  identityCard: SearchableStringFilterInput
  image: SearchableStringFilterInput
  isAdvancedOrder: SearchableBooleanFilterInput
  isBlocked: SearchableBooleanFilterInput
  isDisabled: SearchableBooleanFilterInput
  isFacebook: SearchableBooleanFilterInput
  isInAdjustment: SearchableBooleanFilterInput
  isRefunded: SearchableBooleanFilterInput
  isReviewAvailable: SearchableBooleanFilterInput
  lalamoveOrderDateTime: SearchableStringFilterInput
  lalamoveOrderId: SearchableStringFilterInput
  lalamoveTotalFee: SearchableFloatFilterInput
  lastName: SearchableStringFilterInput
  maritalStatus: SearchableStringFilterInput
  maxRejectCancelDocsDateTime: SearchableStringFilterInput
  #  General
  merchantId: SearchableStringFilterInput
  mobileNo: SearchableStringFilterInput
  nationality: SearchableStringFilterInput
  noOfPurchases: SearchableIntFilterInput
  noOfViews: SearchableIntFilterInput
  not: [TriggerExportCsvFilter]
  noteToRider: SearchableStringFilterInput
  or: [TriggerExportCsvFilter]
  orderCancellationDateTime: SearchableStringFilterInput
  orderCollectedDateTime: SearchableStringFilterInput
  orderCompletedDateTime: SearchableStringFilterInput
  orderDateTime: SearchableStringFilterInput
  #  Order
  orderId: SearchableStringFilterInput
  orderNumber: SearchableStringFilterInput
  orderType: SearchableStringFilterInput
  overallRating: SearchableIntFilterInput
  partialFulfilmentAmount: SearchableFloatFilterInput
  partialFulfilmentDiscount: SearchableFloatFilterInput
  password: SearchableStringFilterInput
  paymentDateTime: SearchableStringFilterInput
  paymentStatus: SearchableStringFilterInput
  personalIncomeLevel: SearchableStringFilterInput
  phoneNumber: SearchableStringFilterInput
  pickupCompareAtPrice: SearchableFloatFilterInput
  pickupPrice: SearchableFloatFilterInput
  posType: SearchableStringFilterInput
  postal: SearchableStringFilterInput
  primaryEmail: SearchableStringFilterInput
  #  Product
  productId: SearchableStringFilterInput
  profilePicture: SearchableStringFilterInput
  promoCode: SearchableStringFilterInput
  promoCodeDiscount: SearchableFloatFilterInput
  promoCodeId: SearchableStringFilterInput
  promoCodeTitle: SearchableStringFilterInput
  promotionEndDateTime: SearchableStringFilterInput
  promotionStartDateTime: SearchableStringFilterInput
  qrCode: SearchableStringFilterInput
  race: SearchableStringFilterInput
  receiptNumber: SearchableStringFilterInput
  refundAmount: SearchableFloatFilterInput
  refundCompleteDateTime: SearchableStringFilterInput
  refundReason: SearchableStringFilterInput
  remarks: SearchableStringFilterInput
  requiredCutlery: SearchableBooleanFilterInput
  riderJobNumber: SearchableStringFilterInput
  salesChannelId: SearchableStringFilterInput
  salesChannelName: SearchableStringFilterInput
  scheduledDateTime: SearchableStringFilterInput
  secondaryEmail: SearchableStringFilterInput
  sellOnFacebookStore: SearchableBooleanFilterInput
  sellOnFoodPanda: SearchableBooleanFilterInput
  sellOnGrabFood: SearchableBooleanFilterInput
  sellOnGrabMart: SearchableBooleanFilterInput
  sellOnInstagram: SearchableBooleanFilterInput
  sellOnLazada: SearchableBooleanFilterInput
  sellOnOnlineStore: SearchableBooleanFilterInput
  sellOnPandaMart: SearchableBooleanFilterInput
  sellOnShopee: SearchableBooleanFilterInput
  sellerNote: SearchableStringFilterInput
  seoDescription: SearchableStringFilterInput
  seoTitle: SearchableStringFilterInput
  seoUrl: SearchableStringFilterInput
  signedUpDateTime: SearchableStringFilterInput
  source: SearchableStringFilterInput
  sstRegistrationNumber: SearchableStringFilterInput
  state: SearchableStringFilterInput
  status: SearchableStringFilterInput
  storeCode: SearchableStringFilterInput
  storeId: SearchableStringFilterInput
  storeName: SearchableStringFilterInput
  taggingNames: SearchableStringFilterInput
  title: SearchableStringFilterInput
  totalOrderItems: SearchableIntFilterInput
  totalPromoCodeDiscount: SearchableFloatFilterInput
  totalSalesOrder: SearchableIntFilterInput
  totalSpent: SearchableFloatFilterInput
  totalVoucherDiscount: SearchableFloatFilterInput
  transactionId: SearchableStringFilterInput
  updatedAt: SearchableStringFilterInput
  updatedBy: SearchableStringFilterInput
  variantName1: SearchableStringFilterInput
  variantName2: SearchableStringFilterInput
  variantName3: SearchableStringFilterInput
  variantValues1: SearchableStringFilterInput
  variantValues2: SearchableStringFilterInput
  variantValues3: SearchableStringFilterInput
  video: SearchableStringFilterInput
  voucherDiscount: SearchableFloatFilterInput
  voucherNumber: SearchableStringFilterInput
}

input UpdateStoreItemInput {
  deliveryCompareAtPrice: Float
  deliveryCostPerItem: Float
  deliveryPrice: Float
  deliveryPriceWithTax: Float
  isSellingOffline: Boolean
  itemId: String
  itemProperty: String
  pickupCompareAtPrice: Float
  pickupCostPerItem: Float
  pickupPrice: Float
  pickupPriceWithTax: Float
  quantityForSales: Int
  storeProductId: String
}

input UserMatrixInput {
  children: [UserMatrixSubmoduleInput]
  module: String
}

input UserMatrixSubmoduleInput {
  canAdd: Boolean
  canDelete: Boolean
  canEdit: Boolean
  canList: Boolean
  canView: Boolean
  children: [UserMatrixSubmoduleInput]
  title: String
  userMatrixId: String
}

input VoucherProductConditionMappingInput {
  exclude: Boolean
  ids: [String]
  type: String
}
